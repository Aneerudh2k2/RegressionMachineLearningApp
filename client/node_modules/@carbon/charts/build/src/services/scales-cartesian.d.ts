import { Service } from "./service";
import { AxisPositions, CartesianOrientations, ThresholdOptions } from "../interfaces";
export declare class CartesianScales extends Service {
    protected scaleTypes: {
        top: any;
        right: any;
        bottom: any;
        left: any;
    };
    protected scales: {
        top: any;
        right: any;
        bottom: any;
        left: any;
    };
    protected domainAxisPosition: AxisPositions;
    protected rangeAxisPosition: AxisPositions;
    protected orientation: CartesianOrientations;
    getDomainAxisPosition(): AxisPositions;
    getRangeAxisPosition(): AxisPositions;
    getAxisOptions(position: AxisPositions): any;
    getDomainAxisOptions(): any;
    getRangeAxisOptions(): any;
    update(animate?: boolean): void;
    findDomainAndRangeAxes(): void;
    determineOrientation(): void;
    getOrientation(): CartesianOrientations;
    getScaleByPosition(axisPosition: AxisPositions): any;
    getScaleTypeByPosition(axisPosition: AxisPositions): any;
    getDomainAxisScaleType(): any;
    getRangeAxisScaleType(): any;
    getDomainScale(): any;
    getRangeScale(): any;
    getMainXAxisPosition(): AxisPositions;
    getMainYAxisPosition(): AxisPositions;
    getMainXScale(): any;
    getMainYScale(): any;
    getValueFromScale(axisPosition: AxisPositions, datum: any, index?: number): any;
    getDomainValue(d: any, i: any): any;
    getRangeValue(d: any, i: any): any;
    getDomainIdentifier(): any;
    getRangeIdentifier(): any;
    /** Uses the Y Axis to get data items associated with that value. */
    getDataFromDomain(domainValue: any): any;
    extendsDomain(axisPosition: AxisPositions, domain: any): number[] | Date[];
    protected findMainVerticalAxisPosition(): AxisPositions.LEFT | AxisPositions.RIGHT;
    protected findMainHorizontalAxisPosition(): AxisPositions.TOP | AxisPositions.BOTTOM;
    protected findDomainAndRangeAxesPositions(mainVerticalAxisPosition: AxisPositions, mainHorizontalAxisPosition: AxisPositions): {
        domainAxisPosition: any;
        rangeAxisPosition: any;
    };
    protected getScaleDomain(axisPosition: AxisPositions): any;
    protected createScale(axisPosition: AxisPositions): any;
    getHighestDomainThreshold(): null | {
        threshold: ThresholdOptions;
        scaleValue: number;
    };
    getHighestRangeThreshold(): null | {
        threshold: ThresholdOptions;
        scaleValue: number;
    };
}
