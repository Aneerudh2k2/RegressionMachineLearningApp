{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from \"../component\";\nimport { DOMUtils } from \"../../services\";\nimport { Roles, Events, GaugeTypes, ArrowDirections } from \"../../interfaces\";\nimport { Tools } from \"../../tools\"; // D3 Imports\n\nimport { select } from \"d3-selection\";\nimport { arc } from \"d3-shape\"; // arrow paths for delta\n\nvar ARROW_UP_PATH_STRING = \"4,10 8,6 12,10\";\nvar ARROW_DOWN_PATH_STRING = \"12,6 8,10 4,6\";\n\nvar Gauge =\n/** @class */\nfunction (_super) {\n  __extends(Gauge, _super);\n\n  function Gauge() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = \"gauge\";\n    return _this;\n  }\n\n  Gauge.prototype.init = function () {\n    var eventsFragment = this.services.events;\n  };\n\n  Gauge.prototype.getValue = function () {\n    var _a, _b;\n\n    var data = this.model.getData();\n    var value = (_b = (_a = data.find(function (d) {\n      return d.group === \"value\";\n    })) === null || _a === void 0 ? void 0 : _a.value, _b !== null && _b !== void 0 ? _b : null);\n    return value;\n  };\n\n  Gauge.prototype.getValueRatio = function () {\n    var value = Tools.clamp(this.getValue(), 0, 100);\n    return value / 100;\n  };\n\n  Gauge.prototype.getDelta = function () {\n    var _a, _b;\n\n    var data = this.model.getData();\n    var delta = (_b = (_a = data.find(function (d) {\n      return d.group === \"delta\";\n    })) === null || _a === void 0 ? void 0 : _a.value, _b !== null && _b !== void 0 ? _b : null);\n    return delta;\n  };\n\n  Gauge.prototype.getArcRatio = function () {\n    var options = this.model.getOptions();\n    var type = Tools.getProperty(options, \"gauge\", \"type\");\n    var arcRatio = type === GaugeTypes.FULL ? 1 : 0.5;\n    return arcRatio;\n  };\n\n  Gauge.prototype.getArcSize = function () {\n    return this.getArcRatio() * Math.PI * 2;\n  };\n\n  Gauge.prototype.getStartAngle = function () {\n    var arcSize = this.getArcSize();\n\n    if (arcSize === 2 * Math.PI) {\n      return 0;\n    }\n\n    return -arcSize / 2;\n  }; // use provided arrow direction or default to using the delta\n\n\n  Gauge.prototype.getArrow = function (delta) {\n    var options = this.model.getOptions();\n    var arrowDirection = Tools.getProperty(options, \"gauge\", \"deltaArrow\", \"direction\");\n\n    switch (arrowDirection) {\n      case ArrowDirections.UP:\n        return ARROW_UP_PATH_STRING;\n\n      case ArrowDirections.DOWN:\n        return ARROW_DOWN_PATH_STRING;\n\n      default:\n        return delta > 0 ? ARROW_UP_PATH_STRING : ARROW_DOWN_PATH_STRING;\n    }\n  };\n\n  Gauge.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var self = this;\n    var svg = this.getContainerSVG();\n    var options = this.model.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var value = this.getValue();\n    var valueRatio = this.getValueRatio();\n    var arcSize = this.getArcSize(); // angles for drawing the gauge\n\n    var startAngle = this.getStartAngle();\n    var rotationAngle = valueRatio * arcSize;\n    var currentAngle = startAngle + rotationAngle;\n    var endAngle = startAngle + arcSize; // Compute the outer radius needed\n\n    var radius = this.computeRadius();\n    var innerRadius = this.getInnerRadius(); // draw the container and arc\n\n    this.backgroundArc = arc().innerRadius(innerRadius).outerRadius(radius).startAngle(currentAngle).endAngle(endAngle);\n    this.arc = arc().innerRadius(innerRadius).outerRadius(radius).startAngle(startAngle).endAngle(currentAngle); // draw the container\n\n    DOMUtils.appendOrSelect(svg, \"path.arc-background\").attr(\"d\", this.backgroundArc).attr(\"role\", Roles.GROUP); // Add data arc\n\n    var arcValue = svg.selectAll(\"path.arc-foreground\").data([value]);\n    arcValue.enter().append(\"path\").attr(\"class\", \"arc-foreground\").merge(arcValue).attr(\"d\", this.arc).attr(\"fill\", function (d) {\n      return self.model.getFillColor(d[groupMapsTo]);\n    }) // a11y\n    .attr(\"role\", Roles.GRAPHICS_SYMBOL).attr(\"aria-roledescription\", \"value\").attr(\"aria-label\", function (d) {\n      return d.value;\n    }); // Position Arc\n\n    svg.attr(\"transform\", \"translate(\" + radius + \", \" + radius + \")\"); // draw the value and delta to the center\n\n    this.drawValueNumber();\n    this.drawDelta();\n    arcValue.exit().remove(); // Add event listeners\n\n    this.addEventListeners();\n  };\n  /**\n   * draws the value number associated with the Gauge component in the center\n   */\n\n\n  Gauge.prototype.drawValueNumber = function () {\n    var svg = this.getContainerSVG();\n    var options = this.model.getOptions();\n    var arcType = Tools.getProperty(options, \"gauge\", \"type\");\n    var value = this.getValue();\n    var delta = this.getDelta(); // Sizing and positions relative to the radius\n\n    var radius = this.computeRadius();\n    var valueFontSize = Tools.getProperty(options, \"gauge\", \"valueFontSize\"); // if there is a delta, use the size to center the numbers, otherwise center the valueNumber\n\n    var deltaFontSize = Tools.getProperty(options, \"gauge\", \"deltaFontSize\");\n    var numberSpacing = Tools.getProperty(options, \"gauge\", \"numberSpacing\"); // circular gauge without delta should have valueNumber centered\n\n    var numbersYPosition = 0;\n\n    if (arcType === GaugeTypes.FULL && !delta) {\n      numbersYPosition = deltaFontSize(radius);\n    } else if (arcType === GaugeTypes.SEMI && delta) {\n      // semi circular gauge we want the numbers aligned to the chart container\n      numbersYPosition = -(deltaFontSize(radius) + numberSpacing);\n    } // Add the numbers at the center\n\n\n    var numbersGroup = DOMUtils.appendOrSelect(svg, \"g.gauge-numbers\").attr(\"transform\", \"translate(0, \" + numbersYPosition + \")\"); // Add the big number\n\n    var valueNumberGroup = DOMUtils.appendOrSelect(numbersGroup, \"g.gauge-value-number\").attr(\"transform\", \"translate(-10, 0)\"); // Optical centering for the presence of the smaller % symbol\n\n    var numberFormatter = Tools.getProperty(options, \"gauge\", \"numberFormatter\");\n    var valueNumber = valueNumberGroup.selectAll(\"text.gauge-value-number\").data([value]);\n    valueNumber.enter().append(\"text\").attr(\"class\", \"gauge-value-number\").merge(valueNumber).style(\"font-size\", valueFontSize(radius) + \"px\").attr(\"text-anchor\", \"middle\").text(function (d) {\n      return numberFormatter(d);\n    }); // add the percentage symbol beside the valueNumber\n\n    var valueNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, \"text.gauge-value-number\"), {\n      useBBox: true\n    }).width;\n    DOMUtils.appendOrSelect(valueNumberGroup, \"text.gauge-value-symbol\").style(\"font-size\", valueFontSize(radius) / 2 + \"px\").attr(\"x\", valueNumberWidth / 2).text(\"%\");\n  };\n  /**\n   * adds the delta number for the gauge\n   */\n\n\n  Gauge.prototype.drawDelta = function () {\n    var self = this;\n    var svg = this.getContainerSVG();\n    var options = this.model.getOptions();\n    var delta = this.getDelta(); // Sizing and positions relative to the radius\n\n    var radius = this.computeRadius();\n    var deltaFontSize = delta ? Tools.getProperty(options, \"gauge\", \"deltaFontSize\") : function () {\n      return 0;\n    }; // use numberFormatter here only if there is a delta supplied\n\n    var numberFormatter = delta ? Tools.getProperty(options, \"gauge\", \"numberFormatter\") : function () {\n      return null;\n    };\n    var arrowSize = Tools.getProperty(options, \"gauge\", \"deltaArrow\", \"size\");\n    var numberSpacing = Tools.getProperty(options, \"gauge\", \"numberSpacing\");\n    var numbersGroup = DOMUtils.appendOrSelect(svg, \"g.gauge-numbers\"); // Add the smaller number of the delta\n\n    var deltaGroup = DOMUtils.appendOrSelect(numbersGroup, \"g.gauge-delta\").attr(\"transform\", \"translate(0, \" + (deltaFontSize(radius) + numberSpacing) + \")\");\n    var deltaNumber = DOMUtils.appendOrSelect(deltaGroup, \"text.gauge-delta-number\");\n    deltaNumber.data(delta === null ? [] : [delta]);\n    deltaNumber.enter().append(\"text\").classed(\"gauge-delta-number\", true).merge(deltaNumber).attr(\"text-anchor\", \"middle\").style(\"font-size\", deltaFontSize(radius) + \"px\").text(function (d) {\n      return numberFormatter(d) + \"%\";\n    }); // Add the caret for the delta number\n\n    var deltaNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, \".gauge-delta-number\"), {\n      useBBox: true\n    }).width; // check if delta arrow is disabled\n\n    var arrowEnabled = Tools.getProperty(options, \"gauge\", \"deltaArrow\", \"enabled\");\n    var deltaArrow = deltaGroup.selectAll(\"svg.gauge-delta-arrow\").data(delta !== null && arrowEnabled ? [delta] : []);\n    deltaArrow.enter().append(\"svg\").merge(deltaArrow).attr(\"class\", \"gauge-delta-arrow\").attr(\"x\", -arrowSize(radius) - deltaNumberWidth / 2).attr(\"y\", -arrowSize(radius) / 2 - deltaFontSize(radius) * 0.35).attr(\"width\", arrowSize(radius)).attr(\"height\", arrowSize(radius)).attr(\"viewBox\", \"0 0 16 16\"); // Needed to correctly size SVG in Firefox\n\n    DOMUtils.appendOrSelect(deltaArrow, \"rect.gauge-delta-arrow-backdrop\").attr(\"width\", \"16\").attr(\"height\", \"16\").attr(\"fill\", \"none\"); // Draw the arrow with status\n\n    var status = Tools.getProperty(options, \"gauge\", \"status\");\n    DOMUtils.appendOrSelect(deltaArrow, \"polygon.gauge-delta-arrow\").classed(\"status--\" + status, status !== null).attr(\"fill\", function () {\n      return status === null ? \"currentColor\" : null;\n    }).attr(\"points\", self.getArrow(delta));\n    deltaArrow.exit().remove();\n    deltaNumber.exit().remove();\n  };\n\n  Gauge.prototype.getInnerRadius = function () {\n    // Compute the outer radius needed\n    var radius = this.computeRadius();\n    var arcWidth = Tools.getProperty(this.model.getOptions(), \"gauge\", \"arcWidth\");\n    return radius - arcWidth;\n  };\n\n  Gauge.prototype.addEventListeners = function () {\n    var self = this;\n    this.parent.selectAll(\"path.arc\").on(\"mouseover\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOVER, {\n        element: select(this),\n        datum: datum\n      });\n    }).on(\"mousemove\", function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n    }).on(\"click\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Gauge.ARC_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on(\"mouseout\", function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      });\n    });\n  }; // Helper functions\n\n\n  Gauge.prototype.computeRadius = function () {\n    var options = this.model.getOptions();\n    var arcType = Tools.getProperty(options, \"gauge\", \"type\");\n\n    var _a = DOMUtils.getSVGElementSize(this.parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    var radius = arcType === GaugeTypes.SEMI ? Math.min(width / 2, height) : Math.min(width / 2, height / 2);\n    return radius;\n  };\n\n  return Gauge;\n}(Component);\n\nexport { Gauge };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/graphs/gauge.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","DOMUtils","Roles","Events","GaugeTypes","ArrowDirections","Tools","select","arc","ARROW_UP_PATH_STRING","ARROW_DOWN_PATH_STRING","Gauge","_super","_this","apply","arguments","type","init","eventsFragment","services","events","getValue","_a","_b","data","model","getData","value","find","group","getValueRatio","clamp","getDelta","delta","getArcRatio","options","getOptions","getProperty","arcRatio","FULL","getArcSize","Math","PI","getStartAngle","arcSize","getArrow","arrowDirection","UP","DOWN","render","animate","self","svg","getContainerSVG","groupMapsTo","valueRatio","startAngle","rotationAngle","currentAngle","endAngle","radius","computeRadius","innerRadius","getInnerRadius","backgroundArc","outerRadius","appendOrSelect","attr","GROUP","arcValue","selectAll","enter","append","merge","getFillColor","GRAPHICS_SYMBOL","drawValueNumber","drawDelta","exit","remove","addEventListeners","arcType","valueFontSize","deltaFontSize","numberSpacing","numbersYPosition","SEMI","numbersGroup","valueNumberGroup","numberFormatter","valueNumber","style","text","valueNumberWidth","getSVGElementSize","useBBox","width","arrowSize","deltaGroup","deltaNumber","classed","deltaNumberWidth","arrowEnabled","deltaArrow","status","arcWidth","parent","on","datum","dispatchEvent","ARC_MOUSEOVER","element","hoveredElement","ARC_MOUSEMOVE","ARC_CLICK","ARC_MOUSEOUT","useAttrs","height","min"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from \"../component\";\nimport { DOMUtils } from \"../../services\";\nimport { Roles, Events, GaugeTypes, ArrowDirections } from \"../../interfaces\";\nimport { Tools } from \"../../tools\";\n// D3 Imports\nimport { select } from \"d3-selection\";\nimport { arc } from \"d3-shape\";\n// arrow paths for delta\nvar ARROW_UP_PATH_STRING = \"4,10 8,6 12,10\";\nvar ARROW_DOWN_PATH_STRING = \"12,6 8,10 4,6\";\nvar Gauge = /** @class */ (function (_super) {\n    __extends(Gauge, _super);\n    function Gauge() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"gauge\";\n        return _this;\n    }\n    Gauge.prototype.init = function () {\n        var eventsFragment = this.services.events;\n    };\n    Gauge.prototype.getValue = function () {\n        var _a, _b;\n        var data = this.model.getData();\n        var value = (_b = (_a = data.find(function (d) { return d.group === \"value\"; })) === null || _a === void 0 ? void 0 : _a.value, (_b !== null && _b !== void 0 ? _b : null));\n        return value;\n    };\n    Gauge.prototype.getValueRatio = function () {\n        var value = Tools.clamp(this.getValue(), 0, 100);\n        return value / 100;\n    };\n    Gauge.prototype.getDelta = function () {\n        var _a, _b;\n        var data = this.model.getData();\n        var delta = (_b = (_a = data.find(function (d) { return d.group === \"delta\"; })) === null || _a === void 0 ? void 0 : _a.value, (_b !== null && _b !== void 0 ? _b : null));\n        return delta;\n    };\n    Gauge.prototype.getArcRatio = function () {\n        var options = this.model.getOptions();\n        var type = Tools.getProperty(options, \"gauge\", \"type\");\n        var arcRatio = type === GaugeTypes.FULL ? 1 : 0.5;\n        return arcRatio;\n    };\n    Gauge.prototype.getArcSize = function () {\n        return this.getArcRatio() * Math.PI * 2;\n    };\n    Gauge.prototype.getStartAngle = function () {\n        var arcSize = this.getArcSize();\n        if (arcSize === 2 * Math.PI) {\n            return 0;\n        }\n        return -arcSize / 2;\n    };\n    // use provided arrow direction or default to using the delta\n    Gauge.prototype.getArrow = function (delta) {\n        var options = this.model.getOptions();\n        var arrowDirection = Tools.getProperty(options, \"gauge\", \"deltaArrow\", \"direction\");\n        switch (arrowDirection) {\n            case ArrowDirections.UP:\n                return ARROW_UP_PATH_STRING;\n            case ArrowDirections.DOWN:\n                return ARROW_DOWN_PATH_STRING;\n            default:\n                return delta > 0\n                    ? ARROW_UP_PATH_STRING\n                    : ARROW_DOWN_PATH_STRING;\n        }\n    };\n    Gauge.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        var self = this;\n        var svg = this.getContainerSVG();\n        var options = this.model.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var value = this.getValue();\n        var valueRatio = this.getValueRatio();\n        var arcSize = this.getArcSize();\n        // angles for drawing the gauge\n        var startAngle = this.getStartAngle();\n        var rotationAngle = valueRatio * arcSize;\n        var currentAngle = startAngle + rotationAngle;\n        var endAngle = startAngle + arcSize;\n        // Compute the outer radius needed\n        var radius = this.computeRadius();\n        var innerRadius = this.getInnerRadius();\n        // draw the container and arc\n        this.backgroundArc = arc()\n            .innerRadius(innerRadius)\n            .outerRadius(radius)\n            .startAngle(currentAngle)\n            .endAngle(endAngle);\n        this.arc = arc()\n            .innerRadius(innerRadius)\n            .outerRadius(radius)\n            .startAngle(startAngle)\n            .endAngle(currentAngle);\n        // draw the container\n        DOMUtils.appendOrSelect(svg, \"path.arc-background\")\n            .attr(\"d\", this.backgroundArc)\n            .attr(\"role\", Roles.GROUP);\n        // Add data arc\n        var arcValue = svg.selectAll(\"path.arc-foreground\").data([value]);\n        arcValue\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", \"arc-foreground\")\n            .merge(arcValue)\n            .attr(\"d\", this.arc)\n            .attr(\"fill\", function (d) { return self.model.getFillColor(d[groupMapsTo]); })\n            // a11y\n            .attr(\"role\", Roles.GRAPHICS_SYMBOL)\n            .attr(\"aria-roledescription\", \"value\")\n            .attr(\"aria-label\", function (d) { return d.value; });\n        // Position Arc\n        svg.attr(\"transform\", \"translate(\" + radius + \", \" + radius + \")\");\n        // draw the value and delta to the center\n        this.drawValueNumber();\n        this.drawDelta();\n        arcValue.exit().remove();\n        // Add event listeners\n        this.addEventListeners();\n    };\n    /**\n     * draws the value number associated with the Gauge component in the center\n     */\n    Gauge.prototype.drawValueNumber = function () {\n        var svg = this.getContainerSVG();\n        var options = this.model.getOptions();\n        var arcType = Tools.getProperty(options, \"gauge\", \"type\");\n        var value = this.getValue();\n        var delta = this.getDelta();\n        // Sizing and positions relative to the radius\n        var radius = this.computeRadius();\n        var valueFontSize = Tools.getProperty(options, \"gauge\", \"valueFontSize\");\n        // if there is a delta, use the size to center the numbers, otherwise center the valueNumber\n        var deltaFontSize = Tools.getProperty(options, \"gauge\", \"deltaFontSize\");\n        var numberSpacing = Tools.getProperty(options, \"gauge\", \"numberSpacing\");\n        // circular gauge without delta should have valueNumber centered\n        var numbersYPosition = 0;\n        if (arcType === GaugeTypes.FULL && !delta) {\n            numbersYPosition = deltaFontSize(radius);\n        }\n        else if (arcType === GaugeTypes.SEMI && delta) {\n            // semi circular gauge we want the numbers aligned to the chart container\n            numbersYPosition = -(deltaFontSize(radius) + numberSpacing);\n        }\n        // Add the numbers at the center\n        var numbersGroup = DOMUtils.appendOrSelect(svg, \"g.gauge-numbers\").attr(\"transform\", \"translate(0, \" + numbersYPosition + \")\");\n        // Add the big number\n        var valueNumberGroup = DOMUtils.appendOrSelect(numbersGroup, \"g.gauge-value-number\").attr(\"transform\", \"translate(-10, 0)\"); // Optical centering for the presence of the smaller % symbol\n        var numberFormatter = Tools.getProperty(options, \"gauge\", \"numberFormatter\");\n        var valueNumber = valueNumberGroup\n            .selectAll(\"text.gauge-value-number\")\n            .data([value]);\n        valueNumber\n            .enter()\n            .append(\"text\")\n            .attr(\"class\", \"gauge-value-number\")\n            .merge(valueNumber)\n            .style(\"font-size\", valueFontSize(radius) + \"px\")\n            .attr(\"text-anchor\", \"middle\")\n            .text(function (d) { return numberFormatter(d); });\n        // add the percentage symbol beside the valueNumber\n        var valueNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, \"text.gauge-value-number\"), { useBBox: true }).width;\n        DOMUtils.appendOrSelect(valueNumberGroup, \"text.gauge-value-symbol\")\n            .style(\"font-size\", valueFontSize(radius) / 2 + \"px\")\n            .attr(\"x\", valueNumberWidth / 2)\n            .text(\"%\");\n    };\n    /**\n     * adds the delta number for the gauge\n     */\n    Gauge.prototype.drawDelta = function () {\n        var self = this;\n        var svg = this.getContainerSVG();\n        var options = this.model.getOptions();\n        var delta = this.getDelta();\n        // Sizing and positions relative to the radius\n        var radius = this.computeRadius();\n        var deltaFontSize = delta\n            ? Tools.getProperty(options, \"gauge\", \"deltaFontSize\")\n            : function () { return 0; };\n        // use numberFormatter here only if there is a delta supplied\n        var numberFormatter = delta\n            ? Tools.getProperty(options, \"gauge\", \"numberFormatter\")\n            : function () { return null; };\n        var arrowSize = Tools.getProperty(options, \"gauge\", \"deltaArrow\", \"size\");\n        var numberSpacing = Tools.getProperty(options, \"gauge\", \"numberSpacing\");\n        var numbersGroup = DOMUtils.appendOrSelect(svg, \"g.gauge-numbers\");\n        // Add the smaller number of the delta\n        var deltaGroup = DOMUtils.appendOrSelect(numbersGroup, \"g.gauge-delta\").attr(\"transform\", \"translate(0, \" + (deltaFontSize(radius) + numberSpacing) + \")\");\n        var deltaNumber = DOMUtils.appendOrSelect(deltaGroup, \"text.gauge-delta-number\");\n        deltaNumber.data(delta === null ? [] : [delta]);\n        deltaNumber\n            .enter()\n            .append(\"text\")\n            .classed(\"gauge-delta-number\", true)\n            .merge(deltaNumber)\n            .attr(\"text-anchor\", \"middle\")\n            .style(\"font-size\", deltaFontSize(radius) + \"px\")\n            .text(function (d) { return numberFormatter(d) + \"%\"; });\n        // Add the caret for the delta number\n        var deltaNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, \".gauge-delta-number\"), { useBBox: true }).width;\n        // check if delta arrow is disabled\n        var arrowEnabled = Tools.getProperty(options, \"gauge\", \"deltaArrow\", \"enabled\");\n        var deltaArrow = deltaGroup\n            .selectAll(\"svg.gauge-delta-arrow\")\n            .data(delta !== null && arrowEnabled ? [delta] : []);\n        deltaArrow\n            .enter()\n            .append(\"svg\")\n            .merge(deltaArrow)\n            .attr(\"class\", \"gauge-delta-arrow\")\n            .attr(\"x\", -arrowSize(radius) - deltaNumberWidth / 2)\n            .attr(\"y\", -arrowSize(radius) / 2 - deltaFontSize(radius) * 0.35)\n            .attr(\"width\", arrowSize(radius))\n            .attr(\"height\", arrowSize(radius))\n            .attr(\"viewBox\", \"0 0 16 16\");\n        // Needed to correctly size SVG in Firefox\n        DOMUtils.appendOrSelect(deltaArrow, \"rect.gauge-delta-arrow-backdrop\")\n            .attr(\"width\", \"16\")\n            .attr(\"height\", \"16\")\n            .attr(\"fill\", \"none\");\n        // Draw the arrow with status\n        var status = Tools.getProperty(options, \"gauge\", \"status\");\n        DOMUtils.appendOrSelect(deltaArrow, \"polygon.gauge-delta-arrow\")\n            .classed(\"status--\" + status, status !== null)\n            .attr(\"fill\", function () { return (status === null ? \"currentColor\" : null); })\n            .attr(\"points\", self.getArrow(delta));\n        deltaArrow.exit().remove();\n        deltaNumber.exit().remove();\n    };\n    Gauge.prototype.getInnerRadius = function () {\n        // Compute the outer radius needed\n        var radius = this.computeRadius();\n        var arcWidth = Tools.getProperty(this.model.getOptions(), \"gauge\", \"arcWidth\");\n        return radius - arcWidth;\n    };\n    Gauge.prototype.addEventListeners = function () {\n        var self = this;\n        this.parent\n            .selectAll(\"path.arc\")\n            .on(\"mouseover\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOVER, {\n                element: select(this),\n                datum: datum\n            });\n        })\n            .on(\"mousemove\", function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum\n            });\n        })\n            .on(\"click\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_CLICK, {\n                element: select(this),\n                datum: datum\n            });\n        })\n            .on(\"mouseout\", function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum\n            });\n        });\n    };\n    // Helper functions\n    Gauge.prototype.computeRadius = function () {\n        var options = this.model.getOptions();\n        var arcType = Tools.getProperty(options, \"gauge\", \"type\");\n        var _a = DOMUtils.getSVGElementSize(this.parent, {\n            useAttrs: true\n        }), width = _a.width, height = _a.height;\n        var radius = arcType === GaugeTypes.SEMI\n            ? Math.min(width / 2, height)\n            : Math.min(width / 2, height / 2);\n        return radius;\n    };\n    return Gauge;\n}(Component));\nexport { Gauge };\n//# sourceMappingURL=../../../src/components/graphs/gauge.js.map"]},"metadata":{},"sourceType":"module"}