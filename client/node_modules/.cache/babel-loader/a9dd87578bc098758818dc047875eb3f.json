{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Title } from \"./title\";\nimport { DOMUtils } from \"../../services\";\nimport { Tools } from \"../../tools\";\nimport { Statuses } from \"./../../interfaces/enums\";\n\nvar MeterTitle =\n/** @class */\nfunction (_super) {\n  __extends(MeterTitle, _super);\n\n  function MeterTitle() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = \"meter-title\";\n    return _this;\n  }\n\n  MeterTitle.prototype.render = function () {\n    var dataset = this.model.getDisplayData();\n    var options = this.model.getOptions();\n    var svg = this.getContainerSVG();\n    var groupMapsTo = options.data.groupMapsTo; // the title for a meter, is the label for that dataset\n\n    var title = svg.selectAll(\"text.meter-title\").data([dataset[groupMapsTo]]);\n    title.enter().append(\"text\").classed(\"meter-title\", true).merge(title).attr(\"x\", 0).attr(\"y\", \"1em\").text(function (d) {\n      return d;\n    });\n    title.exit().remove(); // appends the associated percentage after title\n\n    this.appendPercentage(); // if status ranges are provided (custom or default), display indicator\n\n    this.displayStatus(); // get the max width of a title (with consideration for the status/percentage)\n\n    var maxWidth = this.getMaxTitleWidth();\n    var titleElement = DOMUtils.appendOrSelect(svg, \"text.meter-title\");\n\n    if (maxWidth > 0 && titleElement.node().getComputedTextLength() > maxWidth) {\n      this.truncateTitle(titleElement, maxWidth);\n    }\n  };\n  /**\n   * Appends the corresponding status based on the value and the peak.\n   */\n\n\n  MeterTitle.prototype.displayStatus = function () {\n    var self = this;\n    var svg = this.getContainerSVG();\n    var options = this.model.getOptions();\n    var containerBounds = DOMUtils.getSVGElementSize(this.services.domUtils.getMainSVG(), {\n      useAttr: true\n    }); // need to check if the width is 0, and try to use the parent attribute\n    // this can happen if the chart is toggled on/off and the height is 0 for the parent, it wont validateDimensions\n\n    var containerWidth = containerBounds.width ? containerBounds.width : this.parent.node().getAttribute(\"width\"); // get the status from the model\n\n    var status = this.model.getStatus();\n    var radius = Tools.getProperty(options, \"meter\", \"status\", \"indicatorSize\") / 2; // create a group for the icon/inner path\n\n    var statusGroup = DOMUtils.appendOrSelect(svg, \"g.status-indicator\").classed(\"status--\" + status, status !== null).attr(\"transform\", \"translate(\" + (containerWidth - radius) + \", 0)\");\n    var data = status ? [status] : [];\n    var icon = statusGroup.selectAll(\"circle.status\").data(data);\n    icon.enter().append(\"circle\").merge(icon).attr(\"class\", \"status\").attr(\"r\", radius).attr(\"cx\", 0).attr(\"cy\", \"calc(1em / 2)\");\n    var innerIcon = statusGroup.selectAll(\"path.innerFill\").data(data);\n    innerIcon.enter().append(\"path\").merge(innerIcon).attr(\"d\", self.getStatusIconPathString(status)).attr(\"transform\", \"translate(-\" + radius + \", 0)\").attr(\"class\", \"innerFill\");\n    innerIcon.exit().remove();\n    icon.exit().remove();\n  };\n  /**\n   * Appends the associated percentage to the end of the title\n   */\n\n\n  MeterTitle.prototype.appendPercentage = function () {\n    var dataValue = this.model.getDisplayData().value; // use the title's position to append the percentage to the end\n\n    var svg = this.getContainerSVG();\n    var title = DOMUtils.appendOrSelect(svg, \"text.meter-title\"); // check if it is enabled\n\n    var data = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"percentageIndicator\", \"enabled\") === true ? [dataValue] : []; // append a percentage if it is enabled, update it\n\n    var percentage = svg.selectAll(\"text.percent-value\").data(data); // the horizontal offset of the percentage value from the title\n\n    var offset = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"paddingRight\");\n    percentage.enter().append(\"text\").classed(\"percent-value\", true).merge(percentage).text(function (d) {\n      return d + \"%\";\n    }).attr(\"x\", +title.attr(\"x\") + title.node().getComputedTextLength() + offset) // set the position to after the title\n    .attr(\"y\", title.attr(\"y\"));\n    percentage.exit().remove();\n  };\n  /**\n   * Uses the parent class truncate logic\n   * @param title d3 selection of title element that will be truncated\n   * @param titlestring the original string that needs truncation\n   * @param maxWidth the max width the title can take\n   */\n\n\n  MeterTitle.prototype.truncateTitle = function (title, maxWidth) {\n    _super.prototype.truncateTitle.call(this, title, maxWidth); // update the position on the percentage to be inline with the title\n\n\n    var tspan = DOMUtils.appendOrSelect(this.parent, \"tspan\");\n    var offset = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"paddingRight\");\n    var tspanLength = Math.ceil(tspan.node().getComputedTextLength());\n    var percentage = DOMUtils.appendOrSelect(this.parent, \"text.percent-value\");\n    percentage.attr(\"x\", +title.attr(\"x\") + title.node().getComputedTextLength() + tspanLength + offset);\n  }; // computes the maximum space a title can take\n\n\n  MeterTitle.prototype.getMaxTitleWidth = function () {\n    // get a reference to the title elements to calculate the size the title can be\n    var containerBounds = DOMUtils.getSVGElementSize(this.services.domUtils.getMainSVG(), {\n      useAttr: true\n    }); // need to check if the width is 0, and try to use the parent attribute\n\n    var containerWidth = containerBounds.width ? containerBounds.width : this.parent.node().getAttribute(\"width\");\n    var percentage = DOMUtils.appendOrSelect(this.parent, \"text.percent-value\"); // the title needs to fit the width of the container without crowding the status, and percentage value\n\n    var offset = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"paddingRight\");\n    var percentageWidth = percentage.node().getComputedTextLength();\n    var statusGroup = DOMUtils.appendOrSelect(this.parent, \"g.status-indicator\").node();\n    var statusWidth = DOMUtils.getSVGElementSize(statusGroup, {\n      useBBox: true\n    }).width + Tools.getProperty(this.model.getOptions(), \"meter\", \"status\", \"paddingLeft\");\n    return containerWidth - percentageWidth - offset - statusWidth;\n  };\n  /**\n   * Get the associated status icon for the data\n   * @param status the active status for the meter chart\n   */\n\n\n  MeterTitle.prototype.getStatusIconPathString = function (status) {\n    switch (status) {\n      case Statuses.SUCCESS:\n        return \"M6.875 11.3125 3.75 8.1875 4.74375 7.25 6.875 9.34375 11.50625 4.75 12.5 5.7375 Z\";\n\n      case Statuses.DANGER:\n        return \"M10.7 11.5 4.5 5.3 5.3 4.5 11.5 10.7 Z\";\n\n      case Statuses.WARNING:\n        return \"M7.9375,11.125 C7.41973305,11.125 7,11.544733 7,12.0625 C7,12.580267 7.41973305,13 7.9375,13 C8.45526695,13 8.875,12.580267 8.875,12.0625 C8.875,11.544733 8.45526695,11.125 7.9375,11.125 M7.3125, 3 8.5625, 3 8.5625, 9.875 7.3125, 9.875, 7.3125, 3 Z\";\n    }\n  };\n\n  return MeterTitle;\n}(Title);\n\nexport { MeterTitle };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/essentials/title-meter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Title","DOMUtils","Tools","Statuses","MeterTitle","_super","_this","apply","arguments","type","render","dataset","model","getDisplayData","options","getOptions","svg","getContainerSVG","groupMapsTo","data","title","selectAll","enter","append","classed","merge","attr","text","exit","remove","appendPercentage","displayStatus","maxWidth","getMaxTitleWidth","titleElement","appendOrSelect","node","getComputedTextLength","truncateTitle","self","containerBounds","getSVGElementSize","services","domUtils","getMainSVG","useAttr","containerWidth","width","parent","getAttribute","status","getStatus","radius","getProperty","statusGroup","icon","innerIcon","getStatusIconPathString","dataValue","value","percentage","offset","call","tspan","tspanLength","Math","ceil","percentageWidth","statusWidth","useBBox","SUCCESS","DANGER","WARNING"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Title } from \"./title\";\nimport { DOMUtils } from \"../../services\";\nimport { Tools } from \"../../tools\";\nimport { Statuses } from \"./../../interfaces/enums\";\nvar MeterTitle = /** @class */ (function (_super) {\n    __extends(MeterTitle, _super);\n    function MeterTitle() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"meter-title\";\n        return _this;\n    }\n    MeterTitle.prototype.render = function () {\n        var dataset = this.model.getDisplayData();\n        var options = this.model.getOptions();\n        var svg = this.getContainerSVG();\n        var groupMapsTo = options.data.groupMapsTo;\n        // the title for a meter, is the label for that dataset\n        var title = svg.selectAll(\"text.meter-title\")\n            .data([dataset[groupMapsTo]]);\n        title.enter()\n            .append(\"text\")\n            .classed(\"meter-title\", true)\n            .merge(title)\n            .attr(\"x\", 0)\n            .attr(\"y\", \"1em\")\n            .text(function (d) { return d; });\n        title.exit().remove();\n        // appends the associated percentage after title\n        this.appendPercentage();\n        // if status ranges are provided (custom or default), display indicator\n        this.displayStatus();\n        // get the max width of a title (with consideration for the status/percentage)\n        var maxWidth = this.getMaxTitleWidth();\n        var titleElement = DOMUtils.appendOrSelect(svg, \"text.meter-title\");\n        if (maxWidth > 0 && titleElement.node().getComputedTextLength() > maxWidth) {\n            this.truncateTitle(titleElement, maxWidth);\n        }\n    };\n    /**\n     * Appends the corresponding status based on the value and the peak.\n     */\n    MeterTitle.prototype.displayStatus = function () {\n        var self = this;\n        var svg = this.getContainerSVG();\n        var options = this.model.getOptions();\n        var containerBounds = DOMUtils.getSVGElementSize(this.services.domUtils.getMainSVG(), { useAttr: true });\n        // need to check if the width is 0, and try to use the parent attribute\n        // this can happen if the chart is toggled on/off and the height is 0 for the parent, it wont validateDimensions\n        var containerWidth = containerBounds.width ? containerBounds.width : this.parent.node().getAttribute(\"width\");\n        // get the status from the model\n        var status = this.model.getStatus();\n        var radius = Tools.getProperty(options, \"meter\", \"status\", \"indicatorSize\") / 2;\n        // create a group for the icon/inner path\n        var statusGroup = DOMUtils.appendOrSelect(svg, \"g.status-indicator\")\n            .classed(\"status--\" + status, status !== null)\n            .attr(\"transform\", \"translate(\" + (containerWidth - radius) + \", 0)\");\n        var data = status ? [status] : [];\n        var icon = statusGroup.selectAll(\"circle.status\")\n            .data(data);\n        icon.enter()\n            .append(\"circle\")\n            .merge(icon)\n            .attr(\"class\", \"status\")\n            .attr(\"r\", radius)\n            .attr(\"cx\", 0)\n            .attr(\"cy\", \"calc(1em / 2)\");\n        var innerIcon = statusGroup.selectAll(\"path.innerFill\")\n            .data(data);\n        innerIcon.enter()\n            .append(\"path\")\n            .merge(innerIcon)\n            .attr(\"d\", self.getStatusIconPathString(status))\n            .attr(\"transform\", \"translate(-\" + radius + \", 0)\")\n            .attr(\"class\", \"innerFill\");\n        innerIcon.exit().remove();\n        icon.exit().remove();\n    };\n    /**\n     * Appends the associated percentage to the end of the title\n     */\n    MeterTitle.prototype.appendPercentage = function () {\n        var dataValue = this.model.getDisplayData().value;\n        // use the title's position to append the percentage to the end\n        var svg = this.getContainerSVG();\n        var title = DOMUtils.appendOrSelect(svg, \"text.meter-title\");\n        // check if it is enabled\n        var data = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"percentageIndicator\", \"enabled\") === true ?\n            [dataValue] : [];\n        // append a percentage if it is enabled, update it\n        var percentage = svg.selectAll(\"text.percent-value\")\n            .data(data);\n        // the horizontal offset of the percentage value from the title\n        var offset = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"paddingRight\");\n        percentage.enter()\n            .append(\"text\")\n            .classed(\"percent-value\", true)\n            .merge(percentage)\n            .text(function (d) { return d + \"%\"; })\n            .attr(\"x\", +title.attr(\"x\") + title.node().getComputedTextLength() + offset) // set the position to after the title\n            .attr(\"y\", title.attr(\"y\"));\n        percentage.exit().remove();\n    };\n    /**\n     * Uses the parent class truncate logic\n     * @param title d3 selection of title element that will be truncated\n     * @param titlestring the original string that needs truncation\n     * @param maxWidth the max width the title can take\n     */\n    MeterTitle.prototype.truncateTitle = function (title, maxWidth) {\n        _super.prototype.truncateTitle.call(this, title, maxWidth);\n        // update the position on the percentage to be inline with the title\n        var tspan = DOMUtils.appendOrSelect(this.parent, \"tspan\");\n        var offset = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"paddingRight\");\n        var tspanLength = Math.ceil(tspan.node().getComputedTextLength());\n        var percentage = DOMUtils.appendOrSelect(this.parent, \"text.percent-value\");\n        percentage.attr(\"x\", +title.attr(\"x\") + title.node().getComputedTextLength() + tspanLength + offset);\n    };\n    // computes the maximum space a title can take\n    MeterTitle.prototype.getMaxTitleWidth = function () {\n        // get a reference to the title elements to calculate the size the title can be\n        var containerBounds = DOMUtils.getSVGElementSize(this.services.domUtils.getMainSVG(), { useAttr: true });\n        // need to check if the width is 0, and try to use the parent attribute\n        var containerWidth = containerBounds.width ? containerBounds.width : this.parent.node().getAttribute(\"width\");\n        var percentage = DOMUtils.appendOrSelect(this.parent, \"text.percent-value\");\n        // the title needs to fit the width of the container without crowding the status, and percentage value\n        var offset = Tools.getProperty(this.model.getOptions(), \"meter\", \"statusBar\", \"paddingRight\");\n        var percentageWidth = percentage.node().getComputedTextLength();\n        var statusGroup = DOMUtils.appendOrSelect(this.parent, \"g.status-indicator\").node();\n        var statusWidth = DOMUtils.getSVGElementSize(statusGroup, { useBBox: true }).width + Tools.getProperty(this.model.getOptions(), \"meter\", \"status\", \"paddingLeft\");\n        return containerWidth - percentageWidth - offset - statusWidth;\n    };\n    /**\n     * Get the associated status icon for the data\n     * @param status the active status for the meter chart\n     */\n    MeterTitle.prototype.getStatusIconPathString = function (status) {\n        switch (status) {\n            case Statuses.SUCCESS:\n                return \"M6.875 11.3125 3.75 8.1875 4.74375 7.25 6.875 9.34375 11.50625 4.75 12.5 5.7375 Z\";\n            case Statuses.DANGER:\n                return \"M10.7 11.5 4.5 5.3 5.3 4.5 11.5 10.7 Z\";\n            case Statuses.WARNING:\n                return \"M7.9375,11.125 C7.41973305,11.125 7,11.544733 7,12.0625 C7,12.580267 7.41973305,13 7.9375,13 C8.45526695,13 8.875,12.580267 8.875,12.0625 C8.875,11.544733 8.45526695,11.125 7.9375,11.125 M7.3125, 3 8.5625, 3 8.5625, 9.875 7.3125, 9.875, 7.3125, 3 Z\";\n        }\n    };\n    return MeterTitle;\n}(Title));\nexport { MeterTitle };\n//# sourceMappingURL=../../../src/components/essentials/title-meter.js.map"]},"metadata":{},"sourceType":"module"}