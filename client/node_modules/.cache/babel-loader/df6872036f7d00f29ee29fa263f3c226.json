{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Tooltip } from \"./tooltip\";\nimport { AxisPositions, ScaleTypes } from \"../../interfaces\";\nimport { Tools } from \"../../tools\";\nimport { format } from \"date-fns\";\n\nvar AxisChartsTooltip =\n/** @class */\nfunction (_super) {\n  __extends(AxisChartsTooltip, _super);\n\n  function AxisChartsTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AxisChartsTooltip.prototype.getItems = function (e) {\n    var _this = this;\n\n    if (e.detail.items) {\n      return e.detail.items;\n    }\n\n    var options = this.model.getOptions();\n    var data = e.detail.data;\n    var cartesianScales = this.services.cartesianScales;\n    var domainAxisOptions = cartesianScales.getDomainAxisOptions();\n    var domainIdentifier = cartesianScales.getDomainIdentifier();\n    var domainAxisScaleType = cartesianScales.getDomainAxisScaleType();\n    var rangeAxisOptions = cartesianScales.getRangeAxisOptions();\n    var rangeIdentifier = cartesianScales.getRangeIdentifier();\n    var rangeAxisScaleType = cartesianScales.getRangeAxisScaleType(); // Generate default tooltip\n\n    var groupMapsTo = options.data.groupMapsTo;\n    var domainLabel = domainAxisOptions.title;\n\n    if (!domainLabel) {\n      var domainAxisPosition = cartesianScales.getDomainAxisPosition();\n\n      if (domainAxisPosition === AxisPositions.BOTTOM || domainAxisPosition === AxisPositions.TOP) {\n        domainLabel = \"x-value\";\n      } else {\n        domainLabel = \"y-value\";\n      }\n    }\n\n    var domainValue = data[0][domainIdentifier];\n\n    if (domainAxisScaleType === ScaleTypes.TIME) {\n      domainValue = format(new Date(data[0][domainIdentifier]), \"MMM d, yyyy\");\n    } else if (domainAxisScaleType === ScaleTypes.LINEAR) {\n      domainValue = domainValue.toLocaleString();\n    }\n\n    var items;\n\n    if (data.length === 1) {\n      var datum = data[0];\n      var rangeLabel = rangeAxisOptions.title;\n\n      if (!rangeLabel) {\n        var rangeAxisPosition = cartesianScales.getRangeAxisPosition();\n\n        if (rangeAxisPosition === AxisPositions.LEFT || rangeAxisPosition === AxisPositions.RIGHT) {\n          rangeLabel = \"y-value\";\n        } else {\n          rangeLabel = \"x-value\";\n        }\n      }\n\n      var rangeValue = datum[rangeIdentifier];\n\n      if (rangeAxisScaleType === ScaleTypes.LINEAR) {\n        rangeValue = rangeValue.toLocaleString();\n      }\n\n      items = [{\n        label: domainLabel,\n        value: domainValue\n      }, {\n        label: rangeLabel,\n        value: rangeValue\n      }, {\n        label: \"Group\",\n        value: datum[groupMapsTo],\n        color: this.model.getStrokeColor(datum[groupMapsTo])\n      }];\n    } else if (data.length > 1) {\n      items = [{\n        label: domainLabel,\n        value: this.valueFormatter(domainValue)\n      }];\n      items = items.concat(data.map(function (datum) {\n        return {\n          label: datum[groupMapsTo],\n          value: _this.valueFormatter(datum[rangeIdentifier]),\n          color: _this.model.getStrokeColor(datum[groupMapsTo])\n        };\n      }).sort(function (a, b) {\n        return b.value - a.value;\n      }));\n\n      if (Tools.getProperty(options, \"tooltip\", \"showTotal\") === true) {\n        items.push({\n          label: \"Total\",\n          value: this.valueFormatter(data.reduce(function (accumulator, datum) {\n            return accumulator + datum[rangeIdentifier];\n          }, 0)),\n          bold: true\n        });\n      }\n    }\n\n    return items;\n  };\n\n  return AxisChartsTooltip;\n}(Tooltip);\n\nexport { AxisChartsTooltip };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/essentials/tooltip-axis.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Tooltip","AxisPositions","ScaleTypes","Tools","format","AxisChartsTooltip","_super","apply","arguments","getItems","e","_this","detail","items","options","model","getOptions","data","cartesianScales","services","domainAxisOptions","getDomainAxisOptions","domainIdentifier","getDomainIdentifier","domainAxisScaleType","getDomainAxisScaleType","rangeAxisOptions","getRangeAxisOptions","rangeIdentifier","getRangeIdentifier","rangeAxisScaleType","getRangeAxisScaleType","groupMapsTo","domainLabel","title","domainAxisPosition","getDomainAxisPosition","BOTTOM","TOP","domainValue","TIME","Date","LINEAR","toLocaleString","length","datum","rangeLabel","rangeAxisPosition","getRangeAxisPosition","LEFT","RIGHT","rangeValue","label","value","color","getStrokeColor","valueFormatter","concat","map","sort","a","getProperty","push","reduce","accumulator","bold"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Tooltip } from \"./tooltip\";\nimport { AxisPositions, ScaleTypes } from \"../../interfaces\";\nimport { Tools } from \"../../tools\";\nimport { format } from \"date-fns\";\nvar AxisChartsTooltip = /** @class */ (function (_super) {\n    __extends(AxisChartsTooltip, _super);\n    function AxisChartsTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AxisChartsTooltip.prototype.getItems = function (e) {\n        var _this = this;\n        if (e.detail.items) {\n            return e.detail.items;\n        }\n        var options = this.model.getOptions();\n        var data = e.detail.data;\n        var cartesianScales = this.services.cartesianScales;\n        var domainAxisOptions = cartesianScales.getDomainAxisOptions();\n        var domainIdentifier = cartesianScales.getDomainIdentifier();\n        var domainAxisScaleType = cartesianScales.getDomainAxisScaleType();\n        var rangeAxisOptions = cartesianScales.getRangeAxisOptions();\n        var rangeIdentifier = cartesianScales.getRangeIdentifier();\n        var rangeAxisScaleType = cartesianScales.getRangeAxisScaleType();\n        // Generate default tooltip\n        var groupMapsTo = options.data.groupMapsTo;\n        var domainLabel = domainAxisOptions.title;\n        if (!domainLabel) {\n            var domainAxisPosition = cartesianScales.getDomainAxisPosition();\n            if (domainAxisPosition === AxisPositions.BOTTOM ||\n                domainAxisPosition === AxisPositions.TOP) {\n                domainLabel = \"x-value\";\n            }\n            else {\n                domainLabel = \"y-value\";\n            }\n        }\n        var domainValue = data[0][domainIdentifier];\n        if (domainAxisScaleType === ScaleTypes.TIME) {\n            domainValue = format(new Date(data[0][domainIdentifier]), \"MMM d, yyyy\");\n        }\n        else if (domainAxisScaleType === ScaleTypes.LINEAR) {\n            domainValue = domainValue.toLocaleString();\n        }\n        var items;\n        if (data.length === 1) {\n            var datum = data[0];\n            var rangeLabel = rangeAxisOptions.title;\n            if (!rangeLabel) {\n                var rangeAxisPosition = cartesianScales.getRangeAxisPosition();\n                if (rangeAxisPosition === AxisPositions.LEFT ||\n                    rangeAxisPosition === AxisPositions.RIGHT) {\n                    rangeLabel = \"y-value\";\n                }\n                else {\n                    rangeLabel = \"x-value\";\n                }\n            }\n            var rangeValue = datum[rangeIdentifier];\n            if (rangeAxisScaleType === ScaleTypes.LINEAR) {\n                rangeValue = rangeValue.toLocaleString();\n            }\n            items = [\n                {\n                    label: domainLabel,\n                    value: domainValue\n                },\n                {\n                    label: rangeLabel,\n                    value: rangeValue\n                },\n                {\n                    label: \"Group\",\n                    value: datum[groupMapsTo],\n                    color: this.model.getStrokeColor(datum[groupMapsTo])\n                }\n            ];\n        }\n        else if (data.length > 1) {\n            items = [\n                {\n                    label: domainLabel,\n                    value: this.valueFormatter(domainValue)\n                }\n            ];\n            items = items.concat(data\n                .map(function (datum) { return ({\n                label: datum[groupMapsTo],\n                value: _this.valueFormatter(datum[rangeIdentifier]),\n                color: _this.model.getStrokeColor(datum[groupMapsTo])\n            }); })\n                .sort(function (a, b) { return b.value - a.value; }));\n            if (Tools.getProperty(options, \"tooltip\", \"showTotal\") === true) {\n                items.push({\n                    label: \"Total\",\n                    value: this.valueFormatter(data.reduce(function (accumulator, datum) {\n                        return accumulator + datum[rangeIdentifier];\n                    }, 0)),\n                    bold: true\n                });\n            }\n        }\n        return items;\n    };\n    return AxisChartsTooltip;\n}(Tooltip));\nexport { AxisChartsTooltip };\n//# sourceMappingURL=../../../src/components/essentials/tooltip-axis.js.map"]},"metadata":{},"sourceType":"module"}