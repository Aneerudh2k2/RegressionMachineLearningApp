{"ast":null,"code":"import { DOMUtils } from \"../services\";\nimport { Tools } from \"../tools\"; // D3 Imports\n\nimport { select } from \"d3-selection\"; // import the settings for the css prefix\n\nimport settings from \"carbon-components/es/globals/js/settings\";\n\nvar Component =\n/** @class */\nfunction () {\n  function Component(model, services, configs) {\n    this.configs = {};\n    this.model = model;\n    this.services = services;\n\n    if (configs) {\n      this.configs = configs;\n    } // Set parent element to shell SVG if no parent exists for component\n\n\n    if (!this.parent) {\n      this.setParent(select(this.services.domUtils.getMainSVG()));\n    }\n  }\n\n  Component.prototype.init = function () {};\n\n  Component.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    console.error(\"render() method is not implemented\");\n  };\n\n  Component.prototype.destroy = function () {}; // Used to pass down information to the components\n\n\n  Component.prototype.setModel = function (newObj) {\n    this.model = newObj;\n  }; // Used to pass down information to the components\n\n\n  Component.prototype.setServices = function (newObj) {\n    this.services = newObj;\n  };\n\n  Component.prototype.setParent = function (parent) {\n    var oldParent = this.parent;\n    this.parent = parent;\n\n    if (oldParent && oldParent.node() === parent.node()) {\n      return;\n    }\n\n    if (this.type) {\n      var chartprefix = Tools.getProperty(this.model.getOptions(), \"style\", \"prefix\");\n      this.parent.classed(settings.prefix + \"--\" + chartprefix + \"--\" + this.type, true);\n\n      if (oldParent) {\n        oldParent.classed(settings.prefix + \"--\" + chartprefix + \"--\" + this.type, false);\n      }\n    }\n  };\n\n  Component.prototype.getParent = function () {\n    return this.parent;\n  };\n\n  Component.prototype.getContainerSVG = function () {\n    if (this.type) {\n      var chartprefix = Tools.getProperty(this.model.getOptions(), \"style\", \"prefix\");\n      return DOMUtils.appendOrSelect(this.parent, \"g.\" + settings.prefix + \"--\" + chartprefix + \"--\" + this.type);\n    }\n\n    return this.parent;\n  };\n\n  return Component;\n}();\n\nexport { Component };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/component.js"],"names":["DOMUtils","Tools","select","settings","Component","model","services","configs","parent","setParent","domUtils","getMainSVG","prototype","init","render","animate","console","error","destroy","setModel","newObj","setServices","oldParent","node","type","chartprefix","getProperty","getOptions","classed","prefix","getParent","getContainerSVG","appendOrSelect"],"mappings":"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","sourcesContent":["import { DOMUtils } from \"../services\";\nimport { Tools } from \"../tools\";\n// D3 Imports\nimport { select } from \"d3-selection\";\n// import the settings for the css prefix\nimport settings from \"carbon-components/es/globals/js/settings\";\nvar Component = /** @class */ (function () {\n    function Component(model, services, configs) {\n        this.configs = {};\n        this.model = model;\n        this.services = services;\n        if (configs) {\n            this.configs = configs;\n        }\n        // Set parent element to shell SVG if no parent exists for component\n        if (!this.parent) {\n            this.setParent(select(this.services.domUtils.getMainSVG()));\n        }\n    }\n    Component.prototype.init = function () { };\n    Component.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        console.error(\"render() method is not implemented\");\n    };\n    Component.prototype.destroy = function () { };\n    // Used to pass down information to the components\n    Component.prototype.setModel = function (newObj) {\n        this.model = newObj;\n    };\n    // Used to pass down information to the components\n    Component.prototype.setServices = function (newObj) {\n        this.services = newObj;\n    };\n    Component.prototype.setParent = function (parent) {\n        var oldParent = this.parent;\n        this.parent = parent;\n        if (oldParent && oldParent.node() === parent.node()) {\n            return;\n        }\n        if (this.type) {\n            var chartprefix = Tools.getProperty(this.model.getOptions(), \"style\", \"prefix\");\n            this.parent.classed(settings.prefix + \"--\" + chartprefix + \"--\" + this.type, true);\n            if (oldParent) {\n                oldParent.classed(settings.prefix + \"--\" + chartprefix + \"--\" + this.type, false);\n            }\n        }\n    };\n    Component.prototype.getParent = function () {\n        return this.parent;\n    };\n    Component.prototype.getContainerSVG = function () {\n        if (this.type) {\n            var chartprefix = Tools.getProperty(this.model.getOptions(), \"style\", \"prefix\");\n            return DOMUtils.appendOrSelect(this.parent, \"g.\" + settings.prefix + \"--\" + chartprefix + \"--\" + this.type);\n        }\n        return this.parent;\n    };\n    return Component;\n}());\nexport { Component };\n//# sourceMappingURL=../../src/components/component.js.map"]},"metadata":{},"sourceType":"module"}