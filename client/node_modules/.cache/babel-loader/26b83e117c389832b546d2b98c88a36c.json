{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Bar } from \"./bar\";\nimport { Events, Roles } from \"../../interfaces\";\nimport { Tools } from \"../../tools\"; // D3 Imports\n\nimport { select } from \"d3-selection\";\nimport { color } from \"d3-color\";\n\nvar SimpleBar =\n/** @class */\nfunction (_super) {\n  __extends(SimpleBar, _super);\n\n  function SimpleBar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = \"simple-bar\";\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      var groupMapsTo = _this.model.getOptions().data.groupMapsTo;\n\n      _this.parent.selectAll(\"path.bar\").transition(_this.services.transitions.getTransition(\"legend-hover-simple-bar\")).attr(\"opacity\", function (d) {\n        return d[groupMapsTo] !== hoveredElement.datum()[\"name\"] ? 0.3 : 1;\n      });\n    };\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll(\"path.bar\").transition(_this.services.transitions.getTransition(\"legend-mouseout-simple-bar\")).attr(\"opacity\", 1);\n    };\n\n    return _this;\n  }\n\n  SimpleBar.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct circle on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  SimpleBar.prototype.render = function (animate) {\n    var _this = this;\n\n    var options = this.model.getOptions();\n    var groupMapsTo = options.data.groupMapsTo; // Grab container SVG\n\n    var svg = this.getContainerSVG(); // Update data on all bars\n\n    var bars = svg.selectAll(\"path.bar\").data(this.model.getDisplayData(), function (datum) {\n      return datum[groupMapsTo];\n    }); // Remove bars that are no longer needed\n\n    bars.exit().attr(\"opacity\", 0).remove(); // Add the paths that need to be introduced\n\n    var barsEnter = bars.enter().append(\"path\").attr(\"opacity\", 0);\n    barsEnter.merge(bars).classed(\"bar\", true).attr(\"width\", this.getBarWidth.bind(this)).transition(this.services.transitions.getTransition(\"bar-update-enter\", animate)).attr(\"fill\", function (d) {\n      return _this.model.getFillColor(d[groupMapsTo]);\n    }).attr(\"d\", function (d, i) {\n      /*\n       * Orientation support for horizontal/vertical bar charts\n       * Determine coordinates needed for a vertical set of paths\n       * to draw the bars needed, and pass those coordinates down to\n       * generateSVGPathString() to decide whether it needs to flip them\n       */\n      var barWidth = _this.getBarWidth();\n\n      var x0 = _this.services.cartesianScales.getDomainValue(d, i) - barWidth / 2;\n      var x1 = x0 + barWidth;\n\n      var y0 = _this.services.cartesianScales.getRangeValue(0);\n\n      var y1 = _this.services.cartesianScales.getRangeValue(d, i);\n\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, _this.services.cartesianScales.getOrientation());\n    }).attr(\"opacity\", 1) // a11y\n    .attr(\"role\", Roles.GRAPHICS_SYMBOL).attr(\"aria-roledescription\", \"bar\").attr(\"aria-label\", function (d) {\n      return d.value;\n    }); // Add event listeners to elements drawn\n\n    this.addEventListeners();\n  };\n\n  SimpleBar.prototype.addEventListeners = function () {\n    var options = this.model.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var self = this;\n    this.parent.selectAll(\"path.bar\").on(\"mouseover\", function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed(\"hovered\", true);\n      hoveredElement.transition(self.services.transitions.getTransition(\"graph_element_mouseover_fill_update\")).attr(\"fill\", function (d) {\n        return color(self.model.getFillColor(d[groupMapsTo])).darker(0.7).toString();\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        data: [datum]\n      });\n    }).on(\"mousemove\", function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n        element: select(this),\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on(\"click\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on(\"mouseout\", function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed(\"hovered\", false);\n      hoveredElement.transition(self.services.transitions.getTransition(\"graph_element_mouseout_fill_update\")).attr(\"fill\", function (d) {\n        return self.model.getFillColor(d[groupMapsTo]);\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  SimpleBar.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll(\"path.bar\").on(\"mouseover\", null).on(\"mousemove\", null).on(\"mouseout\", null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  return SimpleBar;\n}(Bar);\n\nexport { SimpleBar };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/graphs/bar-simple.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Bar","Events","Roles","Tools","select","color","SimpleBar","_super","_this","apply","arguments","type","handleLegendOnHover","event","hoveredElement","detail","groupMapsTo","model","getOptions","data","parent","selectAll","transition","services","transitions","getTransition","attr","datum","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","options","svg","getContainerSVG","bars","getDisplayData","exit","remove","barsEnter","enter","append","merge","classed","getBarWidth","bind","getFillColor","i","barWidth","x0","cartesianScales","getDomainValue","x1","y0","getRangeValue","y1","generateSVGPathString","getOrientation","GRAPHICS_SYMBOL","value","addEventListeners","self","on","darker","toString","dispatchEvent","BAR_MOUSEOVER","element","Tooltip","SHOW","BAR_MOUSEMOVE","MOVE","BAR_CLICK","BAR_MOUSEOUT","HIDE","destroy","removeEventListener"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Bar } from \"./bar\";\nimport { Events, Roles } from \"../../interfaces\";\nimport { Tools } from \"../../tools\";\n// D3 Imports\nimport { select } from \"d3-selection\";\nimport { color } from \"d3-color\";\nvar SimpleBar = /** @class */ (function (_super) {\n    __extends(SimpleBar, _super);\n    function SimpleBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"simple-bar\";\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            var groupMapsTo = _this.model.getOptions().data.groupMapsTo;\n            _this.parent\n                .selectAll(\"path.bar\")\n                .transition(_this.services.transitions.getTransition(\"legend-hover-simple-bar\"))\n                .attr(\"opacity\", function (d) {\n                return d[groupMapsTo] !== hoveredElement.datum()[\"name\"] ? 0.3 : 1;\n            });\n        };\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll(\"path.bar\")\n                .transition(_this.services.transitions.getTransition(\"legend-mouseout-simple-bar\"))\n                .attr(\"opacity\", 1);\n        };\n        return _this;\n    }\n    SimpleBar.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct circle on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    SimpleBar.prototype.render = function (animate) {\n        var _this = this;\n        var options = this.model.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        // Grab container SVG\n        var svg = this.getContainerSVG();\n        // Update data on all bars\n        var bars = svg\n            .selectAll(\"path.bar\")\n            .data(this.model.getDisplayData(), function (datum) { return datum[groupMapsTo]; });\n        // Remove bars that are no longer needed\n        bars.exit().attr(\"opacity\", 0).remove();\n        // Add the paths that need to be introduced\n        var barsEnter = bars.enter().append(\"path\").attr(\"opacity\", 0);\n        barsEnter\n            .merge(bars)\n            .classed(\"bar\", true)\n            .attr(\"width\", this.getBarWidth.bind(this))\n            .transition(this.services.transitions.getTransition(\"bar-update-enter\", animate))\n            .attr(\"fill\", function (d) { return _this.model.getFillColor(d[groupMapsTo]); })\n            .attr(\"d\", function (d, i) {\n            /*\n             * Orientation support for horizontal/vertical bar charts\n             * Determine coordinates needed for a vertical set of paths\n             * to draw the bars needed, and pass those coordinates down to\n             * generateSVGPathString() to decide whether it needs to flip them\n             */\n            var barWidth = _this.getBarWidth();\n            var x0 = _this.services.cartesianScales.getDomainValue(d, i) -\n                barWidth / 2;\n            var x1 = x0 + barWidth;\n            var y0 = _this.services.cartesianScales.getRangeValue(0);\n            var y1 = _this.services.cartesianScales.getRangeValue(d, i);\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n        })\n            .attr(\"opacity\", 1)\n            // a11y\n            .attr(\"role\", Roles.GRAPHICS_SYMBOL)\n            .attr(\"aria-roledescription\", \"bar\")\n            .attr(\"aria-label\", function (d) { return d.value; });\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    SimpleBar.prototype.addEventListeners = function () {\n        var options = this.model.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var self = this;\n        this.parent\n            .selectAll(\"path.bar\")\n            .on(\"mouseover\", function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed(\"hovered\", true);\n            hoveredElement\n                .transition(self.services.transitions.getTransition(\"graph_element_mouseover_fill_update\"))\n                .attr(\"fill\", function (d) {\n                return color(self.model.getFillColor(d[groupMapsTo]))\n                    .darker(0.7)\n                    .toString();\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                data: [datum]\n            });\n        })\n            .on(\"mousemove\", function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n                element: select(this),\n                datum: datum\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on(\"click\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n                element: select(this),\n                datum: datum\n            });\n        })\n            .on(\"mouseout\", function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed(\"hovered\", false);\n            hoveredElement\n                .transition(self.services.transitions.getTransition(\"graph_element_mouseout_fill_update\"))\n                .attr(\"fill\", function (d) {\n                return self.model.getFillColor(d[groupMapsTo]);\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement\n            });\n        });\n    };\n    SimpleBar.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll(\"path.bar\")\n            .on(\"mouseover\", null)\n            .on(\"mousemove\", null)\n            .on(\"mouseout\", null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    return SimpleBar;\n}(Bar));\nexport { SimpleBar };\n//# sourceMappingURL=../../../src/components/graphs/bar-simple.js.map"]},"metadata":{},"sourceType":"module"}