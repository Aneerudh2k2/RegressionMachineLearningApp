{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from \"../component\";\nimport { Tools } from \"../../tools\";\nimport { LegendOrientations, Roles, Events, TruncationTypes } from \"../../interfaces\";\nimport { DOMUtils } from \"../../services\"; // D3 Imports\n\nimport { select } from \"d3-selection\";\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n\n  function Legend() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = \"legend\";\n    return _this;\n  }\n\n  Legend.prototype.render = function () {\n    var _this = this;\n\n    var svg = this.getContainerSVG().attr(\"role\", Roles.GRAPHICS_DOCUMENT + \" \" + Roles.DOCUMENT);\n    var options = this.model.getOptions();\n    var legendOptions = Tools.getProperty(options, \"legend\");\n    var legendItems = svg.selectAll(\"g.legend-item\").data(this.model.getDataGroups(), function (dataGroup) {\n      return dataGroup.name;\n    }); // this.getLegendItemArray()\n\n    var addedLegendItems = legendItems.enter().append(\"g\").classed(\"legend-item\", true).classed(\"active\", function (d, i) {\n      return d.status === options.legend.items.status.ACTIVE;\n    }); // Configs\n\n    var checkboxRadius = options.legend.checkbox.radius; // Truncation\n    // get user provided custom values for truncation\n\n    var truncationType = Tools.getProperty(legendOptions, \"truncation\", \"type\");\n    var truncationThreshold = Tools.getProperty(legendOptions, \"truncation\", \"threshold\");\n    var truncationNumCharacter = Tools.getProperty(legendOptions, \"truncation\", \"numCharacter\");\n    addedLegendItems.append(\"rect\").classed(\"checkbox\", true).merge(legendItems.select(\"rect.checkbox\")).attr(\"width\", checkboxRadius * 2).attr(\"height\", checkboxRadius * 2).attr(\"rx\", 1).attr(\"ry\", 1).style(\"fill\", function (d) {\n      return d.status === options.legend.items.status.ACTIVE ? _this.model.getStrokeColor(d.name) : null;\n    }).classed(\"active\", function (d, i) {\n      return d.status === options.legend.items.status.ACTIVE;\n    });\n    var addedLegendItemsText = addedLegendItems.append(\"text\").merge(legendItems.select(\"text\")); // truncate the legend label if it's too long\n\n    if (truncationType !== TruncationTypes.NONE) {\n      addedLegendItemsText.html(function (d) {\n        if (d.name.length > truncationThreshold) {\n          return Tools.truncateLabel(d.name, truncationType, truncationNumCharacter);\n        } else {\n          return d.name;\n        }\n      });\n    } else {\n      addedLegendItemsText.html(function (d) {\n        return d.name;\n      });\n    }\n\n    this.breakItemsIntoLines(addedLegendItems); // Remove old elements as needed.\n\n    legendItems.exit().on(\"mouseover\", null).on(\"click\", null).on(\"mouseout\", null).remove();\n    var legendClickable = Tools.getProperty(this.model.getOptions(), \"legend\", \"clickable\");\n    svg.classed(\"clickable\", legendClickable);\n\n    if (legendClickable && addedLegendItems.size() > 0) {\n      this.addEventListeners();\n    }\n\n    var alignment = Tools.getProperty(legendOptions, \"alignment\");\n    var alignmentOffset = DOMUtils.getAlignmentOffset(alignment, svg, this.getParent());\n    svg.attr(\"transform\", \"translate(\" + alignmentOffset + \", 0)\");\n  };\n\n  Legend.prototype.breakItemsIntoLines = function (addedLegendItems) {\n    var self = this;\n    var svg = this.getContainerSVG();\n    var options = this.model.getOptions(); // Configs\n\n    var checkboxRadius = options.legend.checkbox.radius;\n    var legendItemsHorizontalSpacing = options.legend.items.horizontalSpace;\n    var legendItemsVerticalSpacing = options.legend.items.verticalSpace;\n    var legendTextYOffset = options.legend.items.textYOffset;\n    var spaceNeededForCheckbox = checkboxRadius * 2 + options.legend.checkbox.spaceAfter; // Check if there are disabled legend items\n\n    var DISABLED = options.legend.items.status.DISABLED;\n    var dataGroups = this.model.getDataGroups();\n    var hasDeactivatedItems = dataGroups.some(function (dataGroup) {\n      return dataGroup.status === DISABLED;\n    });\n    var legendOrientation = Tools.getProperty(options, \"legend\", \"orientation\"); // Keep track of line numbers and positions\n\n    var startingPoint = 0;\n    var lineNumber = 0;\n    var itemIndexInLine = 0;\n    var lastYPosition;\n    addedLegendItems.merge(svg.selectAll(\"g.legend-item\")).each(function (d, i) {\n      var legendItem = select(this);\n      var previousLegendItem = select(svg.selectAll(\"g.legend-item\").nodes()[i - 1]);\n\n      if (itemIndexInLine === 0 || previousLegendItem.empty() || legendOrientation === LegendOrientations.VERTICAL) {\n        if (legendOrientation === LegendOrientations.VERTICAL && i !== 0) {\n          lineNumber++;\n        }\n      } else {\n        var svgDimensions = DOMUtils.getSVGElementSize(self.parent, {\n          useAttr: true\n        });\n        var legendItemTextDimensions = DOMUtils.getSVGElementSize(select(this).select(\"text\"), {\n          useBBox: true\n        });\n        var lastLegendItemTextDimensions = DOMUtils.getSVGElementSize(previousLegendItem.select(\"text\"), {\n          useBBox: true\n        });\n        startingPoint = startingPoint + lastLegendItemTextDimensions.width + spaceNeededForCheckbox + legendItemsHorizontalSpacing;\n\n        if (startingPoint + spaceNeededForCheckbox + legendItemTextDimensions.width > svgDimensions.width) {\n          lineNumber++;\n          startingPoint = 0;\n          itemIndexInLine = 0;\n        }\n      }\n\n      var yOffset = 0; // Position checkbox\n      // TODO - Replace with layout component margins\n\n      legendItem.select(\"rect.checkbox\").attr(\"x\", startingPoint).attr(\"y\", yOffset + lineNumber * legendItemsVerticalSpacing); // Position text\n      // TODO - Replace with layout component margins\n\n      var yPosition = legendTextYOffset + lineNumber * legendItemsVerticalSpacing;\n      legendItem.select(\"text\").attr(\"x\", startingPoint + spaceNeededForCheckbox).attr(\"y\", yOffset + yPosition + 3);\n      lastYPosition = yPosition; // Test if legendItems are placed in the correct direction\n\n      var testHorizontal = (!legendOrientation || legendOrientation === LegendOrientations.HORIZONTAL) && legendItem.select(\"rect.checkbox\").attr(\"y\") === \"0\";\n      var testVertical = legendOrientation === LegendOrientations.VERTICAL && legendItem.select(\"rect.checkbox\").attr(\"x\") === \"0\";\n      var hasCorrectLegendDirection = testHorizontal || testVertical; // Render checkbox check icon\n\n      if (hasDeactivatedItems && legendItem.select(\"g.check\").empty() && hasCorrectLegendDirection) {\n        legendItem.append(\"g\").classed(\"check\", true).html(\"\\n\\t\\t\\t\\t\\t\\t\\t<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\txmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"32\\\" height=\\\"32\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tviewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tstyle=\\\"will-change: transform;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<path d=\\\"M13 21.2l-7.1-7.1-1.4 1.4 7.1 7.1L13 24 27.1 9.9l-1.4-1.5z\\\"></path>\\n\\t\\t\\t\\t\\t\\t\\t\\t<title>Checkmark</title>\\n\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\");\n        legendItem.select(\"g.check svg\").attr(\"width\", checkboxRadius * 2 - 1).attr(\"height\", checkboxRadius * 2 - 1).attr(\"x\", parseFloat(legendItem.select(\"rect.checkbox\").attr(\"x\")) + 0.5).attr(\"y\", parseFloat(legendItem.select(\"rect.checkbox\").attr(\"y\")) + 0.5);\n      } else if (!hasDeactivatedItems && !legendItem.select(\"g.check\").empty()) {\n        legendItem.select(\"g.check\").remove();\n      }\n\n      itemIndexInLine++;\n    });\n  };\n\n  Legend.prototype.addEventListeners = function () {\n    var self = this;\n    var svg = this.getContainerSVG();\n    var options = this.model.getOptions();\n    var legendOptions = Tools.getProperty(options, \"legend\");\n    var truncationThreshold = Tools.getProperty(legendOptions, \"truncation\", \"threshold\");\n    svg.selectAll(\"g.legend-item\").on(\"mouseover\", function () {\n      self.services.events.dispatchEvent(Events.Legend.ITEM_HOVER, {\n        hoveredElement: select(this)\n      }); // Configs\n\n      var checkboxRadius = options.legend.checkbox.radius;\n      var hoveredItem = select(this);\n      hoveredItem.append(\"rect\").classed(\"hover-stroke\", true).attr(\"x\", parseFloat(hoveredItem.select(\"rect.checkbox\").attr(\"x\")) - 2).attr(\"y\", parseFloat(hoveredItem.select(\"rect.checkbox\").attr(\"y\")) - 2).attr(\"width\", checkboxRadius * 2 + 4).attr(\"height\", checkboxRadius * 2 + 4).attr(\"rx\", 3).attr(\"ry\", 3).lower();\n      var hoveredItemData = hoveredItem.datum();\n\n      if (hoveredItemData.name.length > truncationThreshold) {\n        self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n          hoveredElement: hoveredItem,\n          content: hoveredItemData.name\n        });\n      }\n    }).on(\"mousemove\", function () {\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on(\"click\", function () {\n      self.services.events.dispatchEvent(Events.Legend.ITEM_CLICK, {\n        clickedElement: select(this)\n      });\n      var clickedItem = select(this);\n      var clickedItemData = clickedItem.datum();\n      self.model.toggleDataLabel(clickedItemData.name);\n    }).on(\"mouseout\", function () {\n      var hoveredItem = select(this);\n      hoveredItem.select(\"rect.hover-stroke\").remove();\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE);\n      self.services.events.dispatchEvent(Events.Legend.ITEM_MOUSEOUT, {\n        hoveredElement: hoveredItem\n      });\n    });\n  };\n\n  return Legend;\n}(Component);\n\nexport { Legend };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/essentials/legend.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","Tools","LegendOrientations","Roles","Events","TruncationTypes","DOMUtils","select","Legend","_super","_this","apply","arguments","type","render","svg","getContainerSVG","attr","GRAPHICS_DOCUMENT","DOCUMENT","options","model","getOptions","legendOptions","getProperty","legendItems","selectAll","data","getDataGroups","dataGroup","name","addedLegendItems","enter","append","classed","i","status","legend","items","ACTIVE","checkboxRadius","checkbox","radius","truncationType","truncationThreshold","truncationNumCharacter","merge","style","getStrokeColor","addedLegendItemsText","NONE","html","length","truncateLabel","breakItemsIntoLines","exit","on","remove","legendClickable","size","addEventListeners","alignment","alignmentOffset","getAlignmentOffset","getParent","self","legendItemsHorizontalSpacing","horizontalSpace","legendItemsVerticalSpacing","verticalSpace","legendTextYOffset","textYOffset","spaceNeededForCheckbox","spaceAfter","DISABLED","dataGroups","hasDeactivatedItems","some","legendOrientation","startingPoint","lineNumber","itemIndexInLine","lastYPosition","each","legendItem","previousLegendItem","nodes","empty","VERTICAL","svgDimensions","getSVGElementSize","parent","useAttr","legendItemTextDimensions","useBBox","lastLegendItemTextDimensions","width","yOffset","yPosition","testHorizontal","HORIZONTAL","testVertical","hasCorrectLegendDirection","parseFloat","services","events","dispatchEvent","ITEM_HOVER","hoveredElement","hoveredItem","lower","hoveredItemData","datum","Tooltip","SHOW","content","MOVE","ITEM_CLICK","clickedElement","clickedItem","clickedItemData","toggleDataLabel","HIDE","ITEM_MOUSEOUT"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from \"../component\";\nimport { Tools } from \"../../tools\";\nimport { LegendOrientations, Roles, Events, TruncationTypes } from \"../../interfaces\";\nimport { DOMUtils } from \"../../services\";\n// D3 Imports\nimport { select } from \"d3-selection\";\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"legend\";\n        return _this;\n    }\n    Legend.prototype.render = function () {\n        var _this = this;\n        var svg = this.getContainerSVG().attr(\"role\", Roles.GRAPHICS_DOCUMENT + \" \" + Roles.DOCUMENT);\n        var options = this.model.getOptions();\n        var legendOptions = Tools.getProperty(options, \"legend\");\n        var legendItems = svg\n            .selectAll(\"g.legend-item\")\n            .data(this.model.getDataGroups(), function (dataGroup) { return dataGroup.name; });\n        // this.getLegendItemArray()\n        var addedLegendItems = legendItems\n            .enter()\n            .append(\"g\")\n            .classed(\"legend-item\", true)\n            .classed(\"active\", function (d, i) {\n            return d.status === options.legend.items.status.ACTIVE;\n        });\n        // Configs\n        var checkboxRadius = options.legend.checkbox.radius;\n        // Truncation\n        // get user provided custom values for truncation\n        var truncationType = Tools.getProperty(legendOptions, \"truncation\", \"type\");\n        var truncationThreshold = Tools.getProperty(legendOptions, \"truncation\", \"threshold\");\n        var truncationNumCharacter = Tools.getProperty(legendOptions, \"truncation\", \"numCharacter\");\n        addedLegendItems\n            .append(\"rect\")\n            .classed(\"checkbox\", true)\n            .merge(legendItems.select(\"rect.checkbox\"))\n            .attr(\"width\", checkboxRadius * 2)\n            .attr(\"height\", checkboxRadius * 2)\n            .attr(\"rx\", 1)\n            .attr(\"ry\", 1)\n            .style(\"fill\", function (d) {\n            return d.status === options.legend.items.status.ACTIVE\n                ? _this.model.getStrokeColor(d.name)\n                : null;\n        })\n            .classed(\"active\", function (d, i) {\n            return d.status === options.legend.items.status.ACTIVE;\n        });\n        var addedLegendItemsText = addedLegendItems\n            .append(\"text\")\n            .merge(legendItems.select(\"text\"));\n        // truncate the legend label if it's too long\n        if (truncationType !== TruncationTypes.NONE) {\n            addedLegendItemsText.html(function (d) {\n                if (d.name.length > truncationThreshold) {\n                    return Tools.truncateLabel(d.name, truncationType, truncationNumCharacter);\n                }\n                else {\n                    return d.name;\n                }\n            });\n        }\n        else {\n            addedLegendItemsText.html(function (d) { return d.name; });\n        }\n        this.breakItemsIntoLines(addedLegendItems);\n        // Remove old elements as needed.\n        legendItems\n            .exit()\n            .on(\"mouseover\", null)\n            .on(\"click\", null)\n            .on(\"mouseout\", null)\n            .remove();\n        var legendClickable = Tools.getProperty(this.model.getOptions(), \"legend\", \"clickable\");\n        svg.classed(\"clickable\", legendClickable);\n        if (legendClickable && addedLegendItems.size() > 0) {\n            this.addEventListeners();\n        }\n        var alignment = Tools.getProperty(legendOptions, \"alignment\");\n        var alignmentOffset = DOMUtils.getAlignmentOffset(alignment, svg, this.getParent());\n        svg.attr(\"transform\", \"translate(\" + alignmentOffset + \", 0)\");\n    };\n    Legend.prototype.breakItemsIntoLines = function (addedLegendItems) {\n        var self = this;\n        var svg = this.getContainerSVG();\n        var options = this.model.getOptions();\n        // Configs\n        var checkboxRadius = options.legend.checkbox.radius;\n        var legendItemsHorizontalSpacing = options.legend.items.horizontalSpace;\n        var legendItemsVerticalSpacing = options.legend.items.verticalSpace;\n        var legendTextYOffset = options.legend.items.textYOffset;\n        var spaceNeededForCheckbox = checkboxRadius * 2 + options.legend.checkbox.spaceAfter;\n        // Check if there are disabled legend items\n        var DISABLED = options.legend.items.status.DISABLED;\n        var dataGroups = this.model.getDataGroups();\n        var hasDeactivatedItems = dataGroups.some(function (dataGroup) { return dataGroup.status === DISABLED; });\n        var legendOrientation = Tools.getProperty(options, \"legend\", \"orientation\");\n        // Keep track of line numbers and positions\n        var startingPoint = 0;\n        var lineNumber = 0;\n        var itemIndexInLine = 0;\n        var lastYPosition;\n        addedLegendItems\n            .merge(svg.selectAll(\"g.legend-item\"))\n            .each(function (d, i) {\n            var legendItem = select(this);\n            var previousLegendItem = select(svg.selectAll(\"g.legend-item\").nodes()[i - 1]);\n            if (itemIndexInLine === 0 ||\n                previousLegendItem.empty() ||\n                legendOrientation === LegendOrientations.VERTICAL) {\n                if (legendOrientation === LegendOrientations.VERTICAL &&\n                    i !== 0) {\n                    lineNumber++;\n                }\n            }\n            else {\n                var svgDimensions = DOMUtils.getSVGElementSize(self.parent, { useAttr: true });\n                var legendItemTextDimensions = DOMUtils.getSVGElementSize(select(this).select(\"text\"), { useBBox: true });\n                var lastLegendItemTextDimensions = DOMUtils.getSVGElementSize(previousLegendItem.select(\"text\"), { useBBox: true });\n                startingPoint =\n                    startingPoint +\n                        lastLegendItemTextDimensions.width +\n                        spaceNeededForCheckbox +\n                        legendItemsHorizontalSpacing;\n                if (startingPoint +\n                    spaceNeededForCheckbox +\n                    legendItemTextDimensions.width >\n                    svgDimensions.width) {\n                    lineNumber++;\n                    startingPoint = 0;\n                    itemIndexInLine = 0;\n                }\n            }\n            var yOffset = 0;\n            // Position checkbox\n            // TODO - Replace with layout component margins\n            legendItem\n                .select(\"rect.checkbox\")\n                .attr(\"x\", startingPoint)\n                .attr(\"y\", yOffset + lineNumber * legendItemsVerticalSpacing);\n            // Position text\n            // TODO - Replace with layout component margins\n            var yPosition = legendTextYOffset + lineNumber * legendItemsVerticalSpacing;\n            legendItem\n                .select(\"text\")\n                .attr(\"x\", startingPoint + spaceNeededForCheckbox)\n                .attr(\"y\", yOffset + yPosition + 3);\n            lastYPosition = yPosition;\n            // Test if legendItems are placed in the correct direction\n            var testHorizontal = (!legendOrientation ||\n                legendOrientation === LegendOrientations.HORIZONTAL) &&\n                legendItem.select(\"rect.checkbox\").attr(\"y\") === \"0\";\n            var testVertical = legendOrientation === LegendOrientations.VERTICAL &&\n                legendItem.select(\"rect.checkbox\").attr(\"x\") === \"0\";\n            var hasCorrectLegendDirection = testHorizontal || testVertical;\n            // Render checkbox check icon\n            if (hasDeactivatedItems &&\n                legendItem.select(\"g.check\").empty() &&\n                hasCorrectLegendDirection) {\n                legendItem.append(\"g\").classed(\"check\", true).html(\"\\n\\t\\t\\t\\t\\t\\t\\t<svg focusable=\\\"false\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\txmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"32\\\" height=\\\"32\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tviewBox=\\\"0 0 32 32\\\" aria-hidden=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tstyle=\\\"will-change: transform;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<path d=\\\"M13 21.2l-7.1-7.1-1.4 1.4 7.1 7.1L13 24 27.1 9.9l-1.4-1.5z\\\"></path>\\n\\t\\t\\t\\t\\t\\t\\t\\t<title>Checkmark</title>\\n\\t\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t\\t\");\n                legendItem\n                    .select(\"g.check svg\")\n                    .attr(\"width\", checkboxRadius * 2 - 1)\n                    .attr(\"height\", checkboxRadius * 2 - 1)\n                    .attr(\"x\", parseFloat(legendItem.select(\"rect.checkbox\").attr(\"x\")) + 0.5)\n                    .attr(\"y\", parseFloat(legendItem.select(\"rect.checkbox\").attr(\"y\")) + 0.5);\n            }\n            else if (!hasDeactivatedItems &&\n                !legendItem.select(\"g.check\").empty()) {\n                legendItem.select(\"g.check\").remove();\n            }\n            itemIndexInLine++;\n        });\n    };\n    Legend.prototype.addEventListeners = function () {\n        var self = this;\n        var svg = this.getContainerSVG();\n        var options = this.model.getOptions();\n        var legendOptions = Tools.getProperty(options, \"legend\");\n        var truncationThreshold = Tools.getProperty(legendOptions, \"truncation\", \"threshold\");\n        svg.selectAll(\"g.legend-item\")\n            .on(\"mouseover\", function () {\n            self.services.events.dispatchEvent(Events.Legend.ITEM_HOVER, {\n                hoveredElement: select(this)\n            });\n            // Configs\n            var checkboxRadius = options.legend.checkbox.radius;\n            var hoveredItem = select(this);\n            hoveredItem\n                .append(\"rect\")\n                .classed(\"hover-stroke\", true)\n                .attr(\"x\", parseFloat(hoveredItem.select(\"rect.checkbox\").attr(\"x\")) - 2)\n                .attr(\"y\", parseFloat(hoveredItem.select(\"rect.checkbox\").attr(\"y\")) - 2)\n                .attr(\"width\", checkboxRadius * 2 + 4)\n                .attr(\"height\", checkboxRadius * 2 + 4)\n                .attr(\"rx\", 3)\n                .attr(\"ry\", 3)\n                .lower();\n            var hoveredItemData = hoveredItem.datum();\n            if (hoveredItemData.name.length > truncationThreshold) {\n                self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                    hoveredElement: hoveredItem,\n                    content: hoveredItemData.name\n                });\n            }\n        })\n            .on(\"mousemove\", function () {\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on(\"click\", function () {\n            self.services.events.dispatchEvent(Events.Legend.ITEM_CLICK, {\n                clickedElement: select(this)\n            });\n            var clickedItem = select(this);\n            var clickedItemData = clickedItem.datum();\n            self.model.toggleDataLabel(clickedItemData.name);\n        })\n            .on(\"mouseout\", function () {\n            var hoveredItem = select(this);\n            hoveredItem.select(\"rect.hover-stroke\").remove();\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE);\n            self.services.events.dispatchEvent(Events.Legend.ITEM_MOUSEOUT, {\n                hoveredElement: hoveredItem\n            });\n        });\n    };\n    return Legend;\n}(Component));\nexport { Legend };\n//# sourceMappingURL=../../../src/components/essentials/legend.js.map"]},"metadata":{},"sourceType":"module"}