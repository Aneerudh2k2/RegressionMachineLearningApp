{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Bar } from \"./bar\";\nimport { Tools } from \"../../tools\";\nimport { CartesianOrientations, Events, Roles } from \"../../interfaces\"; // D3 Imports\n\nimport { map } from \"d3-collection\";\nimport { select } from \"d3-selection\";\nimport { color } from \"d3-color\";\nimport { scaleBand } from \"d3-scale\";\n\nvar GroupedBar =\n/** @class */\nfunction (_super) {\n  __extends(GroupedBar, _super);\n\n  function GroupedBar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = \"grouped-bar\";\n    _this.padding = 5; // Highlight elements that match the hovered legend item\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      var groupMapsTo = _this.model.getOptions().data.groupMapsTo;\n\n      _this.parent.selectAll(\"path.bar\").transition(_this.services.transitions.getTransition(\"legend-hover-bar\")).attr(\"opacity\", function (d) {\n        return d[groupMapsTo] !== hoveredElement.datum()[\"name\"] ? 0.3 : 1;\n      });\n    }; // Un-highlight all elements\n\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll(\"path.bar\").transition(_this.services.transitions.getTransition(\"legend-mouseout-bar\")).attr(\"opacity\", 1);\n    };\n\n    return _this;\n  }\n\n  GroupedBar.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct circle on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  GroupedBar.prototype.render = function (animate) {\n    var _this = this; // Chart options mixed with the internal configurations\n\n\n    var displayData = this.model.getDisplayData();\n    var options = this.model.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier(); // Get unique labels\n\n    this.setGroupScale(); // Grab container SVG\n\n    var svg = this.getContainerSVG();\n    var allDataLabels = map(displayData, function (datum) {\n      return datum[domainIdentifier];\n    }).keys(); // Update data on bar groups\n\n    var barGroups = svg.selectAll(\"g.bars\").data(allDataLabels, function (label) {\n      return label;\n    }); // Remove dot groups that need to be removed\n\n    barGroups.exit().attr(\"opacity\", 0).remove(); // Add the bar groups that need to be introduced\n\n    var barGroupsEnter = barGroups.enter().append(\"g\").classed(\"bars\", true).attr(\"role\", Roles.GROUP).attr(\"aria-labelledby\", function (d) {\n      return d;\n    }); // Update data on all bars\n\n    var bars = barGroupsEnter.merge(barGroups).attr(\"transform\", function (label, i) {\n      var scaleValue = _this.services.cartesianScales.getDomainValue(label, i);\n\n      var translateBy = scaleValue - _this.getGroupWidth() / 2; // const translateBy = scaleValue - this.getGroupWidth(null) / 2 + this.getBarWidth(null);\n\n      if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {\n        return \"translate(\" + translateBy + \", 0)\";\n      } else {\n        // translate in the y direction for horizontal groups\n        return \"translate(0, \" + translateBy + \")\";\n      }\n    }).selectAll(\"path.bar\").data(function (label) {\n      return _this.getDataCorrespondingToLabel(label);\n    }); // Remove bars that are no longer needed\n\n    bars.exit().attr(\"opacity\", 0).remove(); // Add the circles that need to be introduced\n\n    var barsEnter = bars.enter().append(\"path\").attr(\"opacity\", 0); // code for vertical grouped bar charts\n\n    barsEnter.merge(bars).classed(\"bar\", true).transition(this.services.transitions.getTransition(\"bar-update-enter\", animate)).attr(\"fill\", function (d) {\n      return _this.model.getFillColor(d[groupMapsTo]);\n    }).attr(\"d\", function (d) {\n      /*\n       * Orientation support for horizontal/vertical bar charts\n       * Determine coordinates needed for a vertical set of paths\n       * to draw the bars needed, and pass those coordinates down to\n       * generateSVGPathString() to decide whether it needs to flip them\n       */\n      var startX = _this.groupScale(d[groupMapsTo]);\n\n      var barWidth = _this.getBarWidth();\n\n      var x0 = startX;\n      var x1 = startX + barWidth;\n\n      var y0 = _this.services.cartesianScales.getRangeValue(0);\n\n      var y1 = _this.services.cartesianScales.getRangeValue(d.value);\n\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, _this.services.cartesianScales.getOrientation());\n    }).attr(\"opacity\", 1) // a11y\n    .attr(\"role\", Roles.GRAPHICS_SYMBOL).attr(\"aria-roledescription\", \"bar\").attr(\"aria-label\", function (d) {\n      return d.value;\n    }); // Add event listeners to elements drawn\n\n    this.addEventListeners();\n  };\n\n  GroupedBar.prototype.addEventListeners = function () {\n    var self = this;\n    var options = this.model.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    this.parent.selectAll(\"path.bar\").on(\"mouseover\", function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.transition(self.services.transitions.getTransition(\"graph_element_mouseover_fill_update\")).attr(\"fill\", function (d) {\n        return color(self.model.getFillColor(d[groupMapsTo])).darker(0.7).toString();\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      }); // Show tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        data: [datum]\n      });\n    }).on(\"mousemove\", function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on(\"click\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on(\"mouseout\", function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed(\"hovered\", false);\n      var groupMapsTo = self.model.getOptions().data.groupMapsTo;\n      hoveredElement.transition(self.services.transitions.getTransition(\"graph_element_mouseout_fill_update\")).attr(\"fill\", function (d) {\n        return self.model.getFillColor(d[groupMapsTo]);\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  GroupedBar.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll(\"path.bar\").on(\"mouseover\", null).on(\"mousemove\", null).on(\"mouseout\", null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  GroupedBar.prototype.getDataCorrespondingToLabel = function (label) {\n    var displayData = this.model.getDisplayData();\n    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();\n    return displayData.filter(function (datum) {\n      return datum[domainIdentifier] === label;\n    });\n  };\n\n  GroupedBar.prototype.getGroupWidth = function () {\n    var numOfActiveDataGroups = this.model.getActiveDataGroupNames().length;\n    var totalGroupPadding = this.getTotalGroupPadding();\n    return this.getBarWidth() * numOfActiveDataGroups + totalGroupPadding;\n  };\n\n  GroupedBar.prototype.getTotalGroupPadding = function () {\n    var numOfActiveDataGroups = this.model.getActiveDataGroupNames().length;\n\n    if (numOfActiveDataGroups === 1) {\n      return 0;\n    }\n\n    var domainScale = this.services.cartesianScales.getDomainScale();\n    var padding = Math.min(5, 5 * (domainScale.step() / 70));\n    return padding * (numOfActiveDataGroups - 1);\n  }; // Gets the correct width for bars based on options & configurations\n\n\n  GroupedBar.prototype.getBarWidth = function () {\n    var options = this.model.getOptions();\n    var providedWidth = Tools.getProperty(options, \"bars\", \"width\");\n    var providedMaxWidth = Tools.getProperty(options, \"bars\", \"maxWidth\"); // If there's a provided width, compare with maxWidth and\n    // Determine which to return\n\n    if (providedWidth !== null) {\n      if (providedMaxWidth === null) {\n        return providedWidth;\n      } else if (providedWidth <= providedMaxWidth) {\n        return providedWidth;\n      }\n    }\n\n    var numOfActiveDataGroups = this.model.getActiveDataGroupNames().length;\n    var totalGroupPadding = this.getTotalGroupPadding();\n    var domainScale = this.services.cartesianScales.getDomainScale();\n    return Math.min(providedMaxWidth, (domainScale.step() - totalGroupPadding) / numOfActiveDataGroups);\n  };\n\n  GroupedBar.prototype.setGroupScale = function () {\n    this.groupScale = scaleBand().domain(this.model.getActiveDataGroupNames()).rangeRound([0, this.getGroupWidth()]);\n  };\n\n  return GroupedBar;\n}(Bar);\n\nexport { GroupedBar };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/graphs/bar-grouped.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Bar","Tools","CartesianOrientations","Events","Roles","map","select","color","scaleBand","GroupedBar","_super","_this","apply","arguments","type","padding","handleLegendOnHover","event","hoveredElement","detail","groupMapsTo","model","getOptions","data","parent","selectAll","transition","services","transitions","getTransition","attr","datum","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","displayData","getDisplayData","options","domainIdentifier","cartesianScales","getDomainIdentifier","setGroupScale","svg","getContainerSVG","allDataLabels","keys","barGroups","label","exit","remove","barGroupsEnter","enter","append","classed","GROUP","bars","merge","i","scaleValue","getDomainValue","translateBy","getGroupWidth","getOrientation","VERTICAL","getDataCorrespondingToLabel","barsEnter","getFillColor","startX","groupScale","barWidth","getBarWidth","x0","x1","y0","getRangeValue","y1","value","generateSVGPathString","GRAPHICS_SYMBOL","addEventListeners","self","on","darker","toString","dispatchEvent","BAR_MOUSEOVER","element","Tooltip","SHOW","BAR_MOUSEMOVE","MOVE","BAR_CLICK","BAR_MOUSEOUT","HIDE","destroy","removeEventListener","filter","numOfActiveDataGroups","getActiveDataGroupNames","length","totalGroupPadding","getTotalGroupPadding","domainScale","getDomainScale","Math","min","step","providedWidth","getProperty","providedMaxWidth","domain","rangeRound"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Bar } from \"./bar\";\nimport { Tools } from \"../../tools\";\nimport { CartesianOrientations, Events, Roles } from \"../../interfaces\";\n// D3 Imports\nimport { map } from \"d3-collection\";\nimport { select } from \"d3-selection\";\nimport { color } from \"d3-color\";\nimport { scaleBand } from \"d3-scale\";\nvar GroupedBar = /** @class */ (function (_super) {\n    __extends(GroupedBar, _super);\n    function GroupedBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"grouped-bar\";\n        _this.padding = 5;\n        // Highlight elements that match the hovered legend item\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            var groupMapsTo = _this.model.getOptions().data.groupMapsTo;\n            _this.parent\n                .selectAll(\"path.bar\")\n                .transition(_this.services.transitions.getTransition(\"legend-hover-bar\"))\n                .attr(\"opacity\", function (d) {\n                return d[groupMapsTo] !== hoveredElement.datum()[\"name\"] ? 0.3 : 1;\n            });\n        };\n        // Un-highlight all elements\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll(\"path.bar\")\n                .transition(_this.services.transitions.getTransition(\"legend-mouseout-bar\"))\n                .attr(\"opacity\", 1);\n        };\n        return _this;\n    }\n    GroupedBar.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct circle on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    GroupedBar.prototype.render = function (animate) {\n        var _this = this;\n        // Chart options mixed with the internal configurations\n        var displayData = this.model.getDisplayData();\n        var options = this.model.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();\n        // Get unique labels\n        this.setGroupScale();\n        // Grab container SVG\n        var svg = this.getContainerSVG();\n        var allDataLabels = map(displayData, function (datum) { return datum[domainIdentifier]; }).keys();\n        // Update data on bar groups\n        var barGroups = svg\n            .selectAll(\"g.bars\")\n            .data(allDataLabels, function (label) { return label; });\n        // Remove dot groups that need to be removed\n        barGroups.exit().attr(\"opacity\", 0).remove();\n        // Add the bar groups that need to be introduced\n        var barGroupsEnter = barGroups\n            .enter()\n            .append(\"g\")\n            .classed(\"bars\", true)\n            .attr(\"role\", Roles.GROUP)\n            .attr(\"aria-labelledby\", function (d) { return d; });\n        // Update data on all bars\n        var bars = barGroupsEnter\n            .merge(barGroups)\n            .attr(\"transform\", function (label, i) {\n            var scaleValue = _this.services.cartesianScales.getDomainValue(label, i);\n            var translateBy = scaleValue - _this.getGroupWidth() / 2;\n            // const translateBy = scaleValue - this.getGroupWidth(null) / 2 + this.getBarWidth(null);\n            if (_this.services.cartesianScales.getOrientation() ===\n                CartesianOrientations.VERTICAL) {\n                return \"translate(\" + translateBy + \", 0)\";\n            }\n            else {\n                // translate in the y direction for horizontal groups\n                return \"translate(0, \" + translateBy + \")\";\n            }\n        })\n            .selectAll(\"path.bar\")\n            .data(function (label) { return _this.getDataCorrespondingToLabel(label); });\n        // Remove bars that are no longer needed\n        bars.exit().attr(\"opacity\", 0).remove();\n        // Add the circles that need to be introduced\n        var barsEnter = bars.enter().append(\"path\").attr(\"opacity\", 0);\n        // code for vertical grouped bar charts\n        barsEnter\n            .merge(bars)\n            .classed(\"bar\", true)\n            .transition(this.services.transitions.getTransition(\"bar-update-enter\", animate))\n            .attr(\"fill\", function (d) { return _this.model.getFillColor(d[groupMapsTo]); })\n            .attr(\"d\", function (d) {\n            /*\n             * Orientation support for horizontal/vertical bar charts\n             * Determine coordinates needed for a vertical set of paths\n             * to draw the bars needed, and pass those coordinates down to\n             * generateSVGPathString() to decide whether it needs to flip them\n             */\n            var startX = _this.groupScale(d[groupMapsTo]);\n            var barWidth = _this.getBarWidth();\n            var x0 = startX;\n            var x1 = startX + barWidth;\n            var y0 = _this.services.cartesianScales.getRangeValue(0);\n            var y1 = _this.services.cartesianScales.getRangeValue(d.value);\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n        })\n            .attr(\"opacity\", 1)\n            // a11y\n            .attr(\"role\", Roles.GRAPHICS_SYMBOL)\n            .attr(\"aria-roledescription\", \"bar\")\n            .attr(\"aria-label\", function (d) { return d.value; });\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    GroupedBar.prototype.addEventListeners = function () {\n        var self = this;\n        var options = this.model.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        this.parent\n            .selectAll(\"path.bar\")\n            .on(\"mouseover\", function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement\n                .transition(self.services.transitions.getTransition(\"graph_element_mouseover_fill_update\"))\n                .attr(\"fill\", function (d) {\n                return color(self.model.getFillColor(d[groupMapsTo]))\n                    .darker(0.7)\n                    .toString();\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum\n            });\n            // Show tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                data: [datum]\n            });\n        })\n            .on(\"mousemove\", function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on(\"click\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n                element: select(this),\n                datum: datum\n            });\n        })\n            .on(\"mouseout\", function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed(\"hovered\", false);\n            var groupMapsTo = self.model.getOptions().data.groupMapsTo;\n            hoveredElement\n                .transition(self.services.transitions.getTransition(\"graph_element_mouseout_fill_update\"))\n                .attr(\"fill\", function (d) {\n                return self.model.getFillColor(d[groupMapsTo]);\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement\n            });\n        });\n    };\n    GroupedBar.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll(\"path.bar\")\n            .on(\"mouseover\", null)\n            .on(\"mousemove\", null)\n            .on(\"mouseout\", null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    GroupedBar.prototype.getDataCorrespondingToLabel = function (label) {\n        var displayData = this.model.getDisplayData();\n        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();\n        return displayData.filter(function (datum) { return datum[domainIdentifier] === label; });\n    };\n    GroupedBar.prototype.getGroupWidth = function () {\n        var numOfActiveDataGroups = this.model.getActiveDataGroupNames()\n            .length;\n        var totalGroupPadding = this.getTotalGroupPadding();\n        return this.getBarWidth() * numOfActiveDataGroups + totalGroupPadding;\n    };\n    GroupedBar.prototype.getTotalGroupPadding = function () {\n        var numOfActiveDataGroups = this.model.getActiveDataGroupNames()\n            .length;\n        if (numOfActiveDataGroups === 1) {\n            return 0;\n        }\n        var domainScale = this.services.cartesianScales.getDomainScale();\n        var padding = Math.min(5, 5 * (domainScale.step() / 70));\n        return padding * (numOfActiveDataGroups - 1);\n    };\n    // Gets the correct width for bars based on options & configurations\n    GroupedBar.prototype.getBarWidth = function () {\n        var options = this.model.getOptions();\n        var providedWidth = Tools.getProperty(options, \"bars\", \"width\");\n        var providedMaxWidth = Tools.getProperty(options, \"bars\", \"maxWidth\");\n        // If there's a provided width, compare with maxWidth and\n        // Determine which to return\n        if (providedWidth !== null) {\n            if (providedMaxWidth === null) {\n                return providedWidth;\n            }\n            else if (providedWidth <= providedMaxWidth) {\n                return providedWidth;\n            }\n        }\n        var numOfActiveDataGroups = this.model.getActiveDataGroupNames()\n            .length;\n        var totalGroupPadding = this.getTotalGroupPadding();\n        var domainScale = this.services.cartesianScales.getDomainScale();\n        return Math.min(providedMaxWidth, (domainScale.step() - totalGroupPadding) / numOfActiveDataGroups);\n    };\n    GroupedBar.prototype.setGroupScale = function () {\n        this.groupScale = scaleBand()\n            .domain(this.model.getActiveDataGroupNames())\n            .rangeRound([0, this.getGroupWidth()]);\n    };\n    return GroupedBar;\n}(Bar));\nexport { GroupedBar };\n//# sourceMappingURL=../../../src/components/graphs/bar-grouped.js.map"]},"metadata":{},"sourceType":"module"}