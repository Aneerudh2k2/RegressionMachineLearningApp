{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from \"../component\";\nimport { AxisPositions, Events, ScaleTypes, Roles, TruncationTypes } from \"../../interfaces\";\nimport { Tools } from \"../../tools\";\nimport { DOMUtils } from \"../../services\";\nimport * as Configuration from \"../../configuration\";\nimport { computeTimeIntervalName, formatTick, isTickPrimary } from \"../../services/time-series\"; // D3 Imports\n\nimport { select } from \"d3-selection\";\nimport { axisBottom, axisLeft, axisRight, axisTop } from \"d3-axis\";\n\nvar Axis =\n/** @class */\nfunction (_super) {\n  __extends(Axis, _super);\n\n  function Axis(model, services, configs) {\n    var _this = _super.call(this, model, services, configs) || this;\n\n    _this.type = \"axes\";\n\n    if (configs) {\n      _this.configs = configs;\n    }\n\n    _this.margins = _this.configs.margins;\n    return _this;\n  }\n\n  Axis.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var axisPosition = this.configs.position;\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n    var axisScaleType = Tools.getProperty(axisOptions, \"scaleType\");\n    var isDataLoading = Tools.getProperty(options, \"data\", \"loading\");\n    var numberOfTicksProvided = Tools.getProperty(axisOptions, \"ticks\", \"number\"); // user can provide custom ticks to be displayed\n    // ticks need to be in the domain of the axis data\n\n    var userProvidedTickValues = Tools.getProperty(axisOptions, \"ticks\", \"values\"); // get user provided custom values for truncation\n\n    var truncationType = Tools.getProperty(axisOptions, \"truncation\", \"type\");\n    var truncationThreshold = Tools.getProperty(axisOptions, \"truncation\", \"threshold\");\n    var truncationNumCharacter = Tools.getProperty(axisOptions, \"truncation\", \"numCharacter\");\n    var isNumberOfTicksProvided = numberOfTicksProvided !== null;\n    var isVerticalAxis = axisPosition === AxisPositions.LEFT || axisPosition === AxisPositions.RIGHT;\n    var timeScaleOptions = Tools.getProperty(options, \"timeScale\");\n    var svg = this.getContainerSVG();\n\n    var _a = DOMUtils.getSVGElementSize(this.parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    var startPosition, endPosition;\n\n    if (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {\n      startPosition = this.configs.axes[AxisPositions.LEFT] ? this.margins.left : 0;\n      endPosition = this.configs.axes[AxisPositions.RIGHT] ? width - this.margins.right : width;\n    } else {\n      startPosition = height - this.margins.bottom;\n      endPosition = this.margins.top;\n    } // Grab the scale off of the Scales service\n\n\n    var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);\n\n    if (this.scaleType === ScaleTypes.LABELS) {\n      scale.rangeRound([startPosition, endPosition]);\n    } else {\n      scale.range([startPosition, endPosition]);\n    } // Identify the corresponding d3 axis function\n\n\n    var axisFunction;\n\n    switch (axisPosition) {\n      case AxisPositions.LEFT:\n        axisFunction = axisLeft;\n        break;\n\n      case AxisPositions.BOTTOM:\n        axisFunction = axisBottom;\n        break;\n\n      case AxisPositions.RIGHT:\n        axisFunction = axisRight;\n        break;\n\n      case AxisPositions.TOP:\n        axisFunction = axisTop;\n        break;\n    } // Add axis into the parent\n\n\n    var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n    container.attr(\"aria-label\", axisPosition + \" axis\");\n    var axisRefExists = !container.select(\"g.ticks\").empty();\n    var axisRef = DOMUtils.appendOrSelect(container, \"g.ticks\");\n\n    if (!axisRefExists) {\n      axisRef.attr(\"role\", Roles.GRAPHICS_OBJECT + \" \" + Roles.GROUP);\n      axisRef.attr(\"aria-label\", axisPosition + \" ticks\");\n    } // We draw the invisible axis because of the async nature of d3 transitions\n    // To be able to tell the final width & height of the axis when initiaing the transition\n    // The invisible axis is updated instantly and without a transition\n\n\n    var invisibleAxisRef = DOMUtils.appendOrSelect(container, \"g.ticks.invisible\").style(\"opacity\", \"0\").style(\"pointer-events\", \"none\").attr(\"aria-hidden\", true).attr(\"aria-label\", \"invisible \" + axisPosition + \" ticks\"); // Append to DOM a fake tick to get the right computed font height\n\n    var fakeTick = DOMUtils.appendOrSelect(invisibleAxisRef, \"g.tick\");\n    var fakeTickText = DOMUtils.appendOrSelect(fakeTick, \"text\").text(\"0\");\n    var tickHeight = DOMUtils.getSVGElementSize(fakeTickText.node(), {\n      useBBox: true\n    }).height;\n    fakeTick.remove();\n    var isTimeScaleType = this.scaleType === ScaleTypes.TIME || axisOptions.scaleType === ScaleTypes.TIME;\n    var scaleType = this.scaleType || axisOptions.scaleType || ScaleTypes.LINEAR; // Initialize axis object\n\n    var axis = axisFunction(scale).tickSizeOuter(0);\n\n    if (scale.ticks) {\n      var numberOfTicks = void 0;\n\n      if (isNumberOfTicksProvided) {\n        numberOfTicks = numberOfTicksProvided;\n      } else {\n        numberOfTicks = Configuration.axis.ticks.number;\n\n        if (isVerticalAxis) {\n          // Set how many ticks based on height\n          numberOfTicks = this.getNumberOfFittingTicks(height, tickHeight, Configuration.tickSpaceRatioVertical);\n        }\n      } // scale continuous\n      // remove 0 ticks for skeleton\n\n\n      if (scale.ticks().length === 1 && scale.ticks()[0] === 0) {\n        numberOfTicks = 0;\n      }\n\n      axis.ticks(numberOfTicks);\n\n      if (isTimeScaleType) {\n        if (!scale.ticks(numberOfTicks).length) {\n          axis.tickValues([]);\n        } else {\n          var addSpaceOnEdges = Tools.getProperty(options, \"timeScale\", \"addSpaceOnEdges\");\n          var customDomain = Tools.getProperty(options, \"axes\", axisPosition, \"domain\");\n          var tickValues = void 0;\n\n          if (addSpaceOnEdges && !customDomain) {\n            tickValues = scale.nice(numberOfTicks);\n          }\n\n          tickValues = scale.ticks(numberOfTicks); // Remove labels on the edges\n          // If there are more than 2 labels to show\n\n          if (addSpaceOnEdges && tickValues.length > 2 && !customDomain) {\n            tickValues.splice(tickValues.length - 1, 1);\n            tickValues.splice(0, 1);\n          }\n\n          axis.tickValues(tickValues);\n        }\n      }\n    } // create the right ticks formatter\n\n\n    var formatter;\n    var userProvidedFormatter = Tools.getProperty(axisOptions, \"ticks\", \"formatter\");\n\n    if (isTimeScaleType) {\n      var timeInterval_1 = computeTimeIntervalName(axis.tickValues());\n\n      if (userProvidedFormatter === null) {\n        formatter = function (t, i) {\n          return formatTick(t, i, timeInterval_1, timeScaleOptions);\n        };\n      } else {\n        formatter = function (t, i) {\n          var defaultFormattedValue = formatTick(t, i, timeInterval_1, timeScaleOptions);\n          return userProvidedFormatter(t, i, defaultFormattedValue);\n        };\n      }\n    } else {\n      if (userProvidedFormatter === null) {\n        if (scaleType === ScaleTypes.LINEAR) {\n          formatter = function (t) {\n            return t.toLocaleString();\n          };\n        }\n      } else {\n        formatter = userProvidedFormatter;\n      }\n    } // Set ticks formatter\n\n\n    axis.tickFormat(formatter); // prioritize using a custom array of values rather than number of ticks\n    // if both are provided. custom tick values need to be within the domain\n\n    if (userProvidedTickValues) {\n      axis.tickValues(userProvidedTickValues);\n    } // Position and transition the axis\n\n\n    switch (axisPosition) {\n      case AxisPositions.LEFT:\n        axisRef.attr(\"transform\", \"translate(\" + this.margins.left + \", 0)\");\n        break;\n\n      case AxisPositions.BOTTOM:\n        axisRef.attr(\"transform\", \"translate(0, \" + (height - this.margins.bottom) + \")\");\n        break;\n\n      case AxisPositions.RIGHT:\n        axisRef.attr(\"transform\", \"translate(\" + (width - this.margins.right) + \", 0)\");\n        break;\n\n      case AxisPositions.TOP:\n        axisRef.attr(\"transform\", \"translate(0, \" + this.margins.top + \")\");\n        break;\n    } // Position the axis title\n    // check that data exists, if they don't, doesn't show the title axis\n\n\n    var isDataEmpty = this.model.isDataEmpty();\n\n    if (axisOptions.title) {\n      var axisTitleRef = DOMUtils.appendOrSelect(container, \"text.axis-title\").html(isDataEmpty || isDataLoading ? \"\" : axisOptions.title);\n\n      switch (axisPosition) {\n        case AxisPositions.LEFT:\n          axisTitleRef.attr(\"transform\", \"rotate(-90)\").attr(\"y\", 0).attr(\"x\", -(scale.range()[0] / 2)).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\");\n          break;\n\n        case AxisPositions.BOTTOM:\n          axisTitleRef.attr(\"transform\", \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + height + \")\").style(\"text-anchor\", \"middle\");\n          break;\n\n        case AxisPositions.RIGHT:\n          axisTitleRef.attr(\"transform\", \"rotate(90)\").attr(\"y\", -width).attr(\"x\", scale.range()[0] / 2).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\");\n          break;\n\n        case AxisPositions.TOP:\n          var titleHeight = DOMUtils.getSVGElementSize(axisTitleRef, {\n            useBBox: true\n          }).height;\n          axisTitleRef.attr(\"transform\", \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + titleHeight / 2 + \")\").style(\"text-anchor\", \"middle\");\n          break;\n      }\n    } // Apply new axis to the axis element\n\n\n    if (isTimeScaleType) {\n      var timeInterval_2 = computeTimeIntervalName(axis.tickValues());\n      var showDayName_1 = timeScaleOptions.showDayName;\n      var axisRefSelection = axisRef;\n\n      if (animate) {\n        axisRef = axisRef.transition(this.services.transitions.getTransition(\"axis-update\", animate));\n      }\n\n      axisRef = axisRef.call(axis); // Manipulate tick labels to make bold those that are in long format\n\n      var ticks = axisRefSelection.selectAll(\".tick\").data(axis.tickValues(), scale).order().select(\"text\");\n      ticks.style(\"font-weight\", function (tickValue, i) {\n        return isTickPrimary(tickValue, i, timeInterval_2, showDayName_1) ? \"bold\" : \"normal\";\n      });\n    } else {\n      if (!animate || !axisRefExists) {\n        axisRef = axisRef.call(axis);\n      } else {\n        axisRef = axisRef.transition(this.services.transitions.getTransition(\"axis-update\")).call(axis);\n      }\n    }\n\n    invisibleAxisRef.call(axis);\n\n    if (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {\n      var rotateTicks = false; // If we're dealing with a discrete scale type\n      // We're able to grab the spacing between the ticks\n\n      if (scale.step) {\n        var textNodes = invisibleAxisRef.selectAll(\"g.tick text\").nodes(); // If any ticks are any larger than the scale step size\n\n        rotateTicks = textNodes.some(function (textNode) {\n          return DOMUtils.getSVGElementSize(textNode, {\n            useBBox: true\n          }).width >= scale.step();\n        });\n      } else {\n        // When dealing with a continuous scale\n        // We need to calculate an estimated size of the ticks\n        var minTickSize = Tools.getProperty(axisOptions, \"ticks\", \"rotateIfSmallerThan\") || Configuration.axis.ticks.rotateIfSmallerThan;\n        var ticksNumber = isTimeScaleType ? axis.tickValues().length : scale.ticks().length;\n        var estimatedTickSize = width / ticksNumber / 2;\n        rotateTicks = estimatedTickSize < minTickSize;\n      }\n\n      if (rotateTicks) {\n        if (!isNumberOfTicksProvided) {\n          axis.ticks(this.getNumberOfFittingTicks(width, tickHeight, Configuration.tickSpaceRatioHorizontal));\n          invisibleAxisRef.call(axis);\n          axisRef.call(axis);\n        }\n\n        container.selectAll(\"g.ticks g.tick text\").attr(\"transform\", \"rotate(-45)\").style(\"text-anchor\", axisPosition === AxisPositions.TOP ? \"start\" : \"end\");\n      } else {\n        container.selectAll(\"g.ticks g.tick text\").attr(\"transform\", null).style(\"text-anchor\", null);\n      }\n    } // we don't need to show axes on empty state and on skeleton state\n    // because the Skeleton component draws them\n\n\n    if (isDataLoading) {\n      container.attr(\"opacity\", 0);\n    }\n\n    axisRef.selectAll(\"g.tick\").attr(\"aria-label\", function (d) {\n      return d;\n    });\n    invisibleAxisRef.selectAll(\"g.tick\").attr(\"aria-label\", function (d) {\n      return d;\n    }); // truncate the label if it's too long\n    // only applies to discrete type\n\n    if (truncationType !== TruncationTypes.NONE && axisScaleType === ScaleTypes.LABELS && !userProvidedTickValues) {\n      var dataGroups = this.model.getDataValuesGroupedByKeys();\n\n      if (dataGroups.length > 0) {\n        var activeDataGroups = dataGroups.map(function (d) {\n          return d.sharedStackKey;\n        });\n        var tick_html = svg.select(\"g.axis.\" + axisPosition + \" g.ticks g.tick\").html();\n        container.selectAll(\"g.ticks g.tick\").html(tick_html);\n        container.selectAll(\"g.tick text\").data(activeDataGroups).text(function (d) {\n          if (d.length > truncationThreshold) {\n            return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n          } else {\n            return d;\n          }\n        });\n        this.getInvisibleAxisRef().selectAll(\"g.tick text\").data(activeDataGroups).text(function (d) {\n          if (d.length > truncationThreshold) {\n            return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n          } else {\n            return d;\n          }\n        });\n        container.selectAll(\"g.ticks\").html(this.getInvisibleAxisRef().html());\n        container.selectAll(\"g.tick text\").data(activeDataGroups);\n      }\n    } // Add event listeners to elements drawn\n\n\n    this.addEventListeners();\n  };\n\n  Axis.prototype.addEventListeners = function () {\n    var svg = this.getContainerSVG();\n    var axisPosition = this.configs.position;\n    var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n    var axisScaleType = Tools.getProperty(axisOptions, \"scaleType\");\n    var truncationThreshold = Tools.getProperty(axisOptions, \"truncation\", \"threshold\");\n    var isTimeScaleType = this.scaleType === ScaleTypes.TIME || axisOptions.scaleType === ScaleTypes.TIME;\n    var self = this;\n    container.selectAll(\"g.tick text\").on(\"mouseover\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOVER, {\n        element: select(this),\n        datum: datum\n      });\n\n      if (axisScaleType === ScaleTypes.LABELS && datum.length > truncationThreshold) {\n        self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n          hoveredElement: select(this),\n          content: datum\n        });\n      }\n    }).on(\"mousemove\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEMOVE, {\n        element: select(this),\n        datum: datum\n      });\n\n      if (axisScaleType === ScaleTypes.LABELS && datum.length > truncationThreshold) {\n        self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n      }\n    }).on(\"click\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on(\"mouseout\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOUT, {\n        element: select(this),\n        datum: datum\n      });\n\n      if (axisScaleType === ScaleTypes.LABELS) {\n        self.services.events.dispatchEvent(Events.Tooltip.HIDE);\n      }\n    });\n  };\n\n  Axis.prototype.getInvisibleAxisRef = function () {\n    var axisPosition = this.configs.position;\n    return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" g.ticks.invisible\");\n  };\n\n  Axis.prototype.getTitleRef = function () {\n    var axisPosition = this.configs.position;\n    return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" text.axis-title\");\n  };\n\n  Axis.prototype.getNumberOfFittingTicks = function (size, tickSize, spaceRatio) {\n    var numberOfTicksFit = Math.floor(size / (tickSize * spaceRatio));\n    return Tools.clamp(numberOfTicksFit, 2, Configuration.axis.ticks.number);\n  };\n\n  Axis.prototype.destroy = function () {\n    var svg = this.getContainerSVG();\n    var axisPosition = this.configs.position;\n    var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition); // Remove event listeners\n\n    container.selectAll(\"g.tick text\").on(\"mouseover\", null).on(\"mousemove\", null).on(\"mouseout\", null);\n  };\n\n  return Axis;\n}(Component);\n\nexport { Axis };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/axes/axis.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","AxisPositions","Events","ScaleTypes","Roles","TruncationTypes","Tools","DOMUtils","Configuration","computeTimeIntervalName","formatTick","isTickPrimary","select","axisBottom","axisLeft","axisRight","axisTop","Axis","_super","model","services","configs","_this","call","type","margins","render","animate","axisPosition","position","options","getOptions","axisOptions","getProperty","axisScaleType","isDataLoading","numberOfTicksProvided","userProvidedTickValues","truncationType","truncationThreshold","truncationNumCharacter","isNumberOfTicksProvided","isVerticalAxis","LEFT","RIGHT","timeScaleOptions","svg","getContainerSVG","_a","getSVGElementSize","parent","useAttrs","width","height","startPosition","endPosition","BOTTOM","TOP","axes","left","right","bottom","top","scale","cartesianScales","getScaleByPosition","scaleType","LABELS","rangeRound","range","axisFunction","container","appendOrSelect","attr","axisRefExists","empty","axisRef","GRAPHICS_OBJECT","GROUP","invisibleAxisRef","style","fakeTick","fakeTickText","text","tickHeight","node","useBBox","remove","isTimeScaleType","TIME","LINEAR","axis","tickSizeOuter","ticks","numberOfTicks","number","getNumberOfFittingTicks","tickSpaceRatioVertical","length","tickValues","addSpaceOnEdges","customDomain","nice","splice","formatter","userProvidedFormatter","timeInterval_1","t","i","defaultFormattedValue","toLocaleString","tickFormat","isDataEmpty","title","axisTitleRef","html","titleHeight","timeInterval_2","showDayName_1","showDayName","axisRefSelection","transition","transitions","getTransition","selectAll","data","order","tickValue","rotateTicks","step","textNodes","nodes","some","textNode","minTickSize","rotateIfSmallerThan","ticksNumber","estimatedTickSize","tickSpaceRatioHorizontal","NONE","dataGroups","getDataValuesGroupedByKeys","activeDataGroups","map","sharedStackKey","tick_html","truncateLabel","getInvisibleAxisRef","addEventListeners","self","on","datum","events","dispatchEvent","LABEL_MOUSEOVER","element","Tooltip","SHOW","hoveredElement","content","LABEL_MOUSEMOVE","MOVE","LABEL_CLICK","LABEL_MOUSEOUT","HIDE","getTitleRef","size","tickSize","spaceRatio","numberOfTicksFit","Math","floor","clamp","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from \"../component\";\nimport { AxisPositions, Events, ScaleTypes, Roles, TruncationTypes } from \"../../interfaces\";\nimport { Tools } from \"../../tools\";\nimport { DOMUtils } from \"../../services\";\nimport * as Configuration from \"../../configuration\";\nimport { computeTimeIntervalName, formatTick, isTickPrimary } from \"../../services/time-series\";\n// D3 Imports\nimport { select } from \"d3-selection\";\nimport { axisBottom, axisLeft, axisRight, axisTop } from \"d3-axis\";\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis(model, services, configs) {\n        var _this = _super.call(this, model, services, configs) || this;\n        _this.type = \"axes\";\n        if (configs) {\n            _this.configs = configs;\n        }\n        _this.margins = _this.configs.margins;\n        return _this;\n    }\n    Axis.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        var axisPosition = this.configs.position;\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n        var axisScaleType = Tools.getProperty(axisOptions, \"scaleType\");\n        var isDataLoading = Tools.getProperty(options, \"data\", \"loading\");\n        var numberOfTicksProvided = Tools.getProperty(axisOptions, \"ticks\", \"number\");\n        // user can provide custom ticks to be displayed\n        // ticks need to be in the domain of the axis data\n        var userProvidedTickValues = Tools.getProperty(axisOptions, \"ticks\", \"values\");\n        // get user provided custom values for truncation\n        var truncationType = Tools.getProperty(axisOptions, \"truncation\", \"type\");\n        var truncationThreshold = Tools.getProperty(axisOptions, \"truncation\", \"threshold\");\n        var truncationNumCharacter = Tools.getProperty(axisOptions, \"truncation\", \"numCharacter\");\n        var isNumberOfTicksProvided = numberOfTicksProvided !== null;\n        var isVerticalAxis = axisPosition === AxisPositions.LEFT ||\n            axisPosition === AxisPositions.RIGHT;\n        var timeScaleOptions = Tools.getProperty(options, \"timeScale\");\n        var svg = this.getContainerSVG();\n        var _a = DOMUtils.getSVGElementSize(this.parent, {\n            useAttrs: true\n        }), width = _a.width, height = _a.height;\n        var startPosition, endPosition;\n        if (axisPosition === AxisPositions.BOTTOM ||\n            axisPosition === AxisPositions.TOP) {\n            startPosition = this.configs.axes[AxisPositions.LEFT]\n                ? this.margins.left\n                : 0;\n            endPosition = this.configs.axes[AxisPositions.RIGHT]\n                ? width - this.margins.right\n                : width;\n        }\n        else {\n            startPosition = height - this.margins.bottom;\n            endPosition = this.margins.top;\n        }\n        // Grab the scale off of the Scales service\n        var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);\n        if (this.scaleType === ScaleTypes.LABELS) {\n            scale.rangeRound([startPosition, endPosition]);\n        }\n        else {\n            scale.range([startPosition, endPosition]);\n        }\n        // Identify the corresponding d3 axis function\n        var axisFunction;\n        switch (axisPosition) {\n            case AxisPositions.LEFT:\n                axisFunction = axisLeft;\n                break;\n            case AxisPositions.BOTTOM:\n                axisFunction = axisBottom;\n                break;\n            case AxisPositions.RIGHT:\n                axisFunction = axisRight;\n                break;\n            case AxisPositions.TOP:\n                axisFunction = axisTop;\n                break;\n        }\n        // Add axis into the parent\n        var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n        container.attr(\"aria-label\", axisPosition + \" axis\");\n        var axisRefExists = !container.select(\"g.ticks\").empty();\n        var axisRef = DOMUtils.appendOrSelect(container, \"g.ticks\");\n        if (!axisRefExists) {\n            axisRef.attr(\"role\", Roles.GRAPHICS_OBJECT + \" \" + Roles.GROUP);\n            axisRef.attr(\"aria-label\", axisPosition + \" ticks\");\n        }\n        // We draw the invisible axis because of the async nature of d3 transitions\n        // To be able to tell the final width & height of the axis when initiaing the transition\n        // The invisible axis is updated instantly and without a transition\n        var invisibleAxisRef = DOMUtils.appendOrSelect(container, \"g.ticks.invisible\")\n            .style(\"opacity\", \"0\")\n            .style(\"pointer-events\", \"none\")\n            .attr(\"aria-hidden\", true)\n            .attr(\"aria-label\", \"invisible \" + axisPosition + \" ticks\");\n        // Append to DOM a fake tick to get the right computed font height\n        var fakeTick = DOMUtils.appendOrSelect(invisibleAxisRef, \"g.tick\");\n        var fakeTickText = DOMUtils.appendOrSelect(fakeTick, \"text\").text(\"0\");\n        var tickHeight = DOMUtils.getSVGElementSize(fakeTickText.node(), {\n            useBBox: true\n        }).height;\n        fakeTick.remove();\n        var isTimeScaleType = this.scaleType === ScaleTypes.TIME ||\n            axisOptions.scaleType === ScaleTypes.TIME;\n        var scaleType = this.scaleType || axisOptions.scaleType || ScaleTypes.LINEAR;\n        // Initialize axis object\n        var axis = axisFunction(scale).tickSizeOuter(0);\n        if (scale.ticks) {\n            var numberOfTicks = void 0;\n            if (isNumberOfTicksProvided) {\n                numberOfTicks = numberOfTicksProvided;\n            }\n            else {\n                numberOfTicks = Configuration.axis.ticks.number;\n                if (isVerticalAxis) {\n                    // Set how many ticks based on height\n                    numberOfTicks = this.getNumberOfFittingTicks(height, tickHeight, Configuration.tickSpaceRatioVertical);\n                }\n            }\n            // scale continuous\n            // remove 0 ticks for skeleton\n            if (scale.ticks().length === 1 && scale.ticks()[0] === 0) {\n                numberOfTicks = 0;\n            }\n            axis.ticks(numberOfTicks);\n            if (isTimeScaleType) {\n                if (!scale.ticks(numberOfTicks).length) {\n                    axis.tickValues([]);\n                }\n                else {\n                    var addSpaceOnEdges = Tools.getProperty(options, \"timeScale\", \"addSpaceOnEdges\");\n                    var customDomain = Tools.getProperty(options, \"axes\", axisPosition, \"domain\");\n                    var tickValues = void 0;\n                    if (addSpaceOnEdges && !customDomain) {\n                        tickValues = scale.nice(numberOfTicks);\n                    }\n                    tickValues = scale.ticks(numberOfTicks);\n                    // Remove labels on the edges\n                    // If there are more than 2 labels to show\n                    if (addSpaceOnEdges && tickValues.length > 2 && !customDomain) {\n                        tickValues.splice(tickValues.length - 1, 1);\n                        tickValues.splice(0, 1);\n                    }\n                    axis.tickValues(tickValues);\n                }\n            }\n        }\n        // create the right ticks formatter\n        var formatter;\n        var userProvidedFormatter = Tools.getProperty(axisOptions, \"ticks\", \"formatter\");\n        if (isTimeScaleType) {\n            var timeInterval_1 = computeTimeIntervalName(axis.tickValues());\n            if (userProvidedFormatter === null) {\n                formatter = function (t, i) {\n                    return formatTick(t, i, timeInterval_1, timeScaleOptions);\n                };\n            }\n            else {\n                formatter = function (t, i) {\n                    var defaultFormattedValue = formatTick(t, i, timeInterval_1, timeScaleOptions);\n                    return userProvidedFormatter(t, i, defaultFormattedValue);\n                };\n            }\n        }\n        else {\n            if (userProvidedFormatter === null) {\n                if (scaleType === ScaleTypes.LINEAR) {\n                    formatter = function (t) { return t.toLocaleString(); };\n                }\n            }\n            else {\n                formatter = userProvidedFormatter;\n            }\n        }\n        // Set ticks formatter\n        axis.tickFormat(formatter);\n        // prioritize using a custom array of values rather than number of ticks\n        // if both are provided. custom tick values need to be within the domain\n        if (userProvidedTickValues) {\n            axis.tickValues(userProvidedTickValues);\n        }\n        // Position and transition the axis\n        switch (axisPosition) {\n            case AxisPositions.LEFT:\n                axisRef.attr(\"transform\", \"translate(\" + this.margins.left + \", 0)\");\n                break;\n            case AxisPositions.BOTTOM:\n                axisRef.attr(\"transform\", \"translate(0, \" + (height - this.margins.bottom) + \")\");\n                break;\n            case AxisPositions.RIGHT:\n                axisRef.attr(\"transform\", \"translate(\" + (width - this.margins.right) + \", 0)\");\n                break;\n            case AxisPositions.TOP:\n                axisRef.attr(\"transform\", \"translate(0, \" + this.margins.top + \")\");\n                break;\n        }\n        // Position the axis title\n        // check that data exists, if they don't, doesn't show the title axis\n        var isDataEmpty = this.model.isDataEmpty();\n        if (axisOptions.title) {\n            var axisTitleRef = DOMUtils.appendOrSelect(container, \"text.axis-title\").html(isDataEmpty || isDataLoading ? \"\" : axisOptions.title);\n            switch (axisPosition) {\n                case AxisPositions.LEFT:\n                    axisTitleRef\n                        .attr(\"transform\", \"rotate(-90)\")\n                        .attr(\"y\", 0)\n                        .attr(\"x\", -(scale.range()[0] / 2))\n                        .attr(\"dy\", \"1em\")\n                        .style(\"text-anchor\", \"middle\");\n                    break;\n                case AxisPositions.BOTTOM:\n                    axisTitleRef\n                        .attr(\"transform\", \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + height + \")\")\n                        .style(\"text-anchor\", \"middle\");\n                    break;\n                case AxisPositions.RIGHT:\n                    axisTitleRef\n                        .attr(\"transform\", \"rotate(90)\")\n                        .attr(\"y\", -width)\n                        .attr(\"x\", scale.range()[0] / 2)\n                        .attr(\"dy\", \"1em\")\n                        .style(\"text-anchor\", \"middle\");\n                    break;\n                case AxisPositions.TOP:\n                    var titleHeight = DOMUtils.getSVGElementSize(axisTitleRef, {\n                        useBBox: true\n                    }).height;\n                    axisTitleRef\n                        .attr(\"transform\", \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + titleHeight / 2 + \")\")\n                        .style(\"text-anchor\", \"middle\");\n                    break;\n            }\n        }\n        // Apply new axis to the axis element\n        if (isTimeScaleType) {\n            var timeInterval_2 = computeTimeIntervalName(axis.tickValues());\n            var showDayName_1 = timeScaleOptions.showDayName;\n            var axisRefSelection = axisRef;\n            if (animate) {\n                axisRef = axisRef.transition(this.services.transitions.getTransition(\"axis-update\", animate));\n            }\n            axisRef = axisRef.call(axis);\n            // Manipulate tick labels to make bold those that are in long format\n            var ticks = axisRefSelection\n                .selectAll(\".tick\")\n                .data(axis.tickValues(), scale)\n                .order()\n                .select(\"text\");\n            ticks.style(\"font-weight\", function (tickValue, i) {\n                return isTickPrimary(tickValue, i, timeInterval_2, showDayName_1)\n                    ? \"bold\"\n                    : \"normal\";\n            });\n        }\n        else {\n            if (!animate || !axisRefExists) {\n                axisRef = axisRef.call(axis);\n            }\n            else {\n                axisRef = axisRef\n                    .transition(this.services.transitions.getTransition(\"axis-update\"))\n                    .call(axis);\n            }\n        }\n        invisibleAxisRef.call(axis);\n        if (axisPosition === AxisPositions.BOTTOM ||\n            axisPosition === AxisPositions.TOP) {\n            var rotateTicks = false;\n            // If we're dealing with a discrete scale type\n            // We're able to grab the spacing between the ticks\n            if (scale.step) {\n                var textNodes = invisibleAxisRef\n                    .selectAll(\"g.tick text\")\n                    .nodes();\n                // If any ticks are any larger than the scale step size\n                rotateTicks = textNodes.some(function (textNode) {\n                    return DOMUtils.getSVGElementSize(textNode, { useBBox: true })\n                        .width >= scale.step();\n                });\n            }\n            else {\n                // When dealing with a continuous scale\n                // We need to calculate an estimated size of the ticks\n                var minTickSize = Tools.getProperty(axisOptions, \"ticks\", \"rotateIfSmallerThan\") || Configuration.axis.ticks.rotateIfSmallerThan;\n                var ticksNumber = isTimeScaleType\n                    ? axis.tickValues().length\n                    : scale.ticks().length;\n                var estimatedTickSize = width / ticksNumber / 2;\n                rotateTicks = estimatedTickSize < minTickSize;\n            }\n            if (rotateTicks) {\n                if (!isNumberOfTicksProvided) {\n                    axis.ticks(this.getNumberOfFittingTicks(width, tickHeight, Configuration.tickSpaceRatioHorizontal));\n                    invisibleAxisRef.call(axis);\n                    axisRef.call(axis);\n                }\n                container\n                    .selectAll(\"g.ticks g.tick text\")\n                    .attr(\"transform\", \"rotate(-45)\")\n                    .style(\"text-anchor\", axisPosition === AxisPositions.TOP ? \"start\" : \"end\");\n            }\n            else {\n                container\n                    .selectAll(\"g.ticks g.tick text\")\n                    .attr(\"transform\", null)\n                    .style(\"text-anchor\", null);\n            }\n        }\n        // we don't need to show axes on empty state and on skeleton state\n        // because the Skeleton component draws them\n        if (isDataLoading) {\n            container.attr(\"opacity\", 0);\n        }\n        axisRef.selectAll(\"g.tick\").attr(\"aria-label\", function (d) { return d; });\n        invisibleAxisRef.selectAll(\"g.tick\").attr(\"aria-label\", function (d) { return d; });\n        // truncate the label if it's too long\n        // only applies to discrete type\n        if (truncationType !== TruncationTypes.NONE &&\n            axisScaleType === ScaleTypes.LABELS &&\n            !userProvidedTickValues) {\n            var dataGroups = this.model.getDataValuesGroupedByKeys();\n            if (dataGroups.length > 0) {\n                var activeDataGroups = dataGroups.map(function (d) { return d.sharedStackKey; });\n                var tick_html = svg\n                    .select(\"g.axis.\" + axisPosition + \" g.ticks g.tick\")\n                    .html();\n                container.selectAll(\"g.ticks g.tick\").html(tick_html);\n                container\n                    .selectAll(\"g.tick text\")\n                    .data(activeDataGroups)\n                    .text(function (d) {\n                    if (d.length > truncationThreshold) {\n                        return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n                    }\n                    else {\n                        return d;\n                    }\n                });\n                this.getInvisibleAxisRef()\n                    .selectAll(\"g.tick text\")\n                    .data(activeDataGroups)\n                    .text(function (d) {\n                    if (d.length > truncationThreshold) {\n                        return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n                    }\n                    else {\n                        return d;\n                    }\n                });\n                container\n                    .selectAll(\"g.ticks\")\n                    .html(this.getInvisibleAxisRef().html());\n                container.selectAll(\"g.tick text\").data(activeDataGroups);\n            }\n        }\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    Axis.prototype.addEventListeners = function () {\n        var svg = this.getContainerSVG();\n        var axisPosition = this.configs.position;\n        var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n        var axisScaleType = Tools.getProperty(axisOptions, \"scaleType\");\n        var truncationThreshold = Tools.getProperty(axisOptions, \"truncation\", \"threshold\");\n        var isTimeScaleType = this.scaleType === ScaleTypes.TIME ||\n            axisOptions.scaleType === ScaleTypes.TIME;\n        var self = this;\n        container\n            .selectAll(\"g.tick text\")\n            .on(\"mouseover\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOVER, {\n                element: select(this),\n                datum: datum\n            });\n            if (axisScaleType === ScaleTypes.LABELS &&\n                datum.length > truncationThreshold) {\n                self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                    hoveredElement: select(this),\n                    content: datum\n                });\n            }\n        })\n            .on(\"mousemove\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEMOVE, {\n                element: select(this),\n                datum: datum\n            });\n            if (axisScaleType === ScaleTypes.LABELS &&\n                datum.length > truncationThreshold) {\n                self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n            }\n        })\n            .on(\"click\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_CLICK, {\n                element: select(this),\n                datum: datum\n            });\n        })\n            .on(\"mouseout\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOUT, {\n                element: select(this),\n                datum: datum\n            });\n            if (axisScaleType === ScaleTypes.LABELS) {\n                self.services.events.dispatchEvent(Events.Tooltip.HIDE);\n            }\n        });\n    };\n    Axis.prototype.getInvisibleAxisRef = function () {\n        var axisPosition = this.configs.position;\n        return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" g.ticks.invisible\");\n    };\n    Axis.prototype.getTitleRef = function () {\n        var axisPosition = this.configs.position;\n        return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" text.axis-title\");\n    };\n    Axis.prototype.getNumberOfFittingTicks = function (size, tickSize, spaceRatio) {\n        var numberOfTicksFit = Math.floor(size / (tickSize * spaceRatio));\n        return Tools.clamp(numberOfTicksFit, 2, Configuration.axis.ticks.number);\n    };\n    Axis.prototype.destroy = function () {\n        var svg = this.getContainerSVG();\n        var axisPosition = this.configs.position;\n        var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n        // Remove event listeners\n        container\n            .selectAll(\"g.tick text\")\n            .on(\"mouseover\", null)\n            .on(\"mousemove\", null)\n            .on(\"mouseout\", null);\n    };\n    return Axis;\n}(Component));\nexport { Axis };\n//# sourceMappingURL=../../../src/components/axes/axis.js.map"]},"metadata":{},"sourceType":"module"}