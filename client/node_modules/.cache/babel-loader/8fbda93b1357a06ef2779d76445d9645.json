{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport * as Configuration from \"../configuration\";\nimport { Service } from \"./service\";\nimport { AxisPositions, CartesianOrientations, ScaleTypes } from \"../interfaces\";\nimport { Tools } from \"../tools\"; // D3 Imports\n\nimport { scaleBand, scaleLinear, scaleTime, scaleLog } from \"d3-scale\";\nimport { extent, sum } from \"d3-array\";\nimport { map, values } from \"d3-collection\"; // Misc\n\nimport { differenceInYears, addYears, subYears, differenceInMonths, addMonths, subMonths, differenceInDays, addDays, subDays, differenceInHours, addHours, subHours, differenceInMinutes, addMinutes, subMinutes, differenceInSeconds, subSeconds, addSeconds } from \"date-fns\";\n\nvar CartesianScales =\n/** @class */\nfunction (_super) {\n  __extends(CartesianScales, _super);\n\n  function CartesianScales() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.scaleTypes = {\n      top: null,\n      right: null,\n      bottom: null,\n      left: null\n    };\n    _this.scales = {\n      top: null,\n      right: null,\n      bottom: null,\n      left: null\n    };\n    return _this;\n  }\n\n  CartesianScales.prototype.getDomainAxisPosition = function () {\n    return this.domainAxisPosition;\n  };\n\n  CartesianScales.prototype.getRangeAxisPosition = function () {\n    return this.rangeAxisPosition;\n  };\n\n  CartesianScales.prototype.getAxisOptions = function (position) {\n    return Tools.getProperty(this.model.getOptions(), \"axes\", position);\n  };\n\n  CartesianScales.prototype.getDomainAxisOptions = function () {\n    var domainAxisPosition = this.getDomainAxisPosition();\n    return this.getAxisOptions(domainAxisPosition);\n  };\n\n  CartesianScales.prototype.getRangeAxisOptions = function () {\n    var rangeAxisPosition = this.getRangeAxisPosition();\n    return this.getAxisOptions(rangeAxisPosition);\n  };\n\n  CartesianScales.prototype.update = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    this.findDomainAndRangeAxes();\n    this.determineOrientation();\n    var axisPositions = Object.keys(AxisPositions).map(function (axisPositionKey) {\n      return AxisPositions[axisPositionKey];\n    });\n    axisPositions.forEach(function (axisPosition) {\n      _this.scales[axisPosition] = _this.createScale(axisPosition);\n    });\n  };\n\n  CartesianScales.prototype.findDomainAndRangeAxes = function () {\n    // find main axes between (left & right) && (bottom & top)\n    var mainVerticalAxisPosition = this.findMainVerticalAxisPosition();\n    var mainHorizontalAxisPosition = this.findMainHorizontalAxisPosition(); // Now we have horizontal & vertical main axes to choose domain & range axes from\n\n    var domainAndRangeAxesPositions = this.findDomainAndRangeAxesPositions(mainVerticalAxisPosition, mainHorizontalAxisPosition);\n    this.domainAxisPosition = domainAndRangeAxesPositions.domainAxisPosition;\n    this.rangeAxisPosition = domainAndRangeAxesPositions.rangeAxisPosition;\n  };\n\n  CartesianScales.prototype.determineOrientation = function () {\n    if ((this.rangeAxisPosition === AxisPositions.LEFT || this.rangeAxisPosition === AxisPositions.RIGHT) && (this.domainAxisPosition === AxisPositions.BOTTOM || this.domainAxisPosition === AxisPositions.TOP)) {\n      this.orientation = CartesianOrientations.VERTICAL;\n    } else {\n      this.orientation = CartesianOrientations.HORIZONTAL;\n    }\n  };\n\n  CartesianScales.prototype.getOrientation = function () {\n    return this.orientation;\n  };\n\n  CartesianScales.prototype.getScaleByPosition = function (axisPosition) {\n    return this.scales[axisPosition];\n  };\n\n  CartesianScales.prototype.getScaleTypeByPosition = function (axisPosition) {\n    return this.scaleTypes[axisPosition];\n  };\n\n  CartesianScales.prototype.getDomainAxisScaleType = function () {\n    var domainAxisPosition = this.getDomainAxisPosition();\n    return this.getScaleTypeByPosition(domainAxisPosition);\n  };\n\n  CartesianScales.prototype.getRangeAxisScaleType = function () {\n    var rangeAxisPosition = this.getRangeAxisPosition();\n    return this.getScaleTypeByPosition(rangeAxisPosition);\n  };\n\n  CartesianScales.prototype.getDomainScale = function () {\n    return this.scales[this.domainAxisPosition];\n  };\n\n  CartesianScales.prototype.getRangeScale = function () {\n    return this.scales[this.rangeAxisPosition];\n  }; // Find the main x-axis out of the 2 x-axis on the chart (when 2D axis is used)\n\n\n  CartesianScales.prototype.getMainXAxisPosition = function () {\n    var possibleXAxisPositions = [AxisPositions.BOTTOM, AxisPositions.TOP];\n    return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) {\n      return possibleXAxisPositions.indexOf(position) > -1;\n    });\n  }; // Find the main y-axis out of the 2 y-axis on the chart (when 2D axis is used)\n\n\n  CartesianScales.prototype.getMainYAxisPosition = function () {\n    var possibleYAxisPositions = [AxisPositions.LEFT, AxisPositions.RIGHT];\n    return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) {\n      return possibleYAxisPositions.indexOf(position) > -1;\n    });\n  };\n\n  CartesianScales.prototype.getMainXScale = function () {\n    return this.scales[this.getMainXAxisPosition()];\n  };\n\n  CartesianScales.prototype.getMainYScale = function () {\n    return this.scales[this.getMainYAxisPosition()];\n  };\n\n  CartesianScales.prototype.getValueFromScale = function (axisPosition, datum, index) {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n    var scaleType = this.scaleTypes[axisPosition];\n    var scale = this.scales[axisPosition];\n    var mapsTo = axisOptions.mapsTo;\n    var value = datum[mapsTo] !== undefined ? datum[mapsTo] : datum;\n\n    if (scaleType === ScaleTypes.LABELS) {\n      return scale(value) + scale.step() / 2;\n    }\n\n    if (scaleType === ScaleTypes.TIME) {\n      return scale(new Date(value));\n    }\n\n    return scale(value);\n  };\n\n  CartesianScales.prototype.getDomainValue = function (d, i) {\n    return this.getValueFromScale(this.domainAxisPosition, d, i);\n  };\n\n  CartesianScales.prototype.getRangeValue = function (d, i) {\n    return this.getValueFromScale(this.rangeAxisPosition, d, i);\n  };\n\n  CartesianScales.prototype.getDomainIdentifier = function () {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", this.domainAxisPosition);\n    return axisOptions.mapsTo;\n  };\n\n  CartesianScales.prototype.getRangeIdentifier = function () {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", this.rangeAxisPosition);\n    return axisOptions.mapsTo;\n  };\n  /** Uses the Y Axis to get data items associated with that value. */\n\n\n  CartesianScales.prototype.getDataFromDomain = function (domainValue) {\n    var displayData = this.model.getDisplayData();\n    var domainIdentifier = this.getDomainIdentifier();\n    var scaleType = this.scaleTypes[this.domainAxisPosition];\n\n    if (scaleType === ScaleTypes.TIME) {\n      return displayData.filter(function (datum) {\n        var date = datum[domainIdentifier];\n\n        if (typeof date === \"string\" || date.getTime === undefined) {\n          date = new Date(date);\n        }\n\n        return date.getTime() === domainValue.getTime();\n      });\n    }\n\n    return displayData.filter(function (datum) {\n      return datum[domainIdentifier] === domainValue;\n    });\n  };\n\n  CartesianScales.prototype.extendsDomain = function (axisPosition, domain) {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n\n    if (axisOptions.scaleType === ScaleTypes.TIME) {\n      var spaceToAddToEdges = Tools.getProperty(options, \"timeScale\", \"addSpaceOnEdges\");\n      return addSpacingToTimeDomain(domain, spaceToAddToEdges);\n    } else {\n      return addSpacingToContinuousDomain(domain, Configuration.axis.paddingRatio);\n    }\n  };\n\n  CartesianScales.prototype.findMainVerticalAxisPosition = function () {\n    var options = this.model.getOptions();\n    var axesOptions = Tools.getProperty(options, \"axes\"); // If right axis has been specified as `main`\n\n    if (Tools.getProperty(axesOptions, AxisPositions.LEFT) === null && Tools.getProperty(axesOptions, AxisPositions.RIGHT) !== null || Tools.getProperty(axesOptions, AxisPositions.RIGHT, \"main\") === true) {\n      return AxisPositions.RIGHT;\n    }\n\n    return AxisPositions.LEFT;\n  };\n\n  CartesianScales.prototype.findMainHorizontalAxisPosition = function () {\n    var options = this.model.getOptions();\n    var axesOptions = Tools.getProperty(options, \"axes\"); // If top axis has been specified as `main`\n\n    if (Tools.getProperty(axesOptions, AxisPositions.BOTTOM) === null && Tools.getProperty(axesOptions, AxisPositions.TOP) !== null || Tools.getProperty(axesOptions, AxisPositions.TOP, \"main\") === true) {\n      return AxisPositions.TOP;\n    }\n\n    return AxisPositions.BOTTOM;\n  };\n\n  CartesianScales.prototype.findDomainAndRangeAxesPositions = function (mainVerticalAxisPosition, mainHorizontalAxisPosition) {\n    var options = this.model.getOptions();\n    var mainVerticalAxisOptions = Tools.getProperty(options, \"axes\", mainVerticalAxisPosition);\n    var mainHorizontalAxisOptions = Tools.getProperty(options, \"axes\", mainHorizontalAxisPosition);\n    var mainVerticalScaleType = mainVerticalAxisOptions.scaleType || ScaleTypes.LINEAR;\n    var mainHorizontalScaleType = mainHorizontalAxisOptions.scaleType || ScaleTypes.LINEAR;\n    var result = {\n      domainAxisPosition: null,\n      rangeAxisPosition: null\n    };\n\n    if (mainHorizontalScaleType === ScaleTypes.LABELS || mainHorizontalScaleType === ScaleTypes.TIME) {\n      result.domainAxisPosition = mainHorizontalAxisPosition;\n      result.rangeAxisPosition = mainVerticalAxisPosition;\n    } else if (mainVerticalScaleType === ScaleTypes.LABELS || mainVerticalScaleType === ScaleTypes.TIME) {\n      result.domainAxisPosition = mainVerticalAxisPosition;\n      result.rangeAxisPosition = mainHorizontalAxisPosition;\n    } else {\n      result.domainAxisPosition = mainHorizontalAxisPosition;\n      result.rangeAxisPosition = mainVerticalAxisPosition;\n    }\n\n    return result;\n  };\n\n  CartesianScales.prototype.getScaleDomain = function (axisPosition) {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n    var includeZero = axisOptions.includeZero;\n    var scaleType = Tools.getProperty(axisOptions, \"scaleType\") || ScaleTypes.LINEAR;\n\n    if (this.model.isDataEmpty()) {\n      return [];\n    }\n\n    var displayData = this.model.getDisplayData();\n    var mapsTo = axisOptions.mapsTo,\n        percentage = axisOptions.percentage; // If domain is specified return that domain\n\n    if (axisOptions.domain) {\n      if (scaleType === ScaleTypes.LABELS) {\n        return axisOptions.domain;\n      }\n\n      return this.extendsDomain(axisPosition, axisOptions.domain);\n    } // Return [0, 100] for percentage axis scale\n\n\n    if (percentage) {\n      return [0, 100];\n    } // If scale is a LABELS scale, return some labels as the domain\n\n\n    if (axisOptions && scaleType === ScaleTypes.LABELS) {\n      // Get unique values\n      return map(displayData, function (d) {\n        return d[mapsTo];\n      }).keys();\n    } // Get the extent of the domain\n\n\n    var domain;\n    var allDataValues; // If the scale is stacked\n\n    if (axisOptions.stacked) {\n      var dataValuesGroupedByKeys = this.model.getDataValuesGroupedByKeys();\n      allDataValues = dataValuesGroupedByKeys.map(function (dataValues) {\n        return sum(values(dataValues));\n      });\n    } else {\n      allDataValues = displayData.map(function (datum) {\n        return datum[mapsTo];\n      });\n    }\n\n    if (scaleType !== ScaleTypes.TIME && includeZero) {\n      allDataValues.push(0);\n    }\n\n    domain = extent(allDataValues);\n    domain = this.extendsDomain(axisPosition, domain);\n    return domain;\n  };\n\n  CartesianScales.prototype.createScale = function (axisPosition) {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n\n    if (!axisOptions) {\n      return null;\n    }\n\n    var scaleType = Tools.getProperty(axisOptions, \"scaleType\") || ScaleTypes.LINEAR;\n    this.scaleTypes[axisPosition] = scaleType;\n    var scale;\n\n    if (scaleType === ScaleTypes.TIME) {\n      scale = scaleTime();\n    } else if (scaleType === ScaleTypes.LOG) {\n      scale = scaleLog().base(axisOptions.base || 10);\n    } else if (scaleType === ScaleTypes.LABELS) {\n      scale = scaleBand();\n    } else {\n      scale = scaleLinear();\n    }\n\n    scale.domain(this.getScaleDomain(axisPosition));\n    return scale;\n  };\n\n  CartesianScales.prototype.getHighestDomainThreshold = function () {\n    var axesOptions = Tools.getProperty(this.model.getOptions(), \"axes\");\n    var domainAxisPosition = this.getDomainAxisPosition();\n    var thresholds = axesOptions[domainAxisPosition].thresholds;\n\n    if (!thresholds) {\n      return null;\n    }\n\n    var domainScale = this.getDomainScale(); // Find the highest threshold for the domain\n\n    var highestThreshold = thresholds.sort(function (a, b) {\n      return b.value - a.value;\n    })[0];\n    var scaleType = this.getScaleTypeByPosition(domainAxisPosition);\n\n    if (scaleType === ScaleTypes.TIME && (typeof highestThreshold.value === \"string\" || highestThreshold.value.getTime === undefined)) {\n      highestThreshold.value = new Date(highestThreshold.value);\n    }\n\n    return {\n      threshold: highestThreshold,\n      scaleValue: domainScale(highestThreshold.value)\n    };\n  };\n\n  CartesianScales.prototype.getHighestRangeThreshold = function () {\n    var axesOptions = Tools.getProperty(this.model.getOptions(), \"axes\");\n    var rangeAxisPosition = this.getRangeAxisPosition();\n    var thresholds = axesOptions[rangeAxisPosition].thresholds;\n\n    if (!thresholds) {\n      return null;\n    }\n\n    var rangeScale = this.getRangeScale(); // Find the highest threshold for the range\n\n    var highestThreshold = thresholds.sort(function (a, b) {\n      return b.value - a.value;\n    })[0];\n    return {\n      threshold: highestThreshold,\n      scaleValue: rangeScale(highestThreshold.value)\n    };\n  };\n\n  return CartesianScales;\n}(Service);\n\nexport { CartesianScales };\n\nfunction addSpacingToTimeDomain(domain, spaceToAddToEdges) {\n  var startDate = new Date(domain[0]);\n  var endDate = new Date(domain[1]);\n\n  if (differenceInYears(endDate, startDate) > 1) {\n    return [subYears(startDate, spaceToAddToEdges), addYears(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInMonths(endDate, startDate) > 1) {\n    return [subMonths(startDate, spaceToAddToEdges), addMonths(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInDays(endDate, startDate) > 1) {\n    return [subDays(startDate, spaceToAddToEdges), addDays(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInHours(endDate, startDate) > 1) {\n    return [subHours(startDate, spaceToAddToEdges), addHours(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInMinutes(endDate, startDate) > 30) {\n    return [subMinutes(startDate, spaceToAddToEdges * 30), addMinutes(endDate, spaceToAddToEdges * 30)];\n  }\n\n  if (differenceInMinutes(endDate, startDate) > 1) {\n    return [subMinutes(startDate, spaceToAddToEdges), addMinutes(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInSeconds(endDate, startDate) > 15) {\n    return [subSeconds(startDate, spaceToAddToEdges * 15), addSeconds(endDate, spaceToAddToEdges * 15)];\n  }\n\n  if (differenceInSeconds(endDate, startDate) > 1) {\n    return [subSeconds(startDate, spaceToAddToEdges), addSeconds(endDate, spaceToAddToEdges)];\n  }\n\n  return [startDate, endDate];\n}\n\nfunction addSpacingToContinuousDomain(_a, paddingRatio) {\n  var lower = _a[0],\n      upper = _a[1];\n  var domainLength = upper - lower;\n  var padding = domainLength * paddingRatio; // If padding crosses 0, keep 0 as new upper bound\n\n  var newUpper = upper <= 0 && upper + padding > 0 ? 0 : upper + padding; // If padding crosses 0, keep 0 as new lower bound\n\n  var newLower = lower >= 0 && lower - padding < 0 ? 0 : lower - padding;\n  return [newLower, newUpper];\n}","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/services/scales-cartesian.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Configuration","Service","AxisPositions","CartesianOrientations","ScaleTypes","Tools","scaleBand","scaleLinear","scaleTime","scaleLog","extent","sum","map","values","differenceInYears","addYears","subYears","differenceInMonths","addMonths","subMonths","differenceInDays","addDays","subDays","differenceInHours","addHours","subHours","differenceInMinutes","addMinutes","subMinutes","differenceInSeconds","subSeconds","addSeconds","CartesianScales","_super","_this","apply","arguments","scaleTypes","top","right","bottom","left","scales","getDomainAxisPosition","domainAxisPosition","getRangeAxisPosition","rangeAxisPosition","getAxisOptions","position","getProperty","model","getOptions","getDomainAxisOptions","getRangeAxisOptions","update","animate","findDomainAndRangeAxes","determineOrientation","axisPositions","keys","axisPositionKey","forEach","axisPosition","createScale","mainVerticalAxisPosition","findMainVerticalAxisPosition","mainHorizontalAxisPosition","findMainHorizontalAxisPosition","domainAndRangeAxesPositions","findDomainAndRangeAxesPositions","LEFT","RIGHT","BOTTOM","TOP","orientation","VERTICAL","HORIZONTAL","getOrientation","getScaleByPosition","getScaleTypeByPosition","getDomainAxisScaleType","getRangeAxisScaleType","getDomainScale","getRangeScale","getMainXAxisPosition","possibleXAxisPositions","find","indexOf","getMainYAxisPosition","possibleYAxisPositions","getMainXScale","getMainYScale","getValueFromScale","datum","index","options","axisOptions","scaleType","scale","mapsTo","value","undefined","LABELS","step","TIME","Date","getDomainValue","i","getRangeValue","getDomainIdentifier","getRangeIdentifier","getDataFromDomain","domainValue","displayData","getDisplayData","domainIdentifier","filter","date","getTime","extendsDomain","domain","spaceToAddToEdges","addSpacingToTimeDomain","addSpacingToContinuousDomain","axis","paddingRatio","axesOptions","mainVerticalAxisOptions","mainHorizontalAxisOptions","mainVerticalScaleType","LINEAR","mainHorizontalScaleType","result","getScaleDomain","includeZero","isDataEmpty","percentage","allDataValues","stacked","dataValuesGroupedByKeys","getDataValuesGroupedByKeys","dataValues","push","LOG","base","getHighestDomainThreshold","thresholds","domainScale","highestThreshold","sort","a","threshold","scaleValue","getHighestRangeThreshold","rangeScale","startDate","endDate","_a","lower","upper","domainLength","padding","newUpper","newLower"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport * as Configuration from \"../configuration\";\nimport { Service } from \"./service\";\nimport { AxisPositions, CartesianOrientations, ScaleTypes } from \"../interfaces\";\nimport { Tools } from \"../tools\";\n// D3 Imports\nimport { scaleBand, scaleLinear, scaleTime, scaleLog } from \"d3-scale\";\nimport { extent, sum } from \"d3-array\";\nimport { map, values } from \"d3-collection\";\n// Misc\nimport { differenceInYears, addYears, subYears, differenceInMonths, addMonths, subMonths, differenceInDays, addDays, subDays, differenceInHours, addHours, subHours, differenceInMinutes, addMinutes, subMinutes, differenceInSeconds, subSeconds, addSeconds } from \"date-fns\";\nvar CartesianScales = /** @class */ (function (_super) {\n    __extends(CartesianScales, _super);\n    function CartesianScales() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.scaleTypes = {\n            top: null,\n            right: null,\n            bottom: null,\n            left: null\n        };\n        _this.scales = {\n            top: null,\n            right: null,\n            bottom: null,\n            left: null\n        };\n        return _this;\n    }\n    CartesianScales.prototype.getDomainAxisPosition = function () {\n        return this.domainAxisPosition;\n    };\n    CartesianScales.prototype.getRangeAxisPosition = function () {\n        return this.rangeAxisPosition;\n    };\n    CartesianScales.prototype.getAxisOptions = function (position) {\n        return Tools.getProperty(this.model.getOptions(), \"axes\", position);\n    };\n    CartesianScales.prototype.getDomainAxisOptions = function () {\n        var domainAxisPosition = this.getDomainAxisPosition();\n        return this.getAxisOptions(domainAxisPosition);\n    };\n    CartesianScales.prototype.getRangeAxisOptions = function () {\n        var rangeAxisPosition = this.getRangeAxisPosition();\n        return this.getAxisOptions(rangeAxisPosition);\n    };\n    CartesianScales.prototype.update = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        this.findDomainAndRangeAxes();\n        this.determineOrientation();\n        var axisPositions = Object.keys(AxisPositions).map(function (axisPositionKey) { return AxisPositions[axisPositionKey]; });\n        axisPositions.forEach(function (axisPosition) {\n            _this.scales[axisPosition] = _this.createScale(axisPosition);\n        });\n    };\n    CartesianScales.prototype.findDomainAndRangeAxes = function () {\n        // find main axes between (left & right) && (bottom & top)\n        var mainVerticalAxisPosition = this.findMainVerticalAxisPosition();\n        var mainHorizontalAxisPosition = this.findMainHorizontalAxisPosition();\n        // Now we have horizontal & vertical main axes to choose domain & range axes from\n        var domainAndRangeAxesPositions = this.findDomainAndRangeAxesPositions(mainVerticalAxisPosition, mainHorizontalAxisPosition);\n        this.domainAxisPosition =\n            domainAndRangeAxesPositions.domainAxisPosition;\n        this.rangeAxisPosition = domainAndRangeAxesPositions.rangeAxisPosition;\n    };\n    CartesianScales.prototype.determineOrientation = function () {\n        if ((this.rangeAxisPosition === AxisPositions.LEFT ||\n            this.rangeAxisPosition === AxisPositions.RIGHT) &&\n            (this.domainAxisPosition === AxisPositions.BOTTOM ||\n                this.domainAxisPosition === AxisPositions.TOP)) {\n            this.orientation = CartesianOrientations.VERTICAL;\n        }\n        else {\n            this.orientation = CartesianOrientations.HORIZONTAL;\n        }\n    };\n    CartesianScales.prototype.getOrientation = function () {\n        return this.orientation;\n    };\n    CartesianScales.prototype.getScaleByPosition = function (axisPosition) {\n        return this.scales[axisPosition];\n    };\n    CartesianScales.prototype.getScaleTypeByPosition = function (axisPosition) {\n        return this.scaleTypes[axisPosition];\n    };\n    CartesianScales.prototype.getDomainAxisScaleType = function () {\n        var domainAxisPosition = this.getDomainAxisPosition();\n        return this.getScaleTypeByPosition(domainAxisPosition);\n    };\n    CartesianScales.prototype.getRangeAxisScaleType = function () {\n        var rangeAxisPosition = this.getRangeAxisPosition();\n        return this.getScaleTypeByPosition(rangeAxisPosition);\n    };\n    CartesianScales.prototype.getDomainScale = function () {\n        return this.scales[this.domainAxisPosition];\n    };\n    CartesianScales.prototype.getRangeScale = function () {\n        return this.scales[this.rangeAxisPosition];\n    };\n    // Find the main x-axis out of the 2 x-axis on the chart (when 2D axis is used)\n    CartesianScales.prototype.getMainXAxisPosition = function () {\n        var possibleXAxisPositions = [\n            AxisPositions.BOTTOM,\n            AxisPositions.TOP\n        ];\n        return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) { return possibleXAxisPositions.indexOf(position) > -1; });\n    };\n    // Find the main y-axis out of the 2 y-axis on the chart (when 2D axis is used)\n    CartesianScales.prototype.getMainYAxisPosition = function () {\n        var possibleYAxisPositions = [\n            AxisPositions.LEFT,\n            AxisPositions.RIGHT\n        ];\n        return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) { return possibleYAxisPositions.indexOf(position) > -1; });\n    };\n    CartesianScales.prototype.getMainXScale = function () {\n        return this.scales[this.getMainXAxisPosition()];\n    };\n    CartesianScales.prototype.getMainYScale = function () {\n        return this.scales[this.getMainYAxisPosition()];\n    };\n    CartesianScales.prototype.getValueFromScale = function (axisPosition, datum, index) {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n        var scaleType = this.scaleTypes[axisPosition];\n        var scale = this.scales[axisPosition];\n        var mapsTo = axisOptions.mapsTo;\n        var value = datum[mapsTo] !== undefined ? datum[mapsTo] : datum;\n        if (scaleType === ScaleTypes.LABELS) {\n            return scale(value) + scale.step() / 2;\n        }\n        if (scaleType === ScaleTypes.TIME) {\n            return scale(new Date(value));\n        }\n        return scale(value);\n    };\n    CartesianScales.prototype.getDomainValue = function (d, i) {\n        return this.getValueFromScale(this.domainAxisPosition, d, i);\n    };\n    CartesianScales.prototype.getRangeValue = function (d, i) {\n        return this.getValueFromScale(this.rangeAxisPosition, d, i);\n    };\n    CartesianScales.prototype.getDomainIdentifier = function () {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", this.domainAxisPosition);\n        return axisOptions.mapsTo;\n    };\n    CartesianScales.prototype.getRangeIdentifier = function () {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", this.rangeAxisPosition);\n        return axisOptions.mapsTo;\n    };\n    /** Uses the Y Axis to get data items associated with that value. */\n    CartesianScales.prototype.getDataFromDomain = function (domainValue) {\n        var displayData = this.model.getDisplayData();\n        var domainIdentifier = this.getDomainIdentifier();\n        var scaleType = this.scaleTypes[this.domainAxisPosition];\n        if (scaleType === ScaleTypes.TIME) {\n            return displayData.filter(function (datum) {\n                var date = datum[domainIdentifier];\n                if (typeof date === \"string\" || date.getTime === undefined) {\n                    date = new Date(date);\n                }\n                return date.getTime() === domainValue.getTime();\n            });\n        }\n        return displayData.filter(function (datum) {\n            return datum[domainIdentifier] === domainValue;\n        });\n    };\n    CartesianScales.prototype.extendsDomain = function (axisPosition, domain) {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n        if (axisOptions.scaleType === ScaleTypes.TIME) {\n            var spaceToAddToEdges = Tools.getProperty(options, \"timeScale\", \"addSpaceOnEdges\");\n            return addSpacingToTimeDomain(domain, spaceToAddToEdges);\n        }\n        else {\n            return addSpacingToContinuousDomain(domain, Configuration.axis.paddingRatio);\n        }\n    };\n    CartesianScales.prototype.findMainVerticalAxisPosition = function () {\n        var options = this.model.getOptions();\n        var axesOptions = Tools.getProperty(options, \"axes\");\n        // If right axis has been specified as `main`\n        if ((Tools.getProperty(axesOptions, AxisPositions.LEFT) === null &&\n            Tools.getProperty(axesOptions, AxisPositions.RIGHT) !== null) ||\n            Tools.getProperty(axesOptions, AxisPositions.RIGHT, \"main\") === true) {\n            return AxisPositions.RIGHT;\n        }\n        return AxisPositions.LEFT;\n    };\n    CartesianScales.prototype.findMainHorizontalAxisPosition = function () {\n        var options = this.model.getOptions();\n        var axesOptions = Tools.getProperty(options, \"axes\");\n        // If top axis has been specified as `main`\n        if ((Tools.getProperty(axesOptions, AxisPositions.BOTTOM) === null &&\n            Tools.getProperty(axesOptions, AxisPositions.TOP) !== null) ||\n            Tools.getProperty(axesOptions, AxisPositions.TOP, \"main\") === true) {\n            return AxisPositions.TOP;\n        }\n        return AxisPositions.BOTTOM;\n    };\n    CartesianScales.prototype.findDomainAndRangeAxesPositions = function (mainVerticalAxisPosition, mainHorizontalAxisPosition) {\n        var options = this.model.getOptions();\n        var mainVerticalAxisOptions = Tools.getProperty(options, \"axes\", mainVerticalAxisPosition);\n        var mainHorizontalAxisOptions = Tools.getProperty(options, \"axes\", mainHorizontalAxisPosition);\n        var mainVerticalScaleType = mainVerticalAxisOptions.scaleType || ScaleTypes.LINEAR;\n        var mainHorizontalScaleType = mainHorizontalAxisOptions.scaleType || ScaleTypes.LINEAR;\n        var result = {\n            domainAxisPosition: null,\n            rangeAxisPosition: null\n        };\n        if (mainHorizontalScaleType === ScaleTypes.LABELS ||\n            mainHorizontalScaleType === ScaleTypes.TIME) {\n            result.domainAxisPosition = mainHorizontalAxisPosition;\n            result.rangeAxisPosition = mainVerticalAxisPosition;\n        }\n        else if (mainVerticalScaleType === ScaleTypes.LABELS ||\n            mainVerticalScaleType === ScaleTypes.TIME) {\n            result.domainAxisPosition = mainVerticalAxisPosition;\n            result.rangeAxisPosition = mainHorizontalAxisPosition;\n        }\n        else {\n            result.domainAxisPosition = mainHorizontalAxisPosition;\n            result.rangeAxisPosition = mainVerticalAxisPosition;\n        }\n        return result;\n    };\n    CartesianScales.prototype.getScaleDomain = function (axisPosition) {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n        var includeZero = axisOptions.includeZero;\n        var scaleType = Tools.getProperty(axisOptions, \"scaleType\") || ScaleTypes.LINEAR;\n        if (this.model.isDataEmpty()) {\n            return [];\n        }\n        var displayData = this.model.getDisplayData();\n        var mapsTo = axisOptions.mapsTo, percentage = axisOptions.percentage;\n        // If domain is specified return that domain\n        if (axisOptions.domain) {\n            if (scaleType === ScaleTypes.LABELS) {\n                return axisOptions.domain;\n            }\n            return this.extendsDomain(axisPosition, axisOptions.domain);\n        }\n        // Return [0, 100] for percentage axis scale\n        if (percentage) {\n            return [0, 100];\n        }\n        // If scale is a LABELS scale, return some labels as the domain\n        if (axisOptions && scaleType === ScaleTypes.LABELS) {\n            // Get unique values\n            return map(displayData, function (d) { return d[mapsTo]; }).keys();\n        }\n        // Get the extent of the domain\n        var domain;\n        var allDataValues;\n        // If the scale is stacked\n        if (axisOptions.stacked) {\n            var dataValuesGroupedByKeys = this.model.getDataValuesGroupedByKeys();\n            allDataValues = dataValuesGroupedByKeys.map(function (dataValues) {\n                return sum(values(dataValues));\n            });\n        }\n        else {\n            allDataValues = displayData.map(function (datum) { return datum[mapsTo]; });\n        }\n        if (scaleType !== ScaleTypes.TIME && includeZero) {\n            allDataValues.push(0);\n        }\n        domain = extent(allDataValues);\n        domain = this.extendsDomain(axisPosition, domain);\n        return domain;\n    };\n    CartesianScales.prototype.createScale = function (axisPosition) {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n        if (!axisOptions) {\n            return null;\n        }\n        var scaleType = Tools.getProperty(axisOptions, \"scaleType\") || ScaleTypes.LINEAR;\n        this.scaleTypes[axisPosition] = scaleType;\n        var scale;\n        if (scaleType === ScaleTypes.TIME) {\n            scale = scaleTime();\n        }\n        else if (scaleType === ScaleTypes.LOG) {\n            scale = scaleLog().base(axisOptions.base || 10);\n        }\n        else if (scaleType === ScaleTypes.LABELS) {\n            scale = scaleBand();\n        }\n        else {\n            scale = scaleLinear();\n        }\n        scale.domain(this.getScaleDomain(axisPosition));\n        return scale;\n    };\n    CartesianScales.prototype.getHighestDomainThreshold = function () {\n        var axesOptions = Tools.getProperty(this.model.getOptions(), \"axes\");\n        var domainAxisPosition = this.getDomainAxisPosition();\n        var thresholds = axesOptions[domainAxisPosition].thresholds;\n        if (!thresholds) {\n            return null;\n        }\n        var domainScale = this.getDomainScale();\n        // Find the highest threshold for the domain\n        var highestThreshold = thresholds.sort(function (a, b) { return b.value - a.value; })[0];\n        var scaleType = this.getScaleTypeByPosition(domainAxisPosition);\n        if (scaleType === ScaleTypes.TIME &&\n            (typeof highestThreshold.value === \"string\" ||\n                highestThreshold.value.getTime === undefined)) {\n            highestThreshold.value = new Date(highestThreshold.value);\n        }\n        return {\n            threshold: highestThreshold,\n            scaleValue: domainScale(highestThreshold.value)\n        };\n    };\n    CartesianScales.prototype.getHighestRangeThreshold = function () {\n        var axesOptions = Tools.getProperty(this.model.getOptions(), \"axes\");\n        var rangeAxisPosition = this.getRangeAxisPosition();\n        var thresholds = axesOptions[rangeAxisPosition].thresholds;\n        if (!thresholds) {\n            return null;\n        }\n        var rangeScale = this.getRangeScale();\n        // Find the highest threshold for the range\n        var highestThreshold = thresholds.sort(function (a, b) { return b.value - a.value; })[0];\n        return {\n            threshold: highestThreshold,\n            scaleValue: rangeScale(highestThreshold.value)\n        };\n    };\n    return CartesianScales;\n}(Service));\nexport { CartesianScales };\nfunction addSpacingToTimeDomain(domain, spaceToAddToEdges) {\n    var startDate = new Date(domain[0]);\n    var endDate = new Date(domain[1]);\n    if (differenceInYears(endDate, startDate) > 1) {\n        return [\n            subYears(startDate, spaceToAddToEdges),\n            addYears(endDate, spaceToAddToEdges)\n        ];\n    }\n    if (differenceInMonths(endDate, startDate) > 1) {\n        return [\n            subMonths(startDate, spaceToAddToEdges),\n            addMonths(endDate, spaceToAddToEdges)\n        ];\n    }\n    if (differenceInDays(endDate, startDate) > 1) {\n        return [\n            subDays(startDate, spaceToAddToEdges),\n            addDays(endDate, spaceToAddToEdges)\n        ];\n    }\n    if (differenceInHours(endDate, startDate) > 1) {\n        return [\n            subHours(startDate, spaceToAddToEdges),\n            addHours(endDate, spaceToAddToEdges)\n        ];\n    }\n    if (differenceInMinutes(endDate, startDate) > 30) {\n        return [\n            subMinutes(startDate, spaceToAddToEdges * 30),\n            addMinutes(endDate, spaceToAddToEdges * 30)\n        ];\n    }\n    if (differenceInMinutes(endDate, startDate) > 1) {\n        return [\n            subMinutes(startDate, spaceToAddToEdges),\n            addMinutes(endDate, spaceToAddToEdges)\n        ];\n    }\n    if (differenceInSeconds(endDate, startDate) > 15) {\n        return [\n            subSeconds(startDate, spaceToAddToEdges * 15),\n            addSeconds(endDate, spaceToAddToEdges * 15)\n        ];\n    }\n    if (differenceInSeconds(endDate, startDate) > 1) {\n        return [\n            subSeconds(startDate, spaceToAddToEdges),\n            addSeconds(endDate, spaceToAddToEdges)\n        ];\n    }\n    return [startDate, endDate];\n}\nfunction addSpacingToContinuousDomain(_a, paddingRatio) {\n    var lower = _a[0], upper = _a[1];\n    var domainLength = upper - lower;\n    var padding = domainLength * paddingRatio;\n    // If padding crosses 0, keep 0 as new upper bound\n    var newUpper = upper <= 0 && upper + padding > 0 ? 0 : upper + padding;\n    // If padding crosses 0, keep 0 as new lower bound\n    var newLower = lower >= 0 && lower - padding < 0 ? 0 : lower - padding;\n    return [newLower, newUpper];\n}\n//# sourceMappingURL=../../src/services/scales-cartesian.js.map"]},"metadata":{},"sourceType":"module"}