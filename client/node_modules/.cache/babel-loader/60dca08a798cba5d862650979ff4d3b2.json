{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Tools } from \"../../tools\";\nimport { Bar } from \"./bar\";\nimport { Roles, Events, CartesianOrientations } from \"../../interfaces\"; // D3 Imports\n\nimport { select } from \"d3-selection\";\nimport { color } from \"d3-color\";\n\nvar StackedBar =\n/** @class */\nfunction (_super) {\n  __extends(StackedBar, _super);\n\n  function StackedBar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = \"stacked-bar\"; // Highlight elements that match the hovered legend item\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      _this.parent.selectAll(\"path.bar\").transition(_this.services.transitions.getTransition(\"legend-hover-bar\")).attr(\"opacity\", function (d) {\n        return d.datasetLabel !== hoveredElement.datum()[\"key\"] ? 0.3 : 1;\n      });\n    }; // Un-highlight all elements\n\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll(\"path.bar\").transition(_this.services.transitions.getTransition(\"legend-mouseout-bar\")).attr(\"opacity\", 1);\n    };\n\n    return _this;\n  }\n\n  StackedBar.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct circle on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  StackedBar.prototype.render = function (animate) {\n    var _this = this; // Grab container SVG\n\n\n    var svg = this.getContainerSVG(); // Chart options mixed with the internal configurations\n\n    var displayData = this.model.getDisplayData();\n    var options = this.model.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var domainIdentifier = this.services.cartesianScales.getDomainIdentifier(); // Create the data and keys that'll be used by the stack layout\n\n    var stackData = this.model.getStackedData(); // Update data on all bar groups\n\n    var barGroups = svg.selectAll(\"g.bars\").data(stackData, function (d) {\n      return d.key;\n    }); // Remove elements that need to be exited\n    // We need exit at the top here to make sure that\n    // Data filters are processed before entering new elements\n    // Or updating existing ones\n\n    barGroups.exit().attr(\"opacity\", 0).remove(); // Add bar groups that need to be introduced\n\n    barGroups.enter().append(\"g\").classed(\"bars\", true).attr(\"role\", Roles.GROUP).attr(\"aria-label\", \"bars\"); // Update data on all bars\n\n    var bars = svg.selectAll(\"g.bars\").selectAll(\"path.bar\").data(function (d) {\n      return d;\n    }, function (d) {\n      return d.data.sharedStackKey;\n    }); // Remove bars that need to be removed\n\n    bars.exit().remove();\n    bars.enter().append(\"path\").merge(bars).classed(\"bar\", true).transition(this.services.transitions.getTransition(\"bar-update-enter\", animate)).attr(\"fill\", function (d) {\n      return _this.model.getFillColor(d[groupMapsTo]);\n    }).attr(\"d\", function (d, i) {\n      var key = d.data.sharedStackKey;\n      /*\n       * Orientation support for horizontal/vertical bar charts\n       * Determine coordinates needed for a vertical set of paths\n       * to draw the bars needed, and pass those coordinates down to\n       * generateSVGPathString() to decide whether it needs to flip them\n       */\n\n      var barWidth = _this.getBarWidth();\n\n      var x0 = _this.services.cartesianScales.getDomainValue(key, i) - barWidth / 2;\n      var x1 = x0 + barWidth;\n\n      var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);\n\n      var y1 = _this.services.cartesianScales.getRangeValue(d[1], i); // Add the divider gap\n\n\n      if (Math.abs(y1 - y0) > 0 && Math.abs(y1 - y0) > options.bars.dividerSize) {\n        if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {\n          y1 += 1;\n        } else {\n          y1 -= 1;\n        }\n      }\n\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, _this.services.cartesianScales.getOrientation());\n    }).attr(\"opacity\", 1) // a11y\n    .attr(\"role\", Roles.GRAPHICS_SYMBOL).attr(\"aria-roledescription\", \"bar\").attr(\"aria-label\", function (d) {\n      return d[1] - d[0];\n    }); // Add event listeners for the above elements\n\n    this.addEventListeners();\n  };\n\n  StackedBar.prototype.addEventListeners = function () {\n    var options = this.model.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var self = this;\n    this.parent.selectAll(\"path.bar\").on(\"mouseover\", function (datum) {\n      var _a;\n\n      var hoveredElement = select(this);\n      hoveredElement.transition(self.services.transitions.getTransition(\"graph_element_mouseover_fill_update\")).attr(\"fill\", function (d) {\n        return color(self.model.getFillColor(d[groupMapsTo])).darker(0.7).toString();\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n      var displayData = self.model.getDisplayData();\n      var domainIdentifier = self.services.cartesianScales.getDomainIdentifier();\n      var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier();\n      var matchingDataPoint = displayData.find(function (d) {\n        return d[rangeIdentifier] === datum.data[datum.group] && d[domainIdentifier].toString() === datum.data.sharedStackKey && d[groupMapsTo] === datum.group;\n      });\n\n      if (matchingDataPoint === undefined) {\n        matchingDataPoint = (_a = {}, _a[domainIdentifier] = datum.data.sharedStackKey, _a[rangeIdentifier] = datum.data[datum.group], _a[groupMapsTo] = datum.group, _a);\n      } // Show tooltip\n\n\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        data: [matchingDataPoint]\n      });\n    }).on(\"mousemove\", function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on(\"click\", function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on(\"mouseout\", function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed(\"hovered\", false);\n      hoveredElement.transition(self.services.transitions.getTransition(\"graph_element_mouseout_fill_update\")).attr(\"fill\", function (d) {\n        return self.model.getFillColor(d[groupMapsTo]);\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  StackedBar.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll(\"path.bar\").on(\"mouseover\", null).on(\"mousemove\", null).on(\"mouseout\", null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  return StackedBar;\n}(Bar);\n\nexport { StackedBar };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/graphs/bar-stacked.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Tools","Bar","Roles","Events","CartesianOrientations","select","color","StackedBar","_super","_this","apply","arguments","type","handleLegendOnHover","event","hoveredElement","detail","parent","selectAll","transition","services","transitions","getTransition","attr","datasetLabel","datum","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","svg","getContainerSVG","displayData","model","getDisplayData","options","getOptions","groupMapsTo","data","domainIdentifier","cartesianScales","getDomainIdentifier","stackData","getStackedData","barGroups","key","exit","remove","enter","append","classed","GROUP","bars","sharedStackKey","merge","getFillColor","i","barWidth","getBarWidth","x0","getDomainValue","x1","y0","getRangeValue","y1","Math","abs","dividerSize","getOrientation","VERTICAL","generateSVGPathString","GRAPHICS_SYMBOL","addEventListeners","self","on","_a","darker","toString","dispatchEvent","BAR_MOUSEOVER","element","rangeIdentifier","getRangeIdentifier","matchingDataPoint","find","group","undefined","Tooltip","SHOW","BAR_MOUSEMOVE","MOVE","BAR_CLICK","BAR_MOUSEOUT","HIDE","destroy","removeEventListener"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Tools } from \"../../tools\";\nimport { Bar } from \"./bar\";\nimport { Roles, Events, CartesianOrientations } from \"../../interfaces\";\n// D3 Imports\nimport { select } from \"d3-selection\";\nimport { color } from \"d3-color\";\nvar StackedBar = /** @class */ (function (_super) {\n    __extends(StackedBar, _super);\n    function StackedBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"stacked-bar\";\n        // Highlight elements that match the hovered legend item\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            _this.parent\n                .selectAll(\"path.bar\")\n                .transition(_this.services.transitions.getTransition(\"legend-hover-bar\"))\n                .attr(\"opacity\", function (d) {\n                return d.datasetLabel !== hoveredElement.datum()[\"key\"] ? 0.3 : 1;\n            });\n        };\n        // Un-highlight all elements\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll(\"path.bar\")\n                .transition(_this.services.transitions.getTransition(\"legend-mouseout-bar\"))\n                .attr(\"opacity\", 1);\n        };\n        return _this;\n    }\n    StackedBar.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct circle on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    StackedBar.prototype.render = function (animate) {\n        var _this = this;\n        // Grab container SVG\n        var svg = this.getContainerSVG();\n        // Chart options mixed with the internal configurations\n        var displayData = this.model.getDisplayData();\n        var options = this.model.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();\n        // Create the data and keys that'll be used by the stack layout\n        var stackData = this.model.getStackedData();\n        // Update data on all bar groups\n        var barGroups = svg.selectAll(\"g.bars\").data(stackData, function (d) { return d.key; });\n        // Remove elements that need to be exited\n        // We need exit at the top here to make sure that\n        // Data filters are processed before entering new elements\n        // Or updating existing ones\n        barGroups.exit().attr(\"opacity\", 0).remove();\n        // Add bar groups that need to be introduced\n        barGroups\n            .enter()\n            .append(\"g\")\n            .classed(\"bars\", true)\n            .attr(\"role\", Roles.GROUP)\n            .attr(\"aria-label\", \"bars\");\n        // Update data on all bars\n        var bars = svg\n            .selectAll(\"g.bars\")\n            .selectAll(\"path.bar\")\n            .data(function (d) { return d; }, function (d) { return d.data.sharedStackKey; });\n        // Remove bars that need to be removed\n        bars.exit().remove();\n        bars.enter()\n            .append(\"path\")\n            .merge(bars)\n            .classed(\"bar\", true)\n            .transition(this.services.transitions.getTransition(\"bar-update-enter\", animate))\n            .attr(\"fill\", function (d) { return _this.model.getFillColor(d[groupMapsTo]); })\n            .attr(\"d\", function (d, i) {\n            var key = d.data.sharedStackKey;\n            /*\n             * Orientation support for horizontal/vertical bar charts\n             * Determine coordinates needed for a vertical set of paths\n             * to draw the bars needed, and pass those coordinates down to\n             * generateSVGPathString() to decide whether it needs to flip them\n             */\n            var barWidth = _this.getBarWidth();\n            var x0 = _this.services.cartesianScales.getDomainValue(key, i) -\n                barWidth / 2;\n            var x1 = x0 + barWidth;\n            var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);\n            var y1 = _this.services.cartesianScales.getRangeValue(d[1], i);\n            // Add the divider gap\n            if (Math.abs(y1 - y0) > 0 &&\n                Math.abs(y1 - y0) > options.bars.dividerSize) {\n                if (_this.services.cartesianScales.getOrientation() ===\n                    CartesianOrientations.VERTICAL) {\n                    y1 += 1;\n                }\n                else {\n                    y1 -= 1;\n                }\n            }\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n        })\n            .attr(\"opacity\", 1)\n            // a11y\n            .attr(\"role\", Roles.GRAPHICS_SYMBOL)\n            .attr(\"aria-roledescription\", \"bar\")\n            .attr(\"aria-label\", function (d) { return d[1] - d[0]; });\n        // Add event listeners for the above elements\n        this.addEventListeners();\n    };\n    StackedBar.prototype.addEventListeners = function () {\n        var options = this.model.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var self = this;\n        this.parent\n            .selectAll(\"path.bar\")\n            .on(\"mouseover\", function (datum) {\n            var _a;\n            var hoveredElement = select(this);\n            hoveredElement\n                .transition(self.services.transitions.getTransition(\"graph_element_mouseover_fill_update\"))\n                .attr(\"fill\", function (d) {\n                return color(self.model.getFillColor(d[groupMapsTo]))\n                    .darker(0.7)\n                    .toString();\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum\n            });\n            var displayData = self.model.getDisplayData();\n            var domainIdentifier = self.services.cartesianScales.getDomainIdentifier();\n            var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier();\n            var matchingDataPoint = displayData.find(function (d) {\n                return (d[rangeIdentifier] === datum.data[datum.group] &&\n                    d[domainIdentifier].toString() ===\n                        datum.data.sharedStackKey &&\n                    d[groupMapsTo] === datum.group);\n            });\n            if (matchingDataPoint === undefined) {\n                matchingDataPoint = (_a = {},\n                    _a[domainIdentifier] = datum.data.sharedStackKey,\n                    _a[rangeIdentifier] = datum.data[datum.group],\n                    _a[groupMapsTo] = datum.group,\n                    _a);\n            }\n            // Show tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                data: [matchingDataPoint]\n            });\n        })\n            .on(\"mousemove\", function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on(\"click\", function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n                element: select(this),\n                datum: datum\n            });\n        })\n            .on(\"mouseout\", function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed(\"hovered\", false);\n            hoveredElement\n                .transition(self.services.transitions.getTransition(\"graph_element_mouseout_fill_update\"))\n                .attr(\"fill\", function (d) {\n                return self.model.getFillColor(d[groupMapsTo]);\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement\n            });\n        });\n    };\n    StackedBar.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll(\"path.bar\")\n            .on(\"mouseover\", null)\n            .on(\"mousemove\", null)\n            .on(\"mouseout\", null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    return StackedBar;\n}(Bar));\nexport { StackedBar };\n//# sourceMappingURL=../../../src/components/graphs/bar-stacked.js.map"]},"metadata":{},"sourceType":"module"}