{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from \"../component\";\nimport { Tools } from \"../../tools\";\nimport { DOMUtils } from \"../../services\"; // D3 Imports\n\nimport { axisBottom, axisLeft } from \"d3-axis\";\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n\n  function Grid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = \"grid\";\n    return _this;\n  }\n\n  Grid.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    } // Draw the backdrop\n\n\n    this.drawBackdrop();\n    DOMUtils.appendOrSelect(this.backdrop, \"g.x.grid\");\n    DOMUtils.appendOrSelect(this.backdrop, \"g.y.grid\");\n    this.drawXGrid(animate);\n    this.drawYGrid(animate);\n  };\n\n  Grid.prototype.drawXGrid = function (animate) {\n    var svg = this.parent;\n    var height = this.backdrop.attr(\"height\");\n    var mainXScale = this.services.cartesianScales.getMainXScale();\n    var xGrid = axisBottom(mainXScale).tickSizeInner(-height).tickSizeOuter(0); // Determine number of ticks\n\n    var numberOfTicks = Tools.getProperty(this.model.getOptions(), \"grid\", \"x\", \"numberOfTicks\");\n    xGrid.ticks(numberOfTicks);\n    var g = svg.select(\".x.grid\").attr(\"transform\", \"translate(\" + -this.backdrop.attr(\"x\") + \", \" + height + \")\");\n\n    if (animate) {\n      var transition = this.services.transitions.getTransition(\"grid-update\");\n      g.transition(transition).call(xGrid);\n    } else {\n      g.call(xGrid);\n    }\n\n    this.cleanGrid(g);\n  };\n\n  Grid.prototype.drawYGrid = function (animate) {\n    var svg = this.parent;\n    var width = this.backdrop.attr(\"width\");\n    var mainYScale = this.services.cartesianScales.getMainYScale();\n    var yGrid = axisLeft(mainYScale).tickSizeInner(-width).tickSizeOuter(0); // Determine number of ticks\n\n    var numberOfTicks = Tools.getProperty(this.model.getOptions(), \"grid\", \"y\", \"numberOfTicks\");\n    yGrid.ticks(numberOfTicks);\n    var g = svg.select(\".y.grid\").attr(\"transform\", \"translate(0, \" + -this.backdrop.attr(\"y\") + \")\");\n\n    if (animate) {\n      var transition = this.services.transitions.getTransition(\"grid-update\");\n      g.transition(transition).call(yGrid);\n    } else {\n      g.call(yGrid);\n    }\n\n    this.cleanGrid(g);\n  };\n  /**\n   * Returns the threshold for the gridline tooltips based on the mouse location.\n   * Calculated based on the mouse position between the two closest gridlines or edges of chart.\n   */\n\n\n  Grid.prototype.getGridlineThreshold = function (mousePos) {\n    // use the space between axis grid ticks to adjust the threshold for the tooltips\n    var svg = this.parent; // sort in ascending x translation value order\n\n    var gridlinesX = svg.selectAll(\".x.grid .tick\").nodes().sort(function (a, b) {\n      return Number(Tools.getTranslationValues(a).tx) - Number(Tools.getTranslationValues(b).tx);\n    }); // find the 2 gridlines on either side of the mouse\n\n    var floor = -1;\n    var ceiling;\n\n    if (!gridlinesX.length) {\n      return;\n    }\n\n    gridlinesX.forEach(function (line, i) {\n      if (mousePos[0] >= +Tools.getTranslationValues(line).tx) {\n        floor++;\n      }\n    });\n    ceiling = floor + 1 < gridlinesX.length ? floor + 1 : gridlinesX.length; // get the 'step' between chart gridlines\n\n    var line1 = gridlinesX[floor];\n    var line2 = gridlinesX[ceiling];\n    var lineSpacing; // if the mouse is on edge of charts (mouseX < first gridline || mouseX > last gridline)\n    // we can use the chart edge to determind the threshold for the gridlines\n\n    if (!line1) {\n      // we are between the first gridline and the chart edge\n      lineSpacing = +Tools.getTranslationValues(line2).tx;\n    } else if (!line2) {\n      // we need to use the chart right bounds in case there isnt a domain axis\n      var gridElement = svg.select(\"rect.chart-grid-backdrop\").node();\n      var width = DOMUtils.getSVGElementSize(gridElement).width;\n      lineSpacing = width - +Tools.getTranslationValues(line1).tx;\n    } else {\n      // there are two gridlines to use\n      lineSpacing = +Tools.getTranslationValues(line2).tx - +Tools.getTranslationValues(line1).tx;\n    }\n\n    var threshold = this.model.getOptions().tooltip.gridline.threshold; // return the threshold\n\n    return lineSpacing * threshold;\n  };\n  /**\n   * Returns the active gridlines based on the gridline threshold and mouse position.\n   * @param position mouse positon\n   */\n\n\n  Grid.prototype.getActiveGridline = function (position) {\n    var userSpecifiedThreshold = Tools.getProperty(this.model.getOptions, \"tooltip\", \"gridline\", \"threshold\");\n    var threshold = userSpecifiedThreshold ? userSpecifiedThreshold : this.getGridlineThreshold(position);\n    var svg = this.parent;\n    var xGridlines = svg.selectAll(\".x.grid .tick\").filter(function () {\n      var translations = Tools.getTranslationValues(this); // threshold for when to display a gridline tooltip\n\n      var bounds = {\n        min: Number(translations.tx) - threshold,\n        max: Number(translations.tx) + threshold\n      };\n      return bounds.min <= position[0] && position[0] <= bounds.max;\n    });\n    return xGridlines;\n  };\n\n  Grid.prototype.drawBackdrop = function () {\n    var svg = this.parent;\n    var mainXScale = this.services.cartesianScales.getMainXScale();\n    var mainYScale = this.services.cartesianScales.getMainYScale();\n\n    var _a = mainXScale.range(),\n        xScaleStart = _a[0],\n        xScaleEnd = _a[1];\n\n    var _b = mainYScale.range(),\n        yScaleEnd = _b[0],\n        yScaleStart = _b[1]; // Get height from the grid\n\n\n    this.backdrop = DOMUtils.appendOrSelect(svg, \"svg.chart-grid-backdrop\");\n    var backdropRect = DOMUtils.appendOrSelect(this.backdrop, \"rect.chart-grid-backdrop\");\n    this.backdrop.merge(backdropRect).attr(\"x\", xScaleStart).attr(\"y\", yScaleStart).attr(\"width\", xScaleEnd - xScaleStart).attr(\"height\", yScaleEnd - yScaleStart).lower();\n    backdropRect.attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n  };\n\n  Grid.prototype.cleanGrid = function (g) {\n    var options = this.model.getOptions();\n    g.selectAll(\"line\").attr(\"stroke\", options.grid.strokeColor); // Remove extra elements\n\n    g.selectAll(\"text\").remove();\n    g.select(\".domain\").remove();\n  };\n\n  return Grid;\n}(Component);\n\nexport { Grid };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/axes/grid.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","Tools","DOMUtils","axisBottom","axisLeft","Grid","_super","_this","apply","arguments","type","render","animate","drawBackdrop","appendOrSelect","backdrop","drawXGrid","drawYGrid","svg","parent","height","attr","mainXScale","services","cartesianScales","getMainXScale","xGrid","tickSizeInner","tickSizeOuter","numberOfTicks","getProperty","model","getOptions","ticks","g","select","transition","transitions","getTransition","call","cleanGrid","width","mainYScale","getMainYScale","yGrid","getGridlineThreshold","mousePos","gridlinesX","selectAll","nodes","sort","a","Number","getTranslationValues","tx","floor","ceiling","length","forEach","line","i","line1","line2","lineSpacing","gridElement","node","getSVGElementSize","threshold","tooltip","gridline","getActiveGridline","position","userSpecifiedThreshold","xGridlines","filter","translations","bounds","min","max","_a","range","xScaleStart","xScaleEnd","_b","yScaleEnd","yScaleStart","backdropRect","merge","lower","options","grid","strokeColor","remove"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from \"../component\";\nimport { Tools } from \"../../tools\";\nimport { DOMUtils } from \"../../services\";\n// D3 Imports\nimport { axisBottom, axisLeft } from \"d3-axis\";\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    function Grid() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = \"grid\";\n        return _this;\n    }\n    Grid.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        // Draw the backdrop\n        this.drawBackdrop();\n        DOMUtils.appendOrSelect(this.backdrop, \"g.x.grid\");\n        DOMUtils.appendOrSelect(this.backdrop, \"g.y.grid\");\n        this.drawXGrid(animate);\n        this.drawYGrid(animate);\n    };\n    Grid.prototype.drawXGrid = function (animate) {\n        var svg = this.parent;\n        var height = this.backdrop.attr(\"height\");\n        var mainXScale = this.services.cartesianScales.getMainXScale();\n        var xGrid = axisBottom(mainXScale)\n            .tickSizeInner(-height)\n            .tickSizeOuter(0);\n        // Determine number of ticks\n        var numberOfTicks = Tools.getProperty(this.model.getOptions(), \"grid\", \"x\", \"numberOfTicks\");\n        xGrid.ticks(numberOfTicks);\n        var g = svg\n            .select(\".x.grid\")\n            .attr(\"transform\", \"translate(\" + -this.backdrop.attr(\"x\") + \", \" + height + \")\");\n        if (animate) {\n            var transition = this.services.transitions.getTransition(\"grid-update\");\n            g.transition(transition).call(xGrid);\n        }\n        else {\n            g.call(xGrid);\n        }\n        this.cleanGrid(g);\n    };\n    Grid.prototype.drawYGrid = function (animate) {\n        var svg = this.parent;\n        var width = this.backdrop.attr(\"width\");\n        var mainYScale = this.services.cartesianScales.getMainYScale();\n        var yGrid = axisLeft(mainYScale)\n            .tickSizeInner(-width)\n            .tickSizeOuter(0);\n        // Determine number of ticks\n        var numberOfTicks = Tools.getProperty(this.model.getOptions(), \"grid\", \"y\", \"numberOfTicks\");\n        yGrid.ticks(numberOfTicks);\n        var g = svg\n            .select(\".y.grid\")\n            .attr(\"transform\", \"translate(0, \" + -this.backdrop.attr(\"y\") + \")\");\n        if (animate) {\n            var transition = this.services.transitions.getTransition(\"grid-update\");\n            g.transition(transition).call(yGrid);\n        }\n        else {\n            g.call(yGrid);\n        }\n        this.cleanGrid(g);\n    };\n    /**\n     * Returns the threshold for the gridline tooltips based on the mouse location.\n     * Calculated based on the mouse position between the two closest gridlines or edges of chart.\n     */\n    Grid.prototype.getGridlineThreshold = function (mousePos) {\n        // use the space between axis grid ticks to adjust the threshold for the tooltips\n        var svg = this.parent;\n        // sort in ascending x translation value order\n        var gridlinesX = svg\n            .selectAll(\".x.grid .tick\")\n            .nodes()\n            .sort(function (a, b) {\n            return (Number(Tools.getTranslationValues(a).tx) -\n                Number(Tools.getTranslationValues(b).tx));\n        });\n        // find the 2 gridlines on either side of the mouse\n        var floor = -1;\n        var ceiling;\n        if (!gridlinesX.length) {\n            return;\n        }\n        gridlinesX.forEach(function (line, i) {\n            if (mousePos[0] >= +Tools.getTranslationValues(line).tx) {\n                floor++;\n            }\n        });\n        ceiling = floor + 1 < gridlinesX.length ? floor + 1 : gridlinesX.length;\n        // get the 'step' between chart gridlines\n        var line1 = gridlinesX[floor];\n        var line2 = gridlinesX[ceiling];\n        var lineSpacing;\n        // if the mouse is on edge of charts (mouseX < first gridline || mouseX > last gridline)\n        // we can use the chart edge to determind the threshold for the gridlines\n        if (!line1) {\n            // we are between the first gridline and the chart edge\n            lineSpacing = +Tools.getTranslationValues(line2).tx;\n        }\n        else if (!line2) {\n            // we need to use the chart right bounds in case there isnt a domain axis\n            var gridElement = svg.select(\"rect.chart-grid-backdrop\").node();\n            var width = DOMUtils.getSVGElementSize(gridElement).width;\n            lineSpacing = width - +Tools.getTranslationValues(line1).tx;\n        }\n        else {\n            // there are two gridlines to use\n            lineSpacing =\n                +Tools.getTranslationValues(line2).tx -\n                    +Tools.getTranslationValues(line1).tx;\n        }\n        var threshold = this.model.getOptions().tooltip.gridline.threshold;\n        // return the threshold\n        return lineSpacing * threshold;\n    };\n    /**\n     * Returns the active gridlines based on the gridline threshold and mouse position.\n     * @param position mouse positon\n     */\n    Grid.prototype.getActiveGridline = function (position) {\n        var userSpecifiedThreshold = Tools.getProperty(this.model.getOptions, \"tooltip\", \"gridline\", \"threshold\");\n        var threshold = userSpecifiedThreshold\n            ? userSpecifiedThreshold\n            : this.getGridlineThreshold(position);\n        var svg = this.parent;\n        var xGridlines = svg.selectAll(\".x.grid .tick\").filter(function () {\n            var translations = Tools.getTranslationValues(this);\n            // threshold for when to display a gridline tooltip\n            var bounds = {\n                min: Number(translations.tx) - threshold,\n                max: Number(translations.tx) + threshold\n            };\n            return bounds.min <= position[0] && position[0] <= bounds.max;\n        });\n        return xGridlines;\n    };\n    Grid.prototype.drawBackdrop = function () {\n        var svg = this.parent;\n        var mainXScale = this.services.cartesianScales.getMainXScale();\n        var mainYScale = this.services.cartesianScales.getMainYScale();\n        var _a = mainXScale.range(), xScaleStart = _a[0], xScaleEnd = _a[1];\n        var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];\n        // Get height from the grid\n        this.backdrop = DOMUtils.appendOrSelect(svg, \"svg.chart-grid-backdrop\");\n        var backdropRect = DOMUtils.appendOrSelect(this.backdrop, \"rect.chart-grid-backdrop\");\n        this.backdrop\n            .merge(backdropRect)\n            .attr(\"x\", xScaleStart)\n            .attr(\"y\", yScaleStart)\n            .attr(\"width\", xScaleEnd - xScaleStart)\n            .attr(\"height\", yScaleEnd - yScaleStart)\n            .lower();\n        backdropRect.attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n    };\n    Grid.prototype.cleanGrid = function (g) {\n        var options = this.model.getOptions();\n        g.selectAll(\"line\").attr(\"stroke\", options.grid.strokeColor);\n        // Remove extra elements\n        g.selectAll(\"text\").remove();\n        g.select(\".domain\").remove();\n    };\n    return Grid;\n}(Component));\nexport { Grid };\n//# sourceMappingURL=../../../src/components/axes/grid.js.map"]},"metadata":{},"sourceType":"module"}