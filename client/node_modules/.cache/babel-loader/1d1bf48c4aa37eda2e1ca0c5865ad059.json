{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Component } from \"../component\";\nimport { Tools } from \"../../tools\";\nimport { DOMUtils } from \"../../services\";\nimport { AxisPositions, Events, ScaleTypes } from \"../../interfaces\";\nimport { select, mouse } from \"d3-selection\"; // Carbon position service\n\nimport Position, { PLACEMENTS } from \"@carbon/utils-position\"; // import the settings for the css prefix\n\nimport settings from \"carbon-components/es/globals/js/settings\";\nimport { formatTick, computeTimeIntervalName } from \"../../services/time-series\";\n\nvar Threshold =\n/** @class */\nfunction (_super) {\n  __extends(Threshold, _super);\n\n  function Threshold(model, services, configs) {\n    var _this = _super.call(this, model, services, configs) || this;\n\n    _this.type = \"threshold\";\n    _this.positionService = new Position();\n    return _this;\n  }\n\n  Threshold.prototype.render = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = false;\n    }\n\n    var _a = this.configs,\n        value = _a.value,\n        fillColor = _a.fillColor,\n        axisPosition = _a.axisPosition,\n        index = _a.index;\n    var chartprefix = Tools.getProperty(this.model.getOptions(), \"style\", \"prefix\");\n    this.thresholdClass = settings.prefix + \"--\" + chartprefix + \"--threshold\"; // We can have multiple thresholds, set an unique identifier\n\n    this.thresholdIdentifierClass = axisPosition + \"-\" + index;\n    this.threshold = DOMUtils.appendOrSelect(this.parent, \"g.\" + this.thresholdClass + \".\" + this.thresholdIdentifierClass).raise(); // Append threshold hoverable area\n\n    var thresholdRect = DOMUtils.appendOrSelect(this.threshold, \"rect.threshold-hoverable-area\"); // Append threshold line\n\n    var thresholdLine = DOMUtils.appendOrSelect(this.threshold, \"line.threshold-line\"); // Set threshold line color from configs options\n    // If not defined, the line takes the defined CSS color\n\n    thresholdLine.style(\"stroke\", fillColor);\n    var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);\n    var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition);\n    var mainXScale = this.services.cartesianScales.getMainXScale();\n    var mainYScale = this.services.cartesianScales.getMainYScale();\n    var isScaleTypeLabels = scaleType === ScaleTypes.LABELS;\n\n    var _b = mainXScale.range(),\n        xScaleStart = _b[0],\n        xScaleEnd = _b[1];\n\n    var _c = mainYScale.range(),\n        yScaleEnd = _c[0],\n        yScaleStart = _c[1];\n\n    var cartesianScales = this.services.cartesianScales;\n    var orientation = cartesianScales.getOrientation();\n\n    var getDomainValue = function (d) {\n      return cartesianScales.getDomainValue(d);\n    };\n\n    var getRangeValue = function (d) {\n      return cartesianScales.getRangeValue(d);\n    };\n\n    var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation),\n        getXValue = _d[0],\n        getYValue = _d[1];\n\n    if (axisPosition === AxisPositions.TOP || axisPosition === AxisPositions.BOTTOM) {\n      var position = getXValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0); // Position the threshold on the x scale value\n\n      this.threshold.transition(this.services.transitions.getTransition(\"threshold-update\", animate)).attr(\"transform\", \"translate(\" + position + \", \" + yScaleStart + \")\"); // Set line end point on the y-axis\n\n      thresholdLine.attr(\"y2\", yScaleEnd - yScaleStart); // Set hoverable area width and rotate it\n\n      thresholdRect.attr(\"width\", yScaleEnd - yScaleStart).classed(\"rotate\", true);\n    } else {\n      var position = getYValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0); // Position the threshold on the y scale value\n\n      this.threshold.transition(this.services.transitions.getTransition(\"threshold-update\", animate)).attr(\"transform\", \"translate(\" + xScaleStart + \", \" + position + \")\"); // Set line end point on the x-axis\n\n      thresholdLine.attr(\"x2\", xScaleEnd - xScaleStart); // Set hoverable area width\n\n      thresholdRect.attr(\"width\", xScaleEnd - xScaleStart);\n    }\n\n    var self = this;\n    this.services.events.addEventListener(Events.Threshold.SHOW, function (e) {\n      var hovered = e.detail.hoveredElement.node(); // If is this threshold\n\n      if (hovered === self.threshold) {\n        // Set label position and show it\n        _this.setThresholdLabelPosition();\n\n        _this.label.classed(\"hidden\", false);\n      }\n    });\n    this.services.events.addEventListener(Events.Threshold.HIDE, function (e) {\n      _this.label.classed(\"hidden\", true);\n    });\n    this.appendThresholdLabel();\n    this.addEventListeners();\n  };\n\n  Threshold.prototype.getFormattedValue = function () {\n    var _a = this.configs,\n        value = _a.value,\n        axisPosition = _a.axisPosition;\n    var options = this.model.getOptions();\n    var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition); // If scale is time, format the threshold date as the ticks format\n\n    if (scaleType === ScaleTypes.TIME) {\n      var isVertical = [AxisPositions.LEFT, AxisPositions.RIGHT].includes(axisPosition);\n      var mainXScale = this.services.cartesianScales.getMainXScale();\n      var mainYScale = this.services.cartesianScales.getMainYScale();\n      var scale = isVertical ? mainYScale : mainXScale;\n      var timeScaleOptions = Tools.getProperty(options, \"timeScale\");\n      var timeInterval = computeTimeIntervalName(scale.ticks());\n      return formatTick(value, 0, timeInterval, timeScaleOptions);\n    }\n\n    return value.toLocaleString(\"en\");\n  };\n\n  Threshold.prototype.appendThresholdLabel = function () {\n    var _a = this.configs,\n        value = _a.value,\n        valueFormatter = _a.valueFormatter,\n        fillColor = _a.fillColor,\n        _b = _a.label,\n        label = _b === void 0 ? \"Threshold\" : _b;\n    var holder = select(this.services.domUtils.getHolder()); // Format the threshold value using valueFormatter if defined in user-provided options\n\n    var formattedValue = valueFormatter ? valueFormatter(value) : this.getFormattedValue();\n    this.label = DOMUtils.appendOrSelect(holder, \"div.\" + this.thresholdClass + \"--label.\" + this.thresholdIdentifierClass);\n    this.label.html(label + \": \" + formattedValue).classed(\"hidden\", true).style(\"background-color\", fillColor);\n  };\n\n  Threshold.prototype.setThresholdLabelPosition = function () {\n    var holder = this.services.domUtils.getHolder();\n    var target = this.label.node();\n    var mouseRelativePos = mouse(holder); // Find out whether threshold label should be shown on the left or right side\n\n    var bestPlacementOption = this.positionService.findBestPlacementAt({\n      left: mouseRelativePos[0],\n      top: mouseRelativePos[1]\n    }, target, [PLACEMENTS.RIGHT, PLACEMENTS.LEFT, PLACEMENTS.TOP, PLACEMENTS.BOTTOM], function () {\n      return {\n        width: holder.offsetWidth,\n        height: holder.offsetHeight\n      };\n    }); // Get coordinates to where label should be positioned\n\n    var pos = this.positionService.findPositionAt({\n      left: mouseRelativePos[0],\n      top: mouseRelativePos[1]\n    }, target, bestPlacementOption);\n    this.positionService.setElement(target, pos);\n  };\n\n  Threshold.prototype.addEventListeners = function () {\n    var self = this; // Add events to the threshold hoverable area\n\n    DOMUtils.appendOrSelect(this.threshold, \"rect\").on(\"mouseover mousemove\", function () {\n      self.threshold.classed(\"active\", true);\n      self.services.events.dispatchEvent(Events.Threshold.SHOW, {\n        hoveredElement: select(self.threshold)\n      });\n    }).on(\"mouseout\", function () {\n      self.threshold.classed(\"active\", false);\n      self.services.events.dispatchEvent(Events.Threshold.HIDE, {\n        hoveredElement: select(self.threshold)\n      });\n    });\n  };\n\n  return Threshold;\n}(Component);\n\nexport { Threshold };","map":{"version":3,"sources":["/Users/nicholasrenotte/Desktop/Regression/app/client/node_modules/@carbon/charts/components/essentials/threshold.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","Tools","DOMUtils","AxisPositions","Events","ScaleTypes","select","mouse","Position","PLACEMENTS","settings","formatTick","computeTimeIntervalName","Threshold","_super","model","services","configs","_this","call","type","positionService","render","animate","_a","value","fillColor","axisPosition","index","chartprefix","getProperty","getOptions","thresholdClass","prefix","thresholdIdentifierClass","threshold","appendOrSelect","parent","raise","thresholdRect","thresholdLine","style","scale","cartesianScales","getScaleByPosition","scaleType","getScaleTypeByPosition","mainXScale","getMainXScale","mainYScale","getMainYScale","isScaleTypeLabels","LABELS","_b","range","xScaleStart","xScaleEnd","_c","yScaleEnd","yScaleStart","orientation","getOrientation","getDomainValue","getRangeValue","_d","flipDomainAndRangeBasedOnOrientation","getXValue","getYValue","TOP","BOTTOM","position","step","transition","transitions","getTransition","attr","classed","self","events","addEventListener","SHOW","e","hovered","detail","hoveredElement","node","setThresholdLabelPosition","label","HIDE","appendThresholdLabel","addEventListeners","getFormattedValue","options","TIME","isVertical","LEFT","RIGHT","includes","timeScaleOptions","timeInterval","ticks","toLocaleString","valueFormatter","holder","domUtils","getHolder","formattedValue","html","target","mouseRelativePos","bestPlacementOption","findBestPlacementAt","left","top","width","offsetWidth","height","offsetHeight","pos","findPositionAt","setElement","on","dispatchEvent"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component } from \"../component\";\nimport { Tools } from \"../../tools\";\nimport { DOMUtils } from \"../../services\";\nimport { AxisPositions, Events, ScaleTypes } from \"../../interfaces\";\nimport { select, mouse } from \"d3-selection\";\n// Carbon position service\nimport Position, { PLACEMENTS } from \"@carbon/utils-position\";\n// import the settings for the css prefix\nimport settings from \"carbon-components/es/globals/js/settings\";\nimport { formatTick, computeTimeIntervalName } from \"../../services/time-series\";\nvar Threshold = /** @class */ (function (_super) {\n    __extends(Threshold, _super);\n    function Threshold(model, services, configs) {\n        var _this = _super.call(this, model, services, configs) || this;\n        _this.type = \"threshold\";\n        _this.positionService = new Position();\n        return _this;\n    }\n    Threshold.prototype.render = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        var _a = this.configs, value = _a.value, fillColor = _a.fillColor, axisPosition = _a.axisPosition, index = _a.index;\n        var chartprefix = Tools.getProperty(this.model.getOptions(), \"style\", \"prefix\");\n        this.thresholdClass = settings.prefix + \"--\" + chartprefix + \"--threshold\";\n        // We can have multiple thresholds, set an unique identifier\n        this.thresholdIdentifierClass = axisPosition + \"-\" + index;\n        this.threshold = DOMUtils.appendOrSelect(this.parent, \"g.\" + this.thresholdClass + \".\" + this.thresholdIdentifierClass).raise();\n        // Append threshold hoverable area\n        var thresholdRect = DOMUtils.appendOrSelect(this.threshold, \"rect.threshold-hoverable-area\");\n        // Append threshold line\n        var thresholdLine = DOMUtils.appendOrSelect(this.threshold, \"line.threshold-line\");\n        // Set threshold line color from configs options\n        // If not defined, the line takes the defined CSS color\n        thresholdLine.style(\"stroke\", fillColor);\n        var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);\n        var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition);\n        var mainXScale = this.services.cartesianScales.getMainXScale();\n        var mainYScale = this.services.cartesianScales.getMainYScale();\n        var isScaleTypeLabels = scaleType === ScaleTypes.LABELS;\n        var _b = mainXScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];\n        var _c = mainYScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];\n        var cartesianScales = this.services.cartesianScales;\n        var orientation = cartesianScales.getOrientation();\n        var getDomainValue = function (d) { return cartesianScales.getDomainValue(d); };\n        var getRangeValue = function (d) { return cartesianScales.getRangeValue(d); };\n        var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _d[0], getYValue = _d[1];\n        if (axisPosition === AxisPositions.TOP ||\n            axisPosition === AxisPositions.BOTTOM) {\n            var position = getXValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0);\n            // Position the threshold on the x scale value\n            this.threshold\n                .transition(this.services.transitions.getTransition(\"threshold-update\", animate))\n                .attr(\"transform\", \"translate(\" + position + \", \" + yScaleStart + \")\");\n            // Set line end point on the y-axis\n            thresholdLine.attr(\"y2\", yScaleEnd - yScaleStart);\n            // Set hoverable area width and rotate it\n            thresholdRect\n                .attr(\"width\", yScaleEnd - yScaleStart)\n                .classed(\"rotate\", true);\n        }\n        else {\n            var position = getYValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0);\n            // Position the threshold on the y scale value\n            this.threshold\n                .transition(this.services.transitions.getTransition(\"threshold-update\", animate))\n                .attr(\"transform\", \"translate(\" + xScaleStart + \", \" + position + \")\");\n            // Set line end point on the x-axis\n            thresholdLine.attr(\"x2\", xScaleEnd - xScaleStart);\n            // Set hoverable area width\n            thresholdRect.attr(\"width\", xScaleEnd - xScaleStart);\n        }\n        var self = this;\n        this.services.events.addEventListener(Events.Threshold.SHOW, function (e) {\n            var hovered = e.detail.hoveredElement.node();\n            // If is this threshold\n            if (hovered === self.threshold) {\n                // Set label position and show it\n                _this.setThresholdLabelPosition();\n                _this.label.classed(\"hidden\", false);\n            }\n        });\n        this.services.events.addEventListener(Events.Threshold.HIDE, function (e) {\n            _this.label.classed(\"hidden\", true);\n        });\n        this.appendThresholdLabel();\n        this.addEventListeners();\n    };\n    Threshold.prototype.getFormattedValue = function () {\n        var _a = this.configs, value = _a.value, axisPosition = _a.axisPosition;\n        var options = this.model.getOptions();\n        var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition);\n        // If scale is time, format the threshold date as the ticks format\n        if (scaleType === ScaleTypes.TIME) {\n            var isVertical = [\n                AxisPositions.LEFT,\n                AxisPositions.RIGHT\n            ].includes(axisPosition);\n            var mainXScale = this.services.cartesianScales.getMainXScale();\n            var mainYScale = this.services.cartesianScales.getMainYScale();\n            var scale = isVertical ? mainYScale : mainXScale;\n            var timeScaleOptions = Tools.getProperty(options, \"timeScale\");\n            var timeInterval = computeTimeIntervalName(scale.ticks());\n            return formatTick(value, 0, timeInterval, timeScaleOptions);\n        }\n        return value.toLocaleString(\"en\");\n    };\n    Threshold.prototype.appendThresholdLabel = function () {\n        var _a = this.configs, value = _a.value, valueFormatter = _a.valueFormatter, fillColor = _a.fillColor, _b = _a.label, label = _b === void 0 ? \"Threshold\" : _b;\n        var holder = select(this.services.domUtils.getHolder());\n        // Format the threshold value using valueFormatter if defined in user-provided options\n        var formattedValue = valueFormatter\n            ? valueFormatter(value)\n            : this.getFormattedValue();\n        this.label = DOMUtils.appendOrSelect(holder, \"div.\" + this.thresholdClass + \"--label.\" + this.thresholdIdentifierClass);\n        this.label\n            .html(label + \": \" + formattedValue)\n            .classed(\"hidden\", true)\n            .style(\"background-color\", fillColor);\n    };\n    Threshold.prototype.setThresholdLabelPosition = function () {\n        var holder = this.services.domUtils.getHolder();\n        var target = this.label.node();\n        var mouseRelativePos = mouse(holder);\n        // Find out whether threshold label should be shown on the left or right side\n        var bestPlacementOption = this.positionService.findBestPlacementAt({\n            left: mouseRelativePos[0],\n            top: mouseRelativePos[1]\n        }, target, [\n            PLACEMENTS.RIGHT,\n            PLACEMENTS.LEFT,\n            PLACEMENTS.TOP,\n            PLACEMENTS.BOTTOM\n        ], function () { return ({\n            width: holder.offsetWidth,\n            height: holder.offsetHeight\n        }); });\n        // Get coordinates to where label should be positioned\n        var pos = this.positionService.findPositionAt({\n            left: mouseRelativePos[0],\n            top: mouseRelativePos[1]\n        }, target, bestPlacementOption);\n        this.positionService.setElement(target, pos);\n    };\n    Threshold.prototype.addEventListeners = function () {\n        var self = this;\n        // Add events to the threshold hoverable area\n        DOMUtils.appendOrSelect(this.threshold, \"rect\")\n            .on(\"mouseover mousemove\", function () {\n            self.threshold.classed(\"active\", true);\n            self.services.events.dispatchEvent(Events.Threshold.SHOW, {\n                hoveredElement: select(self.threshold)\n            });\n        })\n            .on(\"mouseout\", function () {\n            self.threshold.classed(\"active\", false);\n            self.services.events.dispatchEvent(Events.Threshold.HIDE, {\n                hoveredElement: select(self.threshold)\n            });\n        });\n    };\n    return Threshold;\n}(Component));\nexport { Threshold };\n//# sourceMappingURL=../../../src/components/essentials/threshold.js.map"]},"metadata":{},"sourceType":"module"}